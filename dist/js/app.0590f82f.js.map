{"version":3,"file":"js/app.0590f82f.js","mappings":"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","sources":["webpack://flowRecord/./src/Layout/MyMain.vue","webpack://flowRecord/src/Layout/MyMain.vue","webpack://flowRecord/./src/Layout/MyMain.vue?c867","webpack://flowRecord/./src/Layout/MyMain.vue?e489","webpack://flowRecord/./src/components/el-select/CommonSelect.vue","webpack://flowRecord/src/components/el-select/CommonSelect.vue","webpack://flowRecord/./src/components/el-select/CommonSelect.vue?6a9c","webpack://flowRecord/./src/components/el-select/CommonSelect.vue?1fad","webpack://flowRecord/./src/components/export-word2.vue","webpack://flowRecord/./src/utils/export.js","webpack://flowRecord/./src/components/echarts/index.vue","webpack://flowRecord/src/components/echarts/index.vue","webpack://flowRecord/./src/components/echarts/index.vue?85f1","webpack://flowRecord/./src/components/echarts/index.vue?70f6","webpack://flowRecord/src/components/export-word2.vue","webpack://flowRecord/./src/components/export-word2.vue?801f","webpack://flowRecord/./src/components/export-word2.vue?2c2f","webpack://flowRecord/./src/pages/select-type.vue","webpack://flowRecord/src/pages/select-type.vue","webpack://flowRecord/./src/pages/select-type.vue?0a59","webpack://flowRecord/./src/pages/select-type.vue?6c57","webpack://flowRecord/./src/api/select/flowmeter_medius.js","webpack://flowRecord/./src/App.vue","webpack://flowRecord/./src/Layout/MyHeader.vue","webpack://flowRecord/src/Layout/MyHeader.vue","webpack://flowRecord/./src/Layout/MyHeader.vue?8cec","webpack://flowRecord/./src/Layout/MyHeader.vue?1a72","webpack://flowRecord/./src/Layout/MyFooter.vue","webpack://flowRecord/./src/components/information/Chat.vue","webpack://flowRecord/src/components/information/Chat.vue","webpack://flowRecord/./src/components/information/Chat.vue?ceaa","webpack://flowRecord/./src/components/information/Chat.vue?d853","webpack://flowRecord/./src/components/information/Process.vue","webpack://flowRecord/src/components/information/Process.vue","webpack://flowRecord/./src/components/information/Process.vue?1c8f","webpack://flowRecord/./src/components/information/Process.vue?5df6","webpack://flowRecord/./src/components/information/Fluid.vue","webpack://flowRecord/./src/components/information/Outcome.vue","webpack://flowRecord/src/components/information/Outcome.vue","webpack://flowRecord/./src/components/information/Outcome.vue?e25a","webpack://flowRecord/./src/components/information/Outcome.vue?ebc2","webpack://flowRecord/src/components/information/Fluid.vue","webpack://flowRecord/./src/components/information/Fluid.vue?a413","webpack://flowRecord/./src/components/information/Fluid.vue?3b78","webpack://flowRecord/./src/components/information/Size.vue","webpack://flowRecord/./src/api/select/bore_information.js","webpack://flowRecord/src/components/information/Size.vue","webpack://flowRecord/./src/components/information/Size.vue?6e46","webpack://flowRecord/./src/components/information/Size.vue?993c","webpack://flowRecord/./src/components/information/Loss.vue","webpack://flowRecord/src/components/information/Loss.vue","webpack://flowRecord/./src/components/information/Loss.vue?58b7","webpack://flowRecord/./src/components/information/Loss.vue?f60e","webpack://flowRecord/./src/components/information/Specs.vue","webpack://flowRecord/./src/api/select/public_information.js","webpack://flowRecord/src/components/information/Specs.vue","webpack://flowRecord/./src/components/information/Specs.vue?e316","webpack://flowRecord/./src/components/information/Specs.vue?279b","webpack://flowRecord/./src/components/information/Draw.vue","webpack://flowRecord/src/components/information/Draw.vue","webpack://flowRecord/./src/components/information/Draw.vue?f838","webpack://flowRecord/./src/components/information/Draw.vue?7d43","webpack://flowRecord/./src/components/Db.vue","webpack://flowRecord/./src/api/create/createDB.js","webpack://flowRecord/./src/api/insert/addflowmeter.js","webpack://flowRecord/./src/api/insert/addpublic_information.js","webpack://flowRecord/src/components/Db.vue","webpack://flowRecord/./src/components/Db.vue?7fb0","webpack://flowRecord/./src/components/Db.vue?529a","webpack://flowRecord/src/Layout/MyFooter.vue","webpack://flowRecord/./src/Layout/MyFooter.vue?12c6","webpack://flowRecord/./src/Layout/MyFooter.vue?369c","webpack://flowRecord/src/App.vue","webpack://flowRecord/./src/App.vue?51dd","webpack://flowRecord/./src/App.vue?0e40","webpack://flowRecord/./src/router/index.js","webpack://flowRecord/./src/store/index.js","webpack://flowRecord/./src/main.js","webpack://flowRecord/webpack/bootstrap","webpack://flowRecord/webpack/runtime/amd options","webpack://flowRecord/webpack/runtime/chunk loaded","webpack://flowRecord/webpack/runtime/compat get default export","webpack://flowRecord/webpack/runtime/define property getters","webpack://flowRecord/webpack/runtime/ensure chunk","webpack://flowRecord/webpack/runtime/get javascript chunk filename","webpack://flowRecord/webpack/runtime/get mini-css chunk filename","webpack://flowRecord/webpack/runtime/global","webpack://flowRecord/webpack/runtime/hasOwnProperty shorthand","webpack://flowRecord/webpack/runtime/load script","webpack://flowRecord/webpack/runtime/make namespace object","webpack://flowRecord/webpack/runtime/node module decorator","webpack://flowRecord/webpack/runtime/publicPath","webpack://flowRecord/webpack/runtime/jsonp chunk loading","webpack://flowRecord/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div')\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n  \n    <!-- <router-view/> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MyMain'\n}\n</script>\n\n<style>\n\n\n</style>\n\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyMain.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyMain.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyMain.vue?vue&type=template&id=68fcc2e9&\"\nimport script from \"./MyMain.vue?vue&type=script&lang=js&\"\nexport * from \"./MyMain.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-cascader',{attrs:{\"value\":_vm.value,\"options\":_vm.options,\"show-all-levels\":false,\"disabled\":_vm.isDisabled},on:{\"change\":_vm.handleChange}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <el-cascader :value=\"value\" :options=\"options\" :show-all-levels=\"false\" :disabled=\"isDisabled\" @change=\"handleChange\">\r\n    </el-cascader>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        value: {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        options: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        isDisabled: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    },\r\n    \r\n    methods: {\r\n    handleChange(selectedValues) {\r\n      this.$emit('input', selectedValues);\r\n    }\r\n  },\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommonSelect.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CommonSelect.vue?vue&type=template&id=15c66d43&\"\nimport script from \"./CommonSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./CommonSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('el-row',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.exportWord()}}},[_vm._v(\"点击导出\")])],1),_c('div',{staticClass:\"box\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.Data}},[_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"用户名称\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"number\",\"label\":\"安装位号\",\"width\":\"180\"}}),_c('el-table-column',{attrs:{\"prop\":\"project\",\"label\":\"项目名称\"}}),_c('el-table-column',{attrs:{\"prop\":\"connect_phone\",\"label\":\"联系人/电话\"}}),_c('el-table-column',{attrs:{\"prop\":\"flowtype\",\"label\":\"流量计类型\"}})],1)],1),_c('CanvasEcharts',{ref:\"canvas\",attrs:{\"option\":_vm.option}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\r\n * 导出word文档（带图片）\r\n * \r\n */\r\nimport angularExpressions from 'angular-expressions';\r\nimport Docxtemplater from 'docxtemplater'\r\nimport PizZip from 'pizzip'\r\nimport JSZipUtils from 'jszip-utils'\r\nimport { saveAs } from 'file-saver'\r\n/**\r\n * 将base64格式的数据转为ArrayBuffer\r\n * @param {Object} dataURL base64格式的数据\r\n */\r\nfunction base64DataURLToArrayBuffer(dataURL) {\r\n    const base64Regex = /^data:image\\/(png|jpg|jpeg|svg|svg\\+xml);base64,/;\r\n    if (!base64Regex.test(dataURL)) {\r\n        return false;\r\n    }\r\n    const stringBase64 = dataURL.replace(base64Regex, \"\");\r\n    let binaryString;\r\n    if (typeof window !== \"undefined\") {\r\n        binaryString = window.atob(stringBase64);\r\n    } else {\r\n        binaryString = Buffer.from(stringBase64, \"base64\").toString(\"binary\");\r\n    }\r\n    const len = binaryString.length;\r\n    const bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n        const ascii = binaryString.charCodeAt(i);\r\n        bytes[i] = ascii;\r\n    }\r\n    return bytes.buffer;\r\n}\r\n\r\n/**\r\n * 导出word文档\r\n * @param {object} tempDocxPath 模板文件路径\r\n * @param {object} data    导出的数据\r\n * @param {object} fileName  导出文件的名字\r\n * @param {object} imgSize  自定义图片尺寸\r\n */\r\nexport const ExportBriefDataDocx = (tempDocxPath, data, fileName,imgSize) => {\r\n    console.log(111, tempDocxPath, data, fileName,imgSize)\r\n    //这里要引入处理图片的插件\r\n    var ImageModule = require('docxtemplater-image-module-free');\r\n    var expressions = require('angular-expressions')\r\n    var assign = require('lodash/assign')\r\n    var last = require(\"lodash/last\")\r\n    expressions.filters.lower = function (input) {\r\n        // This condition should be used to make sure that if your input is\r\n        // undefined, your output will be undefined as well and will not\r\n        // throw an error\r\n        if (!input) return input\r\n        // toLowerCase() 方法用于把字符串转换为小写。\r\n        return input.toLowerCase()\r\n    }\r\n    function angularParser(tag) {\r\n        tag = tag\r\n            .replace(/^\\.$/, 'this')\r\n            .replace(/('|‘)/g, \"'\")\r\n            .replace(/(“|”)/g, '\"')\r\n        const expr = expressions.compile(tag)\r\n        return {\r\n            get: function (scope, context) {\r\n                let obj = {}\r\n                const index = last(context.scopePathItem)\r\n                const scopeList = context.scopeList\r\n                const num = context.num\r\n                for (let i = 0, len = num + 1; i < len; i++) {\r\n                    obj = assign(obj, scopeList[i])\r\n                }\r\n                //word模板中使用 $index+1 创建递增序号\r\n                obj = assign(obj, { $index: index })\r\n                return expr(scope, obj)\r\n            }\r\n        }\r\n    }\r\n    //读出并获得模板文件的二进制内容\r\n    JSZipUtils.getBinaryContent(tempDocxPath, (error, content) => {\r\n        if (error) {\r\n            console.log(error)\r\n        }\r\n        expressions.filters.size = function (input, width, height) {\r\n            return {\r\n                data: input,\r\n                size: [width, height],\r\n            };\r\n        };\r\n        let opts = {}\r\n        opts = {\r\n            //图像是否居中\r\n            centered: true\r\n        };\r\n        opts.getImage = (chartId) => {\r\n            //将base64的数据转为ArrayBuffer\r\n            return base64DataURLToArrayBuffer(chartId);\r\n        }\r\n        opts.getSize = function (img, tagValue, tagName) {\r\n            //自定义指定图像大小\r\n            if (imgSize.hasOwnProperty(tagName)) {\r\n                return imgSize[tagName];\r\n            } else {\r\n                return [600, 400];\r\n            }\r\n        }\r\n        // 创建一个JSZip实例，内容为模板的内容        \r\n        const zip = new PizZip(content)\r\n        // 创建并加载 Docxtemplater 实例对象\r\n        // 设置模板变量的值\r\n\t\tlet doc = new Docxtemplater();\r\n        doc.attachModule(new ImageModule(opts));\r\n        doc.loadZip(zip);\r\n        doc.setOptions({parser:angularParser});\r\n        doc.setData(data) //填充文档对应数据\r\n        try {\r\n            // 呈现文档，会将内部所有变量替换成值，\r\n            doc.render()\r\n        } catch (error) {\r\n            const e = {\r\n                message: error.message,\r\n                name: error.name,\r\n                stack: error.stack,\r\n                properties: error.properties\r\n            }\r\n            console.log('err',{ error: e })\r\n            // 当使用json记录时，此处抛出错误信息\r\n            throw error\r\n        }\r\n        // 生成一个代表Docxtemplater对象的zip文件（不是一个真实的文件，而是在内存中的表示）\r\n        const out = doc.getZip().generate({\r\n            type: 'blob',\r\n            mimeType: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        })\r\n        // 将目标文件对象保存为目标类型的文件，并命名\r\n        saveAs(out, fileName)\r\n    })\r\n}\r\n/**\r\n * 将图片的url路径转为base64路径\r\n * 可以用await等待Promise的异步返回\r\n * @param {Object} imgUrl 图片路径\r\n */\r\nexport function getBase64Sync(imgUrl) {\r\n    return new Promise(function (resolve, reject) {\r\n        // 一定要设置为let，不然图片不显示\r\n        let image = new Image();\r\n        //图片地址\r\n        image.src = imgUrl;\r\n        // 解决跨域问题\r\n        image.setAttribute(\"crossOrigin\", '*');  // 支持跨域图片\r\n        // image.onload为异步加载\r\n        image.onload = function () {\r\n            let canvas = document.createElement(\"canvas\");\r\n            canvas.width = image.width; \r\n            canvas.height = image.height;\r\n            let context = canvas.getContext(\"2d\");\r\n            context.drawImage(image, 0, 0, image.width, image.height);\r\n            //图片后缀名\r\n            let ext = image.src.substring(image.src.lastIndexOf(\".\") + 1).toLowerCase();\r\n            //图片质量\r\n            let quality = 0.8;\r\n            //转成base64\r\n            let dataurl = canvas.toDataURL(\"image/\" + ext, quality);\r\n            //返回\r\n            resolve(dataurl);\r\n        };\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"canvas-container\"},[_c('canvas',{ref:\"canvans\",attrs:{\"width\":_vm.width,\"height\":_vm.height}})])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"canvas-container\">\n      <canvas ref=\"canvans\" :width=\"width\" :height=\"height\"></canvas>\n    </div>\n  </template>\n  \n  <script>\n  // import echarts from \"echarts/dist/echarts\";\n  import * as echarts from 'echarts';\n  export default {\n    name: \"CanvasIndex\",\n  \n    props: {\n      option: {\n        type: Object,\n        required: true,\n      },\n      width: {\n        type: String,\n        default: \"600\",\n      },\n      height: {\n        type: String,\n        default: \"300\",\n      },\n    },\n  \n    data() {\n      return {\n        chart: null,\n        canvans: null,\n        ctx: null,\n      };\n    },\n  \n    mounted() {\n      this.$nextTick(() => {\n        this.canvans = this.$refs.canvans;\n        this.ctx = this.canvans.getContext(\"2d\");\n        let chart = echarts.init(this.canvans);\n        chart.setOption(this.option);\n        this.chart = chart;\n      });\n    },\n  \n    methods: {\n      /**\n       * 下载canvas中画的echarts图标，返回base64格式图片\n       */\n      download() {\n        const _this = this;\n        let imageDate = this.chart.getDataURL();\n        let image = new Image();\n        image.src = imageDate;\n        return (image.onload = function () {\n          _this.ctx.drawImage(image, 0, 0);\n          let base64Data = _this.canvans.toDataURL(\"image/png\");\n          return base64Data;\n        });\n      },\n      /**\n       * 下载canvas中画的echarts图标，返回图片下载\n       */\n      downloadImg() {\n        let imageDate = this.chart.getDataURL();\n        let image = new Image();\n        image.src = imageDate;\n        image.onload = function () {\n          _this.ctx.drawImage(image, 0, 0);\n          let base64Data = _this.canvans.toDataURL(\"image/png\");\n          let link = document.createElement(\"a\");\n          link.href = base64Data;\n          link.download = \"chart.png\";\n          link.click();\n        };\n      },\n    },\n  };\n  </script>\n  \n  <style  scoped>\n  .canvas-container {\n  display: none;\n}\n\n  </style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=81a2a1aa&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=81a2a1aa&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"81a2a1aa\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <el-row>\n      <el-button type=\"primary\" @click=\"exportWord()\">点击导出</el-button>\n    </el-row>\n    <div class=\"box\">\n      <el-table :data=\"Data\" style=\"width: 100%\">\n        <el-table-column prop=\"username\" label=\"用户名称\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"number\" label=\"安装位号\" width=\"180\">\n        </el-table-column>\n        <el-table-column prop=\"project\" label=\"项目名称\"> </el-table-column>\n        <el-table-column prop=\"connect_phone\" label=\"联系人/电话\">\n        </el-table-column>\n        <el-table-column prop=\"flowtype\" label=\"流量计类型\"> </el-table-column>\n      </el-table>\n    </div>\n    <CanvasEcharts ref=\"canvas\" :option=\"option\"></CanvasEcharts>\n  </div>\n</template>\n\n<script>\n    import { ExportBriefDataDocx, getBase64Sync } from \"@/utils/export\";\n    import CanvasEcharts from \"@/components/echarts\";\n    import {bus} from '@/main.js'\n    export default {\n      name: \"exportWord\",\n      data() {\n        return {\n          target:100,\n          min_value:100,\n          max_value:1000,\n          flows:[200,400,500],\n          inputs: [\n          // 第一个字段：流量（%）\n          [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100], \n          // 第二个字段：流量（kg/h）\n          // [0,100,200,300,400,500,600,700,800,900,1000],\n          //第三个字段测量精度(%)\n          // [,1,1,1,1,1,1,1,1,1,1] ,\n          // 第四个字段：压力损失（KPa）\n          [6.56, 11.08, 16.79, 23.68, 31.75, 41.00, 51.43, 63.05, 75.84, 89.82, 104.97]\n        ],\n        chartData:[],\n\n         option :{\n\n          },\n          Data: [\n            {\n              username: \"中国石油化工股份有限公司西南油气分公司\",\n              project: \"川西气田雷口坡组气藏开发建设项目\",\n              flowtype: \"涡街流量计\",\n              number: \"6780-FT-30201\",\n              connect_phone: \"胡总/123456789\",\n\n            },\n          ],\n          imglist1: [\n            {\n              imgUrl: \"\",\n              //   imgUrl: \"/image1.png\",\n            },\n          ],\n        };\n      },\n      created(){\n  bus.$on('chart-data-updated', (data) => {\n    // 在这里处理接收到的数据\n    this.chartData=data\n    console.log(\"导出接受到了数据\",this.chartData);\n  });\n\n        this.option={\n          tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n              },\n              formatter: \"{b}: {c}\"\n            },\n            xAxis: {\n              type: 'category',\n              name: '流量(kg/h)',\n              axisLabel: {\n                fontSize: 9 // 设置字体大小为 10px\n              },\n              minorTick:{\n                show:true\n              },\n              minorSplitLine: {\n                show: true\n              }\n            },\n            yAxis: [\n              {\n                type: 'value',\n                name: '测量误差(%)',\n                min: 0,\n                max: 2,\n                interval: 0.2,\n                minorTick:{\n                  show:true\n                },\n                minorSplitLine: {\n                  show: true\n                }\n              },\n              {\n                type: 'value',\n                name: '压损(KPa)',\n                min: 0,\n                max: 120,\n                interval: 20\n              }\n            ],\n            legend: {\n              data: ['测量误差', '压损'],\n              bottom: 10,\n              formatter: function(name) {\n                var color = '';\n                if (name == '测量误差') {\n                  color = 'blue';\n                } else if (name == '压损') {\n                  color = 'orange';\n                }\n                return name;\n              }\n            },\n            series: [\n              {\n                name: '测量误差',\n                type: 'line',\n                smooth: true,\n                data: this.calculate(),\n                itemStyle: {\n                  normal: {\n                    color: 'blue'\n                  }\n                }\n              },\n              {\n                name: '压损',\n                type: 'line',\n                yAxisIndex: 1,\n                data: this.inputs[3],\n                itemStyle: {\n                  normal: {\n                    color: 'orange'\n                  }\n                }\n              },\n              {\n                  name:String(this.flows[0]),\n                  type:'line',\n                  data:[[this.flows[0],0],[this.flows[0],120]],\n                  itemStyle: {\n                    normal: {\n                      type: 'dashed',\n                      color: 'red'\n                   }\n                 }\n              },\n              {\n                  name:String(this.flows[1]),\n                  type:'line',\n                  data:[[this.flows[1],0],[this.flows[1],120]],\n                  itemStyle: {\n                    normal: {\n                      type: 'dashed',\n                      color: 'red'\n                   }\n                 }\n              },\n              {\n                  name:String(this.flows[0]),\n                  type:'line',\n                  data:[[this.flows[2],0],[this.flows[2],120]],\n                  itemStyle: {\n                    normal: {\n                      type: 'dashed',\n                      color: 'red'\n                   }\n                 }\n              },\n            ]\n\n        }\n\n      },\n      components: {\n        CanvasEcharts,\n      },\n      methods: {\n      calculate(){\n        const data=[];\n          if(this.min_value==(0+this.max_value*0.1)){\n            for(let i=0;i<this.min_value;i+=0.1*this.min_value){\n              var y=Math.pow(i/this.min_value,-0.6);\n              data.push([i,y])\n            }\n            for(let j=this.min_value;j<=this.max_value;j+=0.1*this.max_value){\n              data.push([j,1.0]);\n            }\n          }else{\n            for(let i=0;i<=this. max_value;i+=0.1*this.max_value){\n             if(i<this.min_value){\n              var y=Math.pow(i/this.min_value,-0.6);\n              data.push([i,y])\n             }else{\n              data.push([i,1.0]);\n             }\n          }\n          }\n          return data;\n        },\n        async exportWord() {\n          // 将图片路径转化为base64格式\n          //   for (let i in this.imglist1) {\n          //     this.imglist1[i].imgUrl = await getBase64Sync(this.imglist1[i].imgUrl);\n          //   }\n          this.imglist1[0].imgUrl = this.$refs.canvas.download();\n          let data = {\n            username: \"中国石油化工股份有限公司西南油气分公司\",\n            project: \"川西气田雷口坡组气藏开发建设项目\",\n            flowtype: \"涡街流量计\",\n            number: \"6780-FT-30201\",\n            connect_phone: \"18159300958\",\n            imglist1: this.imglist1,\n          };\n          let imgSize = {\n            //控制导出word的图片大小\n            imgurl: [2000, 2000],\n          };\n          ExportBriefDataDocx(\"/word.docx\", data, \"words\", imgSize);\n        },\n      },\n    };\n    </script>\n<style scoped>\n.box {\n  display: inline-block;\n  width: 680px;\n  height: 1123px;\n  margin: 50px auto;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./export-word2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./export-word2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./export-word2.vue?vue&type=template&id=7391b074&scoped=true&\"\nimport script from \"./export-word2.vue?vue&type=script&lang=js&\"\nexport * from \"./export-word2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./export-word2.vue?vue&type=style&index=0&id=7391b074&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7391b074\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"selectType\"}},[_c('div',{staticClass:\"all\"},[_vm._m(0),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"用户名称 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入用户名\"},model:{value:(_vm.inputOne),callback:function ($$v) {_vm.inputOne=$$v},expression:\"inputOne\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"项目名称 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入项目名称\"},model:{value:(_vm.inputTwo),callback:function ($$v) {_vm.inputTwo=$$v},expression:\"inputTwo\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"流量计类型\")]),_vm._v(\"          \"),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsOne},model:{value:(_vm.selectedValue),callback:function ($$v) {_vm.selectedValue=$$v},expression:\"selectedValue\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"安装位号 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入位号\"},model:{value:(_vm.inputThree),callback:function ($$v) {_vm.inputThree=$$v},expression:\"inputThree\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"联系人/电话\")]),_vm._v(\"   \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入电话\"},model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}})],1)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"项目信息 Project\")]),_c('div',{staticClass:\"sanjiao\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"selectType\">\n    <div class=\"all\">\n      <div class=\"biaotilan\">\n        <div class=\"container\">项目信息 Project</div>\n        <div class=\"sanjiao\"></div>\n      </div>\n      <div class=\"request\">\n        <span>用户名称 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <el-input v-model=\"inputOne\" placeholder=\"请输入用户名\" class=\"input\"></el-input>\n      </div>\n      <div class=\"request\">\n        <span>项目名称 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <el-input v-model=\"inputTwo\" placeholder=\"请输入项目名称\" class=\"input\"></el-input>\n      </div>\n      <div class=\"request1\">\n        <span>流量计类型</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <common-select v-model=\"selectedValue\" :options=\"optionsOne\" class=\"select\"></common-select>\n      </div>\n      <div class=\"request\">\n        <span>安装位号 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        <el-input v-model=\"inputThree\" placeholder=\"请输入位号\" class=\"input\"></el-input>\n      </div>\n      <div class=\"request\">\n        <span>联系人/电话</span> &nbsp;\n        <el-input v-model=\"inputFour\" placeholder=\"请输入电话\" class=\"input\"></el-input>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\nimport { getFlowmeter } from '@/api/select/flowmeter_medius';\nimport {bus} from '@/main.js'\n\n\n\nexport default {\n  name: \"selectType\",\n  components:{\n    CommonSelect\n  },\n  props:{\n    projectData:{\n      type:Array,\n      default:()=>([])\n    }\n  },\n  data() {\n    return {\n      inputOne: '',\n      inputTwo: '',\n      inputThree: '',\n      inputFour: '',\n      selectedValue: [],\n      optionsOne:[],\n      flowmeter_type:'',//区分流量计类型\n      flowmeter_type_encode:'',//获得流量计类型的编码\n      flow_encoed:'',//具体的编码\n    };\n  },\n  mounted() {\n    this.getData();\n},\n  watch: {\n    selectedValue: function(newVal, oldVal) {\n    if (newVal.length > 0) {\n      // console.log('用户选择的流量计类型是：', newVal[0]);\n      this.flowmeter_type=newVal[0]\n      console.log('用户选择的流量计类型是：', this.flowmeter_type);\n    }\n  },\n    projectData: {\n  handler(newVal, oldVal) {\n    console.log('接收到的projectData数据：', newVal);\n    if (Object.keys(newVal).length > 0) {\n      const data = newVal; // 获取projectData对象\n      this.inputOne = data.用户名称 || '';\n      this.inputTwo = data.项目名称 || '';\n      this.inputThree = data.安装位号 || '';\n      this.inputFour = data['联系人/电话'] || ''; // 使用正确的属性名\n      // this.selectedValue = data.流量计类型 || [];\n      // 获取流量计类型的值\n      const flowMeterType = data.流量计类型[0];\n      console.log(flowMeterType)\n      // 在选项中查找匹配项的value属性\n      const match = this.optionsOne.find(option => option.label == flowMeterType);\n      console.log(\"新的id为：\",match)\n      // 如果找到了匹配项，则将其value属性赋值给selectedValue\n      if (match) {\n        this.selectedValue = [match.value];\n      }\n    }\n    }\n  },\n  immediate: true\n},\nmethods:{\n  // 请求数据\n  getData() {\n      this.optionsOne = []\n      getFlowmeter().then((res) => {\n  // console.log(res);\n  let dataList = Array.from(res.rows); // 使用Array.from()方法\n  // console.log(dataList);\n  this.optionsOne = dataList.map(function(item) {\n    return { value: item.id, label: item.type_name, };\n  });\n  this.flowmeter_type_encode = dataList.map(function(items) {\n    return {id: items.id, encode:items.encode };\n  });\n  // console.log(this.flowmeter_type_encode)\n})\n  },\n},\ncreated() {\n    // 监听 flowmeter_type 变化，并将其传递给其他组件\n    this.$watch('flowmeter_type', function(newVal, oldVal) {\n      console.log(newVal)\n      bus.$emit('flowmeterTypeChanged', newVal);\n      console.log(this.flowmeter_type_encode)\n      var selectedObject = this.flowmeter_type_encode.find(item => item.id === parseInt(newVal));\n  if (selectedObject) {\n    this.flow_encoed = selectedObject.encode;\n    console.log(\"encode 的值为\", this.flow_encoed);\n  } else {\n    console.error(\"未找到与 id 对应的 encode 值\");\n  }\n  bus.$emit('flowmeterEncodeTypeChanged', this.flow_encoed);\n});\n  }\n}\n</script>\n\n<style scoped>\n#selectType{\n  position: relative;\n  width: auto;\n  height: 500px;\n  background: url(\"../assets/8.webp\")\n\n}\n\n\n.all{\n  position: absolute;\n  margin-top: 45px;\n  background-color: #ffff;\n  width: 1208px;\n  height: 400px;\n  margin-left: 110px;\n  font-family:PingFang SC,Source Sans Pro,Helvetica Neue,Arial,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif;\n  border-left: 1px solid rgb(217, 210, 210);\n  border-right: 1px solid rgb(217, 210, 210);\n  border-bottom: 1px solid rgb(217, 210, 210);\n  border: 1px solid rgb(217, 210, 210);\n}\n.biaotilan{\n  width: auto;\n  height: 45px;\n  /* background-color: #02a7f0; */\n  overflow: hidden;\n\n\n  \n}\n/* .sanjiao{\n  position: absolute;\n        top: 0;\n        right: 0;\n        height: 45px;\n        width: 50px;\n        background-color: rgb(24, 102, 170);\n        clip-path: polygon(0 0, 100% 100%,100% 0);\n  } */\n.container{\n \n  background-color: rgba(227, 227, 227, 0.667);\n  font-weight: bold;\n  text-align: center;\n  line-height: 45px;\n  border-bottom:1px solid rgb(217, 210, 210);\n  \n}\n\n\n  \n\n\n\n\n\n\n.request{\n  margin-top: 15px;\n  margin-left: -65px;\n  /* margin-right: 590px; */\n  font-size: 13px;\n  text-align: center;\n  .span{\n    font-family:pingfang SC,helvetica neue,arial,hiragino sans gb,microsoft yahei ui,microsoft yahei,simsun,sans-serif!important;\n  }\n  }\n  .request1{\n    margin-top: 18px;\n    margin-right: 1096px;\n    font-size: 13px;\n    text-align: center;\n  }\n \n.input{\n  position: relative;\n  width:930px;\n  height: 40px;\n  margin-left: 10px;\n  margin-top: 5px;\n}\n.select{\n  position: relative;\n  margin-right: -1030px; \n  width: 930px;\n  margin-left: -10px;\n  /* margin-left: 10px; */\n}\n/* .image{\n  position: absolute;\n  margin-left: 135px;\n} */\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./select-type.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./select-type.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./select-type.vue?vue&type=template&id=497c9cfe&scoped=true&\"\nimport script from \"./select-type.vue?vue&type=script&lang=js&\"\nexport * from \"./select-type.vue?vue&type=script&lang=js&\"\nimport style0 from \"./select-type.vue?vue&type=style&index=0&id=497c9cfe&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"497c9cfe\",\n  null\n  \n)\n\nexport default component.exports","//连接已创建的数据库\r\nvar db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);\r\n\r\n// 查询所选介质详细信息--完成\r\nexport function getMedius(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id from mediutablestypes where type_name=?', [obj.type_name], \r\n        function (tx,res) {\r\n          if (res.rows.length>0){\r\n            var id=res.rows.item(0).id;\r\n            tx.executeSql('select * from mediutables where mediutablestypes_id=?',[id],function (tx,res) {\r\n                reslove(res)\r\n              }, function (tx, err) {\r\n                reject(err.message)\r\n              })\r\n          }\r\n        },function (tx,err) {\r\n          reject(err)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//查询蒸汽介质信息--完成\r\n  export function getSteammedius(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id from mediutablestypes where type_name=?', [obj.type_name], \r\n        function (tx,res) {\r\n          if (res.rows.length>0){\r\n            var id=res.rows.item(0).id;\r\n            tx.executeSql('select * from steammedius where mediutablestypes_id=?',[id],function (tx,res) {\r\n                reslove(res)\r\n              }, function (tx, err) {\r\n                reject(err.message)\r\n              })\r\n          }\r\n        },function (tx,err) {\r\n          reject(err)\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n//查询流量计的类型ID和编码（完成）\r\nexport function getFlowmeter() {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from flowmeter_type', [], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//新增\r\n//查询对应的流量计类型图片\r\nexport function getFlowmeter_image(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select image from flowmeter_image where instrument_type_id=? and flowmeter_type_id=?', [obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询仪表类型的编码和ID（完成）\r\nexport function getInstrument_type(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select id,type_name,encode from instrument_type where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询连接方式编码和ID--是否要传参数--完成\r\nexport function getConnection_types() {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from connection_types', [], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询连接标准类型和ID---完成\r\nexport function getConnection_standard() {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select id,cstandard_name from connection_standard ', [], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('my-header'),_c('my-main'),_c('my-footer')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"Content\"},[_c('div',{staticClass:\"logo\"},[_c('img',{attrs:{\"src\":require(\"../assets/logo.png\"),\"width\":\"230px\",\"height\":\"auto\"}})]),_c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"title1\"},[_vm._v(\"流 量 计 选 型\")]),_c('div',{staticClass:\"title2\"},[_vm._v(\"Flowmeter Selection\")]),_c('div',{staticClass:\"container\"},[_c('span',{staticClass:\"container-title1\"},[_vm._v(\" 产品\")]),_c('span',{staticClass:\"container-title2\"},[_vm._v(\" 帮助与支持\")]),_c('span',{staticClass:\"container-title3\"},[_vm._v(\" 关于我们\")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"Content\">\n    <div class=\"logo\">\n      <img src=\"../assets/logo.png\" width=\"230px\" height=\"auto\" >\n    </div>\n     <div class=\"title\">\n      <div class=\"title1\">流  量  计  选  型</div>\n      <div class=\"title2\">Flowmeter  Selection</div> \n      <div class=\"container\">\n      <!-- 标题 -->\n      <span class=\"container-title1\"> 产品</span>\n      <span class=\"container-title2\"> 帮助与支持</span>\n      <span class=\"container-title3\"> 关于我们</span>\n      <!-- 下拉菜单内容 -->\n      </div>\n    </div>\n    \n\n    </div>\n\n   \n</template>\n\n<script>\nexport default {\n  name: 'MyHeader',\n};\n</script>\n\n<style lang=\"scss\">\n.Content{\n  width: auto;\n  height: 150px;\n  border-bottom: 1px solid rgb(217, 210, 210);\n  background-image:url(\"../assets/Header.png\");\n\n  \n\n\n\n\n  .logo{\n    margin-top:15px;\n    height: 100px;\n    margin-left:1100px;\n    // background-color: rgb(255, 136, 0);\n  }\n \n\n  .title {\n  text-align: left;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: #ffff;\n  height: 130px;\n  line-height: 30px;\n  \n \n.title1{\n  font-size: 52px;\n  // text-align:left;\n  margin-left: 45px;\n  font-family: \"-apple-system,SF UI Text,Arial,PingFang SC,Hiragino Sans GB,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif,SimHei,SimSun\";\n  line-height: 55px;\n  // font-style: italic;\n  font-weight: bold;\n  color: rgb(24, 102, 170);\n  transform: translateY(58%);\n  margin-top: -120px;\n  \n}\n.title2{\n  font-size: 38px;\n  // text-align:left;\n  margin-left: 45px;\n  margin-top: 15px;\n  font-family: \"Copperplate\";\n  line-height: 55px;\n  //  font-style: italic;\n  font-weight: bold;\n  color: rgb(24, 102, 170);\n  transform: translateY(50%);\n}   \n.container{\n  margin-left:1000px;\n  margin-top: -14.8px;\n  font-family:'Raleway',sans-serif;\n letter-spacing: 4px;\n\n  .container-title1{\n  margin-left:45px;\n  margin-top: -14.8px;\n  }\n  .container-title2{\n    margin-left:35px;\n  }\n  .container-title3{\n    margin-left:30px;\n  }\n}\n\n\n//   h1 {\n//   margin-left: 20px;\n//   display: inline-block;\n//   font-family: \"Calibri Light \";\n//   font-weight: bold;\n// }\n\n}\n\n}\n\n\n\n\n\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyHeader.vue?vue&type=template&id=39755ec8&\"\nimport script from \"./MyHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./MyHeader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyHeader.vue?vue&type=style&index=0&id=39755ec8&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"MyFooter\"}},[_c('div',[_c('Db')],1),_c('div',{staticClass:\"re1\"},[_c('ExportWord2')],1),_c('div',{staticClass:\"re\"},[_c('input',{attrs:{\"type\":\"file\"},on:{\"change\":_vm.handleFileUpload}})]),_c('div',{staticClass:\"part1\"},[_c('selectType',{attrs:{\"projectData\":_vm.projectData}})],1),_c('div',{staticClass:\"part2\"},[_c('fluid',{attrs:{\"processData\":_vm.processData,\"outcmomeData\":_vm.outcmomeData,\"fluidData\":_vm.fluidData}}),_c('size',{attrs:{\"sizeData\":_vm.sizeData}})],1),_c('div',{staticClass:\"part3\"},[_c('chat',{attrs:{\"chartData\":_vm.chartData}}),_c('loss',{attrs:{\"measurementData\":_vm.measurementData,\"lossImage\":_vm.lossImage}})],1),_c('div',{staticClass:\"part4\"},[_c('specs',{attrs:{\"speciImage\":_vm.speciImage,\"speciData\":_vm.speciData,\"table8Data\":_vm.table8Data,\"accessData\":_vm.accessData}})],1),_c('div',{staticClass:\"part5\"},[_c('draw',{attrs:{\"dimensionalData\":_vm.dimensionalData,\"dimenData\":_vm.dimenData,\"materialData\":_vm.materialData,\"drawImages\":_vm.drawImages}})],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Chat\"}},[_c('div',{staticClass:\"container\"},[_vm._v(\"流量计图表 Chart\")]),_vm._m(0),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"可测量流量范围\")]),_vm._v(\"     \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小流量\"},model:{value:(_vm.ChartData.inputOne),callback:function ($$v) {_vm.$set(_vm.ChartData, \"inputOne\", $$v)},expression:\"ChartData.inputOne\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大流量\"},model:{value:(_vm.ChartData.inputTwo),callback:function ($$v) {_vm.$set(_vm.ChartData, \"inputTwo\", $$v)},expression:\"ChartData.inputTwo\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.ChartData.value,\"options\":_vm.ChartData.optionsOne}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"线性流量范围 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小温度\"},model:{value:(_vm.ChartData.inputThree),callback:function ($$v) {_vm.$set(_vm.ChartData, \"inputThree\", $$v)},expression:\"ChartData.inputThree\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大温度\"},model:{value:(_vm.ChartData.inputFour),callback:function ($$v) {_vm.$set(_vm.ChartData, \"inputFour\", $$v)},expression:\"ChartData.inputFour\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.ChartData.value,\"options\":_vm.ChartData.optionsOne}})],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小\")]),_c('span',{staticClass:\"textOne\"},[_vm._v(\"最大\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"Chat\">\r\n        <div class=\"container\">流量计图表 Chart</div>\r\n        <div class=\"request\">\r\n            <span>最小</span>\r\n            <span class=\"textOne\">最大</span>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>可测量流量范围</span> &nbsp;&nbsp;&nbsp;\r\n            <el-input  v-model=\"ChartData.inputOne\" placeholder=\"最小流量\" class=\"input\"></el-input>\r\n            <el-input v-model=\"ChartData.inputTwo\" placeholder=\"最大流量\" class=\"input\"></el-input>\r\n            <common-select :value=\"ChartData.value\" :options=\"ChartData.optionsOne\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>线性流量范围 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"ChartData.inputThree\" placeholder=\"最小温度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"ChartData.inputFour\" placeholder=\"最大温度\" class=\"input\"></el-input>\r\n            <common-select :value=\"ChartData.value\" :options=\"ChartData.optionsOne\" class=\"select\"></common-select>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport {bus} from '@/main.js'\r\nexport default {\r\n    name: 'Chat',\r\n    props:{\r\n      chartData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n\r\n    },\r\n   \r\n    components:{\r\n        CommonSelect\r\n    },\r\n    data(){\r\n        return{\r\n            ChartData:{\r\n            inputOne: '',\r\n            inputTwo: '',\r\n            inputThree: '',\r\n            inputFour: '',\r\n            optionsOne:[\r\n            {\r\n                    value: '1',\r\n                    label: 'm3/h',\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: 'm3/min'\r\n                },\r\n                {\r\n                    value: '3',\r\n                    label: 'm3/s'\r\n                },\r\n                {\r\n                    value: '4',\r\n                    label: 'L/h'\r\n                },\r\n                {\r\n                    value: '5',\r\n                    label: 'l/min'\r\n                },\r\n                {\r\n                    value: '6',\r\n                    label: 'l/s'\r\n                },\r\n                {\r\n                    value: '7',\r\n                    label: 'Nm3/h'\r\n                },\r\n                {\r\n                    value: '8',\r\n                    label: 'Nm3/min'\r\n                },\r\n                {\r\n                    value: '9',\r\n                    label: 'Nm3/s'\r\n                },\r\n                {\r\n                    value: '10',\r\n                    label: 'kg/h'\r\n                },\r\n                {\r\n                    value: '11',\r\n                    label: 'kg/min'\r\n                },\r\n                {\r\n                    value: '12',\r\n                    label: 'kg/s'\r\n                },\r\n                {\r\n                    value: '13',\r\n                    label: 't/h'\r\n                }\r\n            ],\r\n            value:[]\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n  updateChartData() {\r\n    // 根据页面数据更新chartData属性\r\n    this.ChartData = {\r\n        inputOne: this.ChartData.inputOne,\r\n      inputTwo: this.ChartData.inputTwo,\r\n      inputThree: this.ChartData.inputThree,\r\n      inputFour: this.ChartData.inputFour,\r\n      value: this.ChartData.value,\r\n      optionsOne: this.ChartData.optionsOne\r\n      \r\n    };\r\n    console.log(\"chart更新的数据\",this.ChartData)\r\n    // 触发自定义事件并传递chartData\r\n    bus.$emit('chart-data-updated', this.ChartData);\r\n    \r\n  },\r\n    handleSelectValueChanged(value) {\r\n    console.log('接收到的流量单位值:', value);\r\n    this.ChartData.value=value\r\n    console.log(\"传递过来的流量单位值是：\",this.ChartData.value)\r\n    const selectedOption = this.ChartData.optionsOne.find(option => option.value == value);\r\n      // 判断是否找到匹配的选项对象，如果找到则将其 value 属性赋值给 selectedOptionValue，否则将其设为 null。\r\n      if (selectedOption) {\r\n        this.ChartData.value= [selectedOption.value];\r\n      } else {\r\n        this.ChartData.value= [];\r\n      }\r\n\r\n  },\r\n},\r\nwatch: {\r\n  chartData:{\r\n        handler(newVal, oldVal) {\r\n                console.log(\"chart接受到了新的结果输出:\", newVal)\r\n                console.log(\"dayinl\",newVal)\r\n                const firstItem = newVal['可测量流量范围'];\r\n                const secondItem = newVal['线性流量范围'];\r\n                this.ChartData.inputOne = firstItem['最小'];\r\n                this.ChartData.inputTwo = firstItem['最大'];\r\n                this.ChartData.inputThree = secondItem['最小'];\r\n                this.ChartData.inputFour = secondItem['最大']\r\n            }\r\n        },\r\n    // 监听每个元素的变化\r\n    'ChartData.inputOne'() {\r\n      this.updateChartData()\r\n    },\r\n    'ChartData.inputTwo'() {\r\n      this.updateChartData()\r\n    },\r\n    'ChartData.inputThree'() {\r\n      this.updateChartData()\r\n    },\r\n    'ChartData.inputFour'() {\r\n      this.updateChartData()\r\n    },\r\n    'ChartData.value': {\r\n      handler: function (newVal, oldVal) {\r\n        if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\r\n          this.updateChartData()\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n    'ChartData.optionsOne': {\r\n      handler: function (newVal, oldVal) {\r\n        if (JSON.stringify(newVal) !== JSON.stringify(oldVal)) {\r\n          this.updateChartData()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted(){\r\n     bus.$on('select-value-changed', this.handleSelectValueChanged);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n \r\n#Chat{\r\n   position: absolute;\r\n    margin-top: 40px;\r\n    margin-left:110px;\r\n    background-color: #ffff ;\r\n    width: 1207.5px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n  border-right: 1px solid rgb(217, 210, 210);\r\n  border-bottom: 1px solid rgb(217, 210, 210);\r\n  border: 1px solid rgb(217, 210, 210);\r\n  height: 200px;\r\n  border-radius: 10px; \r\n}\r\n.container{\r\n    width: 1207.5px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667); \r\n    line-height: 45px;\r\n    /* left:128px; */\r\n}\r\n.textOne{\r\n    margin-right: 120px;\r\n    margin-left: 380px;\r\n}\r\n.request{\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n}\r\n.input{\r\n    width: 383px;\r\n    margin-left: 10px;\r\n}\r\n.select{\r\n    margin-left: 10px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Chat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chat.vue?vue&type=template&id=be28c7c0&scoped=true&\"\nimport script from \"./Chat.vue?vue&type=script&lang=js&\"\nexport * from \"./Chat.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Chat.vue?vue&type=style&index=0&id=be28c7c0&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"be28c7c0\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Process\"}},[_vm._m(0),_c('div',{staticClass:\"request\"},[_c('span',{staticClass:\"span2\"},[_vm._v(\"介质名称 \")]),_vm._v(\"                 \"),_c('div',{staticClass:\"option-group\"},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],attrs:{\"type\":\"radio\",\"value\":\"气体\"},domProps:{\"checked\":_vm._q(_vm.selectedOption,\"气体\")},on:{\"change\":[function($event){_vm.selectedOption=\"气体\"},function($event){return _vm.resetSelectedValues('气体')}]}}),_vm._v(\" 气体 \")]),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsOne1,\"is-disabled\":_vm.selectedOption!== '气体'},on:{\"input\":_vm.handleChange1},model:{value:(_vm.selected1),callback:function ($$v) {_vm.selected1=$$v},expression:\"selected1\"}})],1),_c('div',{staticClass:\"option-group\"},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],attrs:{\"type\":\"radio\",\"value\":\"液体\"},domProps:{\"checked\":_vm._q(_vm.selectedOption,\"液体\")},on:{\"change\":[function($event){_vm.selectedOption=\"液体\"},function($event){return _vm.resetSelectedValues('液体')}]}}),_vm._v(\" 液体 \")]),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsOne2,\"is-disabled\":_vm.selectedOption!== '液体'},on:{\"input\":_vm.handleChange2},model:{value:(_vm.selected2),callback:function ($$v) {_vm.selected2=$$v},expression:\"selected2\"}})],1),_c('div',{staticClass:\"option-group\"},[_c('label',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedOption),expression:\"selectedOption\"}],attrs:{\"type\":\"radio\",\"value\":\"蒸汽\"},domProps:{\"checked\":_vm._q(_vm.selectedOption,\"蒸汽\")},on:{\"change\":[function($event){_vm.selectedOption=\"蒸汽\"},function($event){return _vm.resetSelectedValues('蒸汽')}]}}),_vm._v(\" 蒸汽 \")]),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsOne3,\"is-disabled\":_vm.selectedOption!== '蒸汽'},on:{\"input\":_vm.handleChange3},model:{value:(_vm.selected3),callback:function ($$v) {_vm.selected3=$$v},expression:\"selected3\"}})],1)]),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"管道材质 \")]),_vm._v(\"                 \"),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsTwo}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"压缩系数 \")]),_vm._v(\"                 \"),_c('el-input',{staticClass:\"inputOne\",attrs:{\"placeholder\":\"请输入压缩系数\"},model:{value:(_vm.compressConvenient),callback:function ($$v) {_vm.compressConvenient=$$v},expression:\"compressConvenient\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',{staticClass:\"span1\"},[_vm._v(\"管道外/内径(mm)\")]),_vm._v(\"            \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"请输入管道外/内径\"},on:{\"input\":_vm.handleInputChange},model:{value:(_vm.inputTwo),callback:function ($$v) {_vm.inputTwo=$$v},expression:\"inputTwo\"}})],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"工艺参数 Proccess parameter\")]),_c('div',{staticClass:\"sanjiao\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"Process\">\r\n        <div class=\"biaotilan\">\r\n            <div class=\"container\">工艺参数 Proccess parameter</div>\r\n            <div class=\"sanjiao\"></div>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span class=\"span2\">介质名称 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <div class=\"option-group\">\r\n          <label>\r\n            <input type=\"radio\" v-model=\"selectedOption\" value=\"气体\" @change=\"resetSelectedValues('气体')\">\r\n            气体\r\n          </label>\r\n          <common-select v-model=\"selected1\" :options=\"optionsOne1\" :is-disabled=\"selectedOption!== '气体' \" class=\"select\" @input=\"handleChange1\"></common-select>\r\n            </div>\r\n          <div class=\"option-group\">\r\n          <label>\r\n            <input type=\"radio\" v-model=\"selectedOption\" value=\"液体\" @change=\"resetSelectedValues('液体')\">\r\n            液体\r\n          </label>\r\n          <common-select v-model=\"selected2\" :options=\"optionsOne2\" :is-disabled=\"selectedOption!== '液体' \" class=\"select\" @input=\"handleChange2\"></common-select>\r\n          </div>\r\n          <div class=\"option-group\">\r\n          <label>\r\n            <input type=\"radio\" v-model=\"selectedOption\" value=\"蒸汽\" @change=\"resetSelectedValues('蒸汽')\">\r\n            蒸汽\r\n          </label>\r\n          <common-select v-model=\"selected3\" :options=\"optionsOne3\" :is-disabled=\"selectedOption!== '蒸汽' \" class=\"select\" @input=\"handleChange3\"></common-select>\r\n        </div>\r\n            <!-- <common-select v-model=\"selected1\" :options=\"optionsOne\" class=\"select\" @input=\"handleChange\"></common-select> -->\r\n            <!-- :value=\"selected\"会将所选介质名称的值更新到selected属性中 -->\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>管道材质 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <common-select :value=\"value\" :options=\"optionsTwo\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>压缩系数 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"compressConvenient\" placeholder=\"请输入压缩系数\" class=\"inputOne\"\r\n                ></el-input>\r\n            <!-- v-model自动处理双向绑定和数据更新 :compressConvenient=\"CompressConvenient\" -->\r\n        </div>\r\n        <div class=\"request1\">\r\n            <span class=\"span1\">管道外/内径(mm)</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTwo\" placeholder=\"请输入管道外/内径\" class=\"input\" @input=\"handleInputChange\"></el-input>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport {bus} from '@/main.js'\r\nimport { getMedius,getSteammedius } from '@/api/select/flowmeter_medius' \r\n// 在 Process 组件中导入事件总线\r\nexport default {\r\n    props: {\r\n        compressConvenient: {\r\n            type: String\r\n        },\r\n        processData1:{\r\n            type:Array,\r\n      default:()=>([])\r\n        }\r\n    },//子组件定义prop接受父组件的传值\r\n    name: 'Process',\r\n    components: {\r\n        CommonSelect\r\n    },\r\n    data() {\r\n        return {\r\n            mediutables_id:'',//具体介质名称的id\r\n            process_viscosity:[],//从表中查到的所有粘度\r\n            processrealviscosity:'',//具体的粘度\r\n            process_density:[],//从表中查到的所有密度\r\n            processrealdensity:'',//具体的密度\r\n            // value1:'请选择',\r\n            selectreal:'',//存储具体选择的介质--气体，液体，蒸汽\r\n            selectedOption:[],\r\n            inputOne: '',\r\n            inputTwo: '',//管道内径参数\r\n            value: [],\r\n            selected1: [],\r\n            selected2: [],\r\n            selected3: [],\r\n            optionsOne1: [\r\n                {\r\n                    value:'1',\r\n                    label:'空气'\r\n                }\r\n            ],\r\n            optionsOne2: [\r\n            ],\r\n            optionsOne3: [\r\n            ],\r\n            optionsTwo: [\r\n                {\r\n                    value: '1',\r\n                    label: '法兰西'\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: '夹持'\r\n                }\r\n            ],\r\n            sselectreal:''//页面Specs传递过来的测量介质，用来导入word判断\r\n        }\r\n    },\r\n    mounted(){   \r\n    },\r\n    created(){\r\n        bus.$on('inputTwentyChanged', (newVal) => {\r\n    console.log('Process接收到的介质值为:', newVal);\r\n    this.sselectreal=newVal\r\n    console.log('Process接收到的介质值为:', this.sselectreal);\r\n    // 在这里处理接收到的介质值\r\n    // 可以将newVal传给其他页面或进行其他操作\r\n  });\r\n    },\r\n    methods: {\r\n        getMediusData() {\r\n            getMedius({ type_name: this.selectreal }).then((res) => {\r\n                // 处理获取到的数据\r\n                let dataList = Array.from(res.rows);\r\n                console.log(\"接收到的介质信息是：\", dataList)\r\n                for (let item of dataList) {\r\n                    if (this.selectreal == '气体') {\r\n                        // 对应处理逻辑\r\n                        this.optionsOne1 = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.media_name, };\r\n                        });\r\n                        this.process_density=dataList.map(function (item) {\r\n                            return {value: item.id,label: item.standar_density};\r\n                        });\r\n                        this.process_viscosity=dataList.map(function (item) {\r\n                            return {value: item.id,label: item.viscosity};\r\n                        });\r\n                    } else if (this.selectreal == '液体') {\r\n                        // 对应处理逻辑\r\n                        this.optionsOne2 = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.media_name, };\r\n                        });\r\n                        this.process_density=dataList.map(function (item) {\r\n                            return {value: item.id,label: item.standar_density};\r\n                        });\r\n                        this.process_viscosity=dataList.map(function (item) {\r\n                            return {value: item.id,label: item.viscosity};\r\n                        });\r\n                    }\r\n                }\r\n            }).catch((err) => {\r\n                console.error(err); // 输出错误信息到控制台\r\n            });\r\n        },\r\n        getSteammediusData() {\r\n            getSteammedius({ type_name:this.selectreal}).then((res) => {\r\n                // 处理获取到的数据\r\n                console.log(\"选择的真正介质是；\",this.selectreal)\r\n                 bus.$emit('medium-change', this.selectreal);//将选择的是气体还是液体传给其他组件，进行标况密度单位的变化\r\n                let dataList = Array.from(res.rows);\r\n                this.optionsOne3 = dataList.map(function(item) {\r\n               return { value: item.id, label: item.media_name, };\r\n\r\n            });\r\n            }).catch((err) => {\r\n                    console.error(err); // 输出错误信息到控制台\r\n                });\r\n        },\r\n        resetSelectedValues(option) {\r\n            if (option !== '气体') {\r\n                this.selected1 = [];\r\n            }\r\n            if (option !== '液体') {\r\n                this.selected2 = [];\r\n            }\r\n            if (option !== '蒸汽') {\r\n                this.selected3 = [];\r\n            }\r\n        },\r\n        sendDiameterToFluid() {\r\n            bus.$emit('update-diameter', this.inputTwo);\r\n        },\r\n        handleInputChange() {\r\n            console.log(this.inputTwo)\r\n            // 当输入框内容改变时调用该方法，从而触发管道内径参数的传递\r\n            this.sendDiameterToFluid();\r\n        },\r\n        handleChange1() {\r\n            const medium = this.selected1;//更新子组件的介质名称\r\n            // const medium =selectedOption.label\r\n            console.log('当前选中的介质名称：', medium);\r\n            const selectedOption = this.optionsOne1.find(option => option.value === this.selected1[0]);\r\n            console.log(this.selected1[0])\r\n            bus.$emit('selected1-changed', this.selected1[0]);\r\n            console.log('当前选中的介质名称：', selectedOption.label);\r\n            const targetDensity = this.process_density.find(item => item.value === this.selected1[0]);\r\n            if (targetDensity) { // 如果找到了对应的密度项\r\n                this.processrealdensity = targetDensity.label;\r\n                console.log('获得的密度:', this.processrealdensity);\r\n            } else { // 如果未找到对应的密度项\r\n                console.log('未找到与选中的介质名称匹配的密度');\r\n                this.processrealdensity = ''; // 将 processrealdensity 置为空字符串\r\n            }\r\n            bus.$emit('density-change', this.processrealdensity);//触发自定义事件，将介质名称给父\r\n            const targetDensity1 = this.process_viscosity.find(item => item.value === this.selected1[0]);\r\n            if (targetDensity1) { // 如果找到了对应的粘度\r\n                this.processrealviscosity = targetDensity1.label;\r\n                console.log('获得的粘度:', this.processrealviscosity);\r\n            } else { // 如果未找到对应的密度项\r\n                console.log('未找到与选中的介质名称匹配的粘度');\r\n                this.processrealdensity = ''; // 将 processrealdensity 置为空字符串\r\n            }\r\n            bus.$emit('viscosity-change', this.processrealviscosity);//触发自定义事件，将介质名称给父\r\n        },\r\n        handleChange2() {\r\n            const medium = this.selected2;//更新子组件的介质名称\r\n            console.log('当前选中的介质名称：', medium);\r\n            bus.$emit('selected2-changed', this.selected2[0]);\r\n            const selectedOption = this.optionsOne2.find(option => option.value === this.selected2[0]);\r\n            console.log('当前选中的介质名称：', selectedOption.label);\r\n            const targetDensity = this.process_density.find(item => item.value === this.selected2[0]);\r\n            if (targetDensity) { // 如果找到了对应的密度项\r\n                this.processrealdensity = targetDensity.label;\r\n                console.log('获得的密度:', this.processrealdensity);\r\n            } else { // 如果未找到对应的密度项\r\n                console.log('未找到与选中的介质名称匹配的密度');\r\n                this.processrealdensity = ''; // 将 processrealdensity 置为空字符串\r\n            }\r\n            bus.$emit('density-change', this.processrealdensity);\r\n            const targetDensity1 = this.process_viscosity.find(item => item.value === this.selected2[0]);\r\n            if (targetDensity1) { // 如果找到了对应的粘度\r\n                this.processrealviscosity = targetDensity1.label;\r\n                console.log('获得的粘度:', this.processrealviscosity);\r\n            } else { // 如果未找到对应的密度项\r\n                console.log('未找到与选中的介质名称匹配的粘度');\r\n                this.processrealdensity = ''; // 将 processrealdensity 置为空字符串\r\n            }\r\n            bus.$emit('viscosity-change', this.processrealviscosity);\r\n        },\r\n        handleChange3() {\r\n            const medium = this.selected3;//更新子组件的介质名称\r\n            // const medium =selectedOption.label\r\n            console.log('当前选中的介质名称：', medium);\r\n            bus.$emit('selected3-changed', this.selected3[0]);\r\n            const selectedOption = this.optionsOne3.find(option => option.value === this.selected3[0]);\r\n            console.log('当前选中的介质名称：', selectedOption.label);\r\n        }\r\n    },\r\n    watch: {\r\n    selectedOption(newValue, oldValue) {\r\n        this.selectreal=newValue\r\n        bus.$emit('selectnameChanged', this.selectreal);\r\n      if (newValue !== '') {\r\n        this.resetSelectedValues(newValue);\r\n        this.getMediusData()// 在选项改变后调用getMediusData()方法\r\n        this.getSteammediusData()\r\n      }\r\n    },\r\n    processData1: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了新的项目信息:\", newVal)\r\n                console.log(\"此时specs到测量介质是:\",this.sselectreal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    this.getMediusData()\r\n                    const data = newVal; // 获取projectData对象\r\n                    this.compressConvenient = data.压缩系数\r\n                    this.inputTwo = data['管道外/内径(mm)']\r\n                    // 获取流量计类型的值\r\n                    const Type = data.管道材质[0];\r\n                    console.log(Type)\r\n                    // 在选项中查找匹配项的value属性\r\n                    const match = this.optionsTwo.find(option => option.label == Type);\r\n                    console.log(\"管道材质是\",match)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match) {\r\n                        this.value = [match.value];\r\n                    }\r\n                    //this.optionsOne1, this.optionsOne2, this.optionsOne3要写在页面上\r\n                    const combinedArray = [this.optionsOne1, this.optionsOne2, this.optionsOne3];\r\n                    //   console.log(combinedArray)\r\n                    const Type1 = data.介质名称[0]\r\n                    console.log(Type1)\r\n                    const mach1 = combinedArray[0].find(option => option.label == Type1)\r\n                    console.log(\"process的介质名称是\",mach1)\r\n                    const mach2 = combinedArray[1].find(option => option.label == Type1)\r\n                    const mach3 = combinedArray[2].find(option => option.label == Type1)\r\n                    if (mach1) {\r\n                        this.selected1 = [mach1.value]\r\n                    } else if (mach2) {\r\n                        this.selected2 = [mach2.value]\r\n                    } else if (mach3) {\r\n                        this.selected3 = [mach3.value]\r\n                    }\r\n                }\r\n            }\r\n        },\r\n  compressConvenient:{\r\n    handler(newVal, oldVal){\r\n        console.log(\"接受到了压缩系数:\",newVal)\r\n    }\r\n  }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>                                                                                                                                                                     #Process {\r\n                                                                                                                                                                         position: absolute;\r\n                                                                                                                                                                         margin-top: -920px;\r\n                                                                                                                                                                         left: -65px;\r\n                                                                                                                                                                         /* background-color: rgba(239, 241, 242, 0.667); */\r\n                                                                                                                                                                         background-color: #ffffff;\r\n                                                                                                                                                                         margin-left: 65px;\r\n                                                                                                                                                                         border-left: 1px solid rgb(217, 210, 210);\r\n                                                                                                                                                                         border-right: 1px solid rgb(217, 210, 210);\r\n                                                                                                                                                                         height: 490px;\r\n                                                                                                                                                                         border-bottom: 1px solid rgb(217, 210, 210);\r\n                                                                                                                                                                         border-radius: 10px;\r\n                                                                                                                                                                         border: 1px solid rgb(217, 210, 210);\r\n                                                                                                                                                                         /* box-shadow: 10px 10px 20px rgb(24, 102, 170); */\r\n                                                                                                                                                                     }\r\n                                                                                                                                                                     .option-group {\r\n  margin-bottom: 20px;\r\n  margin-left: 64px;\r\n  margin-top: 20px;\r\n  \r\n}\r\n.span2{\r\n    margin-left: -270px;\r\n}\r\n                                                                                                                                                                     .biaotilan {\r\n                                                                                                                                                                         width: auto;\r\n                                                                                                                                                                         height: 45px;\r\n                                                                                                                                                                         /* background-color: #02a7f0; */\r\n                                                                                                                                                                         overflow: hidden;\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .sanjiao {\r\n                                                                                                                                                                         position: absolute;\r\n                                                                                                                                                                         top: 0;\r\n                                                                                                                                                                         right: 0;\r\n                                                                                                                                                                         height: 45px;\r\n                                                                                                                                                                         width: 50px;\r\n                                                                                                                                                                         background-color: rgb(24, 102, 170);\r\n                                                                                                                                                                         clip-path: polygon(0 0, 100% 100%, 100% 0);\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .container {\r\n                                                                                                                                                                         width: 505px;\r\n                                                                                                                                                                         background-color: rgba(227, 227, 227, 0.667);\r\n                                                                                                                                                                         /* font-weight: bold;  */\r\n                                                                                                                                                                         height: 45px;\r\n                                                                                                                                                                         line-height: 45px;\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .request {\r\n                                                                                                                                                                         margin-top: 25px;\r\n                                                                                                                                                                         margin-left: -80px;\r\n                                                                                                                                                                         font-family: -apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif, SimHei, SimSun;\r\n                                                                                                                                                                         font-size: 13px;\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .request1 {\r\n                                                                                                                                                                         position: absolute;\r\n                                                                                                                                                                         margin-top: 25px;\r\n                                                                                                                                                                         margin-left: 18px;\r\n                                                                                                                                                                         font-size: 13px;\r\n\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .input {\r\n                                                                                                                                                                         width: 229px;\r\n                                                                                                                                                                         height: 30px;\r\n                                                                                                                                                                         outline: none;\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .inputOne {\r\n                                                                                                                                                                         width: 234px;\r\n                                                                                                                                                                         margin-left: 35px;\r\n                                                                                                                                                                     }\r\n\r\n                                                                                                                                                                     .select {\r\n                                                                                                                                                                         margin-left: 35px;\r\n                                                                                                                                                                         width: 234px;\r\n                                                                                                                                                                     }\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Process.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Process.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Process.vue?vue&type=template&id=1b49c6b4&scoped=true&\"\nimport script from \"./Process.vue?vue&type=script&lang=js&\"\nexport * from \"./Process.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Process.vue?vue&type=style&index=0&id=1b49c6b4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b49c6b4\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Fluid\"}},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小流量\"},on:{\"input\":function($event){return _vm.minFluidsion()}},model:{value:(_vm.inputOne),callback:function ($$v) {_vm.inputOne=$$v},expression:\"inputOne\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常流量\"},on:{\"input\":function($event){return _vm.mediumFluidsion()}},model:{value:(_vm.inputTwo),callback:function ($$v) {_vm.inputTwo=$$v},expression:\"inputTwo\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大流量\"},on:{\"input\":function($event){return _vm.maxFluidsion()}},model:{value:(_vm.inputThree),callback:function ($$v) {_vm.inputThree=$$v},expression:\"inputThree\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsOne},model:{value:(_vm.value1),callback:function ($$v) {_vm.value1=$$v},expression:\"value1\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"温度 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小温度\"},model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常温度\"},on:{\"input\":_vm.compressionCoefficient},model:{value:(_vm.inputFive),callback:function ($$v) {_vm.inputFive=$$v},expression:\"inputFive\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大温度\"},model:{value:(_vm.inputSix),callback:function ($$v) {_vm.inputSix=$$v},expression:\"inputSix\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value3,\"options\":_vm.optionsOnes}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"压力 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小压力\"},model:{value:(_vm.inputSeven),callback:function ($$v) {_vm.inputSeven=$$v},expression:\"inputSeven\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常压力\"},on:{\"input\":_vm.compressionCoefficient},model:{value:(_vm.inputEight),callback:function ($$v) {_vm.inputEight=$$v},expression:\"inputEight\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大压力\"},model:{value:(_vm.inputNine),callback:function ($$v) {_vm.inputNine=$$v},expression:\"inputNine\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsTwo},model:{value:(_vm.value2),callback:function ($$v) {_vm.value2=$$v},expression:\"value2\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"密度 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小密度\"},model:{value:(_vm.inputTen),callback:function ($$v) {_vm.inputTen=$$v},expression:\"inputTen\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常密度\"},model:{value:(_vm.inputOnes),callback:function ($$v) {_vm.inputOnes=$$v},expression:\"inputOnes\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大密度\"},model:{value:(_vm.inputTwos),callback:function ($$v) {_vm.inputTwos=$$v},expression:\"inputTwos\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value5,\"options\":_vm.optionsThress}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"粘度 \")]),_vm._v(\"        \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小粘度\"},model:{value:(_vm.inputFours),callback:function ($$v) {_vm.inputFours=$$v},expression:\"inputFours\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"id\":\"viscosityInput\",\"placeholder\":\"正常粘度\"},model:{value:(_vm.inputFives),callback:function ($$v) {_vm.inputFives=$$v},expression:\"inputFives\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大粘度\"},model:{value:(_vm.inputSixs),callback:function ($$v) {_vm.inputSixs=$$v},expression:\"inputSixs\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsFour},model:{value:(_vm.value4),callback:function ($$v) {_vm.value4=$$v},expression:\"value4\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"量程范围 \")]),_vm._v(\"  \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小量程\"},model:{value:(_vm.inputSevens),callback:function ($$v) {_vm.inputSevens=$$v},expression:\"inputSevens\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常量程\"},model:{value:(_vm.inputEights),callback:function ($$v) {_vm.inputEights=$$v},expression:\"inputEights\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大量程\"},model:{value:(_vm.inputNines),callback:function ($$v) {_vm.inputNines=$$v},expression:\"inputNines\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"options\":_vm.optionsFive},model:{value:(_vm.value7),callback:function ($$v) {_vm.value7=$$v},expression:\"value7\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"标况密度 \")]),_vm._v(\"                                                 \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"标况密度\"},model:{value:(_vm.inputTens),callback:function ($$v) {_vm.inputTens=$$v},expression:\"inputTens\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"单位\"},model:{value:(_vm.inputTens1),callback:function ($$v) {_vm.inputTens1=$$v},expression:\"inputTens1\"}})],1),_c('div',{staticClass:\"child1\"},[_c('Process',{attrs:{\"processData1\":_vm.processData1,\"compressConvenient\":_vm.compressConvenient}})],1),_c('div',{staticClass:\"child2\"},[_c('Outcome',{attrs:{\"outcmomeData1\":_vm.outcmomeData1,\"maxFluid\":_vm.maxFluid,\"mediumFluid\":_vm.mediumFluid,\"minFluid\":_vm.minFluid}})],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"介质参数 Fluid properties\")]),_c('div',{staticClass:\"sanjiao\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"最小\")]),_c('span',{staticClass:\"textOne\"},[_vm._v(\"正常\")]),_vm._v(\"      \"),_c('span',{staticClass:\"textTwo\"},[_vm._v(\"最大\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Outcome\"}},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小流量\",\"minFluid\":_vm.minFluid},model:{value:(_vm.minFluid),callback:function ($$v) {_vm.minFluid=$$v},expression:\"minFluid\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常流量\",\"mediumFluid\":_vm.mediumFluid},model:{value:(_vm.mediumFluid),callback:function ($$v) {_vm.mediumFluid=$$v},expression:\"mediumFluid\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大流量\",\"maxFluid\":_vm.maxFluid},model:{value:(_vm.maxFluid),callback:function ($$v) {_vm.maxFluid=$$v},expression:\"maxFluid\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value1,\"options\":_vm.optionsOne}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"压力损失 \")]),_vm._v(\"  \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小损失\"},model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常损失\"},model:{value:(_vm.inputFive),callback:function ($$v) {_vm.inputFive=$$v},expression:\"inputFive\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大损失\"},model:{value:(_vm.inputSix),callback:function ($$v) {_vm.inputSix=$$v},expression:\"inputSix\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value2,\"options\":_vm.optionsOne1}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"测量精度 \")]),_vm._v(\"  \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小精度\"},model:{value:(_vm.inputSeven),callback:function ($$v) {_vm.inputSeven=$$v},expression:\"inputSeven\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常精度\"},model:{value:(_vm.inputEight),callback:function ($$v) {_vm.inputEight=$$v},expression:\"inputEight\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大精度\"},model:{value:(_vm.inputNine),callback:function ($$v) {_vm.inputNine=$$v},expression:\"inputNine\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value4,\"options\":_vm.optionsOne2}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"雷诺数 \")]),_vm._v(\"      \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小雷诺\"},model:{value:(_vm.inputTen),callback:function ($$v) {_vm.inputTen=$$v},expression:\"inputTen\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常雷诺\"},model:{value:(_vm.inputOnes),callback:function ($$v) {_vm.inputOnes=$$v},expression:\"inputOnes\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大雷诺\"},model:{value:(_vm.inputTwos),callback:function ($$v) {_vm.inputTwos=$$v},expression:\"inputTwos\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsOne3}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流速 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最小流速\"},model:{value:(_vm.inputThrees),callback:function ($$v) {_vm.inputThrees=$$v},expression:\"inputThrees\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"正常流速\"},model:{value:(_vm.inputFours),callback:function ($$v) {_vm.inputFours=$$v},expression:\"inputFours\"}}),_c('el-input',{staticClass:\"input\",attrs:{\"placeholder\":\"最大流速\"},model:{value:(_vm.inputFives),callback:function ($$v) {_vm.inputFives=$$v},expression:\"inputFives\"}}),_c('common-select',{staticClass:\"select\",attrs:{\"value\":_vm.value3,\"options\":_vm.optionsOne4}})],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"计算结果 Calculated results\")]),_c('div',{staticClass:\"sanjiao\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小\")]),_vm._v(\"   \"),_c('span',{staticClass:\"textOne\"},[_vm._v(\"正常\")]),_vm._v(\"      \"),_c('span',{staticClass:\"textTwo\"},[_vm._v(\"最大\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"Outcome\">\r\n        <div class=\"biaotilan\">\r\n            <div class=\"container\">计算结果 Calculated results</div>\r\n      <div class=\"sanjiao\"></div>\r\n    </div>\r\n        <div class=\"request\">\r\n            <span>最小</span>&nbsp;&nbsp;\r\n            <span class=\"textOne\">正常</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span class=\"textTwo\">最大</span>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>流量 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"minFluid\" placeholder=\"最小流量\" class=\"input\" :minFluid=\"minFluid\"\r\n            ></el-input>\r\n            <el-input v-model=\"mediumFluid\" placeholder=\"正常流量\" class=\"input\" :mediumFluid=\"mediumFluid\"\r\n            ></el-input>\r\n            <el-input v-model=\"maxFluid\" placeholder=\"最大流量\" class=\"input\" :maxFluid=\"maxFluid\"\r\n            ></el-input>\r\n            <common-select :value=\"value1\" :options=\"optionsOne\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>压力损失 </span>&nbsp;\r\n            <el-input v-model=\"inputFour\" placeholder=\"最小损失\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFive\" placeholder=\"正常损失\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSix\" placeholder=\"最大损失\" class=\"input\"></el-input>\r\n            <common-select :value=\"value2\" :options=\"optionsOne1\" class=\"select\"></common-select>\r\n        </div>\r\n         <div class=\"request\">\r\n            <span>测量精度 </span>&nbsp;\r\n            <el-input v-model=\"inputSeven\" placeholder=\"最小精度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEight\" placeholder=\"正常精度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputNine\" placeholder=\"最大精度\" class=\"input\"></el-input>\r\n            <common-select :value=\"value4\" :options=\"optionsOne2\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>雷诺数 </span> &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTen\" placeholder=\"最小雷诺\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputOnes\" placeholder=\"正常雷诺\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputTwos\" placeholder=\"最大雷诺\" class=\"input\"></el-input>\r\n            <common-select :value=\"value\" :options=\"optionsOne3\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>流速 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputThrees\" placeholder=\"最小流速\" class=\"input\" ></el-input>\r\n            <el-input v-model=\"inputFours\" placeholder=\"正常流速\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFives\" placeholder=\"最大流速\" class=\"input\"></el-input>\r\n            <common-select :value=\"value3\" :options=\"optionsOne4\" class=\"select\"></common-select>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport {bus} from '@/main.js'\r\nexport default {\r\n    props: {\r\n        maxFluid: {\r\n             type: String\r\n        },\r\n        mediumFluid:{\r\n            type: String\r\n        },\r\n        minFluid:{\r\n            type: String\r\n        },\r\n        outcmomeData1:{\r\n            type: Array\r\n        }\r\n    },//子组件定义prop接受父组件的传值\r\n    name: 'Outcome',\r\n    components:{\r\n        CommonSelect\r\n    },\r\n    data(){\r\n        return{\r\n            value4:[],\r\n            value3:[],\r\n            value2:[],\r\n            value1:[],\r\n            inputOne: '',\r\n            inputTwo: '',\r\n            inputThree: '',\r\n            inputFour: '',\r\n            inputFive: '',\r\n            inputSix: '',\r\n            inputSeven: '',\r\n            inputEight: '',\r\n            inputNine: '',\r\n            inputTen: '',\r\n            inputOnes: '',\r\n            inputTwos: '',\r\n            inputThrees: '',\r\n            inputFours: '',\r\n            inputFives: '',\r\n            inputSixs: '',\r\n            value: [],\r\n            optionsOne4:[\r\n            {\r\n                    value: '1',\r\n                    label: 'm/s'\r\n                },\r\n            ],\r\n            optionsOne1:[\r\n            {\r\n                    value: '1',\r\n                    label: 'kPa(绝）'\r\n                },\r\n            ],\r\n            optionsOne2:[\r\n            {\r\n                    value: '1',\r\n                    label: '%'\r\n                },\r\n            ],\r\n            optionsOne3:[],\r\n            optionsOne:[\r\n            {\r\n                    value: '1',\r\n                    label: 'm3/h'\r\n                },\r\n\r\n            ],\r\n            dyviscosity:'',//运动粘度的值\r\n           \r\n        }\r\n    },\r\n    watch:{\r\n        maxFlowSpeed:{\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了最小:\", newVal)\r\n            }\r\n        },\r\n        outcmomeData1:{\r\n        handler(newVal, oldVal) {\r\n                console.log(\"接受到了新的结果输出:\", newVal)\r\n                console.log(\"dayinl\",newVal)\r\n                const firstItem = newVal['流量'];\r\n                const secondItem = newVal['压力损失'];\r\n                const thirdItem = newVal['测量精度'];\r\n                const fourItem = newVal['雷诺数']\r\n                const fiveItem = newVal['流速']\r\n                console.log(\"流量数组为：\", firstItem)\r\n                this.minFluid = firstItem['最小'];\r\n                this.mediumFluid = firstItem['正常'];\r\n                this.maxFluid = firstItem['最大'];\r\n                this.inputFour = secondItem['最小'];\r\n                this.inputFive = secondItem['正常'];\r\n                this.inputSix = secondItem['最大']\r\n                this.inputSeven = thirdItem['最小']\r\n                this.inputEight = thirdItem['正常']\r\n                this.inputNine = thirdItem['最大']\r\n                this.inputTen = fourItem['最小']\r\n                this.inputOnes = fourItem['正常']\r\n                this.inputTwos = fourItem['最大']\r\n                this.inputThrees = fiveItem['最小']\r\n                this.inputFours = fiveItem['正常']\r\n                this.inputFives = fiveItem['最大']\r\n            }\r\n        },\r\n        minFluid:{\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了最小流量:\", newVal)\r\n                this.minFluids=newVal\r\n                console.log(\"接受到了最小流量:\", this.minFluids)\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.value2 = [this.optionsOne1[0].value];\r\n        this.value1 = [this.optionsOne[0].value];\r\n        this.value4 = [this.optionsOne2[0].value];\r\n        this.value3 = [this.optionsOne4[0].value];\r\n        // bus.$on('select-value-changed', this.handleSelectValueChanged);\r\n        // bus.$on('select-value-changed1', this.handleSelectValueChanged1);\r\n        bus.$on('dyviscosityChanged', function (newVal) {\r\n            console.log('接收到的运动粘度值为:', newVal);\r\n            // 在这里处理接收到的运动粘度值\r\n            this.dyviscosity=newVal\r\n        });\r\n        bus.$on('fluid-speeds', data => {\r\n            // 处理接收到的数据\r\n            this.inputThrees=data.minFluidSpeed\r\n            this.inputFours=data.maxFluidSpeed\r\n            this.inputFives=data.mediumFluidSpeed\r\n            this.inputFive=data.ys\r\n            this.inputOnes=data.ln\r\n            this.inputSeven=data.minjd\r\n            this.inputNine=data.maxjd\r\n            this.inputEight=data.mediumjd\r\n            console.log(this.inputThrees);\r\n            console.log(this.inputFours);\r\n            console.log(this.inputFives);\r\n        });\r\n        \r\n    },\r\n    methods: {\r\n//     handleSelectValueChanged(value) {\r\n//     // console.log('接收到的流量单位值:', value);\r\n//     this.value1=value\r\n//     // console.log(\"传递过来的流量单位值是：\",this.value1)\r\n//     const selectedOption = this.optionsOne.find(option => option.value == value);\r\n//       // 判断是否找到匹配的选项对象，如果找到则将其 value 属性赋值给 selectedOptionValue，否则将其设为 null。\r\n//       if (selectedOption) {\r\n//         this.value1 = [selectedOption.value];\r\n//       } else {\r\n//         this.value1 = [];\r\n//       }\r\n\r\n//   },\r\n//   handleSelectValueChanged1(value) {\r\n//     // console.log('接收到的压力单位值:', value);\r\n//     this.value2=value\r\n//     // console.log(\"传递过来的压力单位值是：\",this.value2)\r\n//     const selectedOption = this.optionsOne1.find(option => option.value == value);\r\n//       // 判断是否找到匹配的选项对象，如果找到则将其 value 属性赋值给 selectedOptionValue，否则将其设为 null。\r\n//       if (selectedOption) {\r\n//         this.value2 = [selectedOption.value];\r\n//       } else {\r\n//         this.value2 = [];\r\n//       }\r\n\r\n//   }\r\n}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#Outcome{\r\n    position: absolute;\r\n    right:-720px;\r\n    margin-top: -923px;\r\n    background-color: #ffff;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border:1px solid rgb(217, 210, 210) ;\r\n    height: 340px;\r\n    border-radius: 10px;\r\n}\r\n.biaotilan{\r\n  width: auto;\r\n  height: 45px;\r\n  /* background-color: #02a7f0; */\r\n  overflow: hidden;\r\n\r\n}\r\n.sanjiao{\r\n  position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        height: 45px;\r\n        width: 50px;\r\n        background-color: rgb(24, 102, 170);\r\n        clip-path: polygon(0 0, 100% 100%,100% 0);\r\n  }\r\n.container{\r\n    width: 640px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    line-height: 45px;\r\n}\r\n.textOne{\r\n    margin-left: 55px;\r\n}\r\n.textTwo{\r\n    margin-left: 45px;\r\n    margin-right: 135px;\r\n}\r\n.request{\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n}\r\n.input{\r\n    width: 90px;\r\n    margin-left: 10px;\r\n}\r\n.select{\r\n    margin-left: 10px;\r\n}\r\n/* .ei-divider {\r\n  width: 50%;\r\n} */\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Outcome.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Outcome.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Outcome.vue?vue&type=template&id=0211464e&scoped=true&\"\nimport script from \"./Outcome.vue?vue&type=script&lang=js&\"\nexport * from \"./Outcome.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Outcome.vue?vue&type=style&index=0&id=0211464e&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0211464e\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div id=\"Fluid\">\r\n        <div class=\"biaotilan\">\r\n            <div class=\"container\">介质参数 Fluid properties</div>\r\n            <div class=\"sanjiao\"></div>\r\n        </div>\r\n        <div class=\"request1\">\r\n            <span>最小</span>\r\n            <span class=\"textOne\">正常</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span class=\"textTwo\">最大</span>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>流量 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputOne\" placeholder=\"最小流量\" class=\"input\"\r\n                @input=\"minFluidsion()\"></el-input>\r\n            <el-input v-model=\"inputTwo\" placeholder=\"正常流量\" class=\"input\"\r\n                @input=\"mediumFluidsion() \"></el-input>\r\n            <el-input v-model=\"inputThree\" placeholder=\"最大流量\" class=\"input\"\r\n                @input=\"maxFluidsion()\"></el-input>\r\n            <common-select v-model=\"value1\" :options=\"optionsOne\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>温度 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputFour\" placeholder=\"最小温度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFive\" placeholder=\"正常温度\" class=\"input\" @input=\"compressionCoefficient\"></el-input>\r\n            <el-input v-model=\"inputSix\" placeholder=\"最大温度\" class=\"input\"></el-input>\r\n            <common-select :value=\"value3\" :options=\"optionsOnes\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>压力 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputSeven\" placeholder=\"最小压力\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEight\" placeholder=\"正常压力\" class=\"input\" @input=\"compressionCoefficient\"></el-input>\r\n            <el-input v-model=\"inputNine\" placeholder=\"最大压力\" class=\"input\"></el-input>\r\n            <common-select v-model=\"value2\" :options=\"optionsTwo\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>密度 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTen\" placeholder=\"最小密度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputOnes\" placeholder=\"正常密度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputTwos\" placeholder=\"最大密度\" class=\"input\"></el-input>\r\n            <common-select :value=\"value5\" :options=\"optionsThress\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>粘度 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputFours\" placeholder=\"最小粘度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFives\" id=\"viscosityInput\" placeholder=\"正常粘度\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSixs\" placeholder=\"最大粘度\" class=\"input\"></el-input>\r\n            <common-select v-model=\"value4\" :options=\"optionsFour\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>量程范围 </span>&nbsp;\r\n            <el-input v-model=\"inputSevens\" placeholder=\"最小量程\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEights\" placeholder=\"正常量程\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputNines\" placeholder=\"最大量程\" class=\"input\"></el-input>\r\n            <common-select v-model=\"value7\" :options=\"optionsFive\" class=\"select\"></common-select>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>标况密度\r\n            </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTens\" placeholder=\"标况密度\" class=\"input\"></el-input>\r\n            <!-- <common-select :value=\"value6\" :options=\"optionsSix\" class=\"select\"></common-select> -->\r\n            <el-input v-model=\"inputTens1\" placeholder=\"单位\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"child1\">\r\n            <Process :processData1=\"processData1\" :compressConvenient=\"compressConvenient\" />\r\n        </div>\r\n        <div class=\"child2\">\r\n            <Outcome :outcmomeData1=\"outcmomeData1\" :maxFluid=\"maxFluid\"\r\n                :mediumFluid=\"mediumFluid\" :minFluid=\"minFluid\"  />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport Process from './Process.vue';\r\nimport Outcome from './Outcome.vue';\r\nimport { bus } from '@/main.js'\r\n\r\nexport default {\r\n    name: 'Fluid',\r\n    props: {\r\n        fluidData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        processData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        outcmomeData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        }\r\n    },\r\n    components: {\r\n        CommonSelect,\r\n        Process,\r\n        Outcome\r\n    },\r\n    data() {\r\n        return {\r\n            optionsOnes: [\r\n                {\r\n                    value: '1',\r\n                    label: '°C'\r\n                }\r\n            ],\r\n            medium:'',//接收到的介质名称，根据这个判断压缩系数是否计算\r\n            value6: [],\r\n            value5: [],\r\n            value3: [],\r\n            value2: [],\r\n            value1: [],\r\n            value4: [],\r\n            value7:[],\r\n            inputTens: '',\r\n            inputOne: '',\r\n            inputTwo: '',\r\n            inputThree: '',\r\n            inputFour: '',\r\n            inputFive: '',\r\n            inputSix: '',\r\n            inputSeven: '',\r\n            inputEight: '',\r\n            inputNine: '',\r\n            inputTen: '',\r\n            inputOnes: '',\r\n            inputTwos: '',\r\n            inputThrees: '',\r\n            inputFours: '',\r\n            inputFives: '',\r\n            inputSixs: '',\r\n            inputSevens: '',\r\n            inputEights: '',\r\n            inputNines: '',\r\n            value: [],\r\n            inputTens1:'',\r\n            optionsOne: [\r\n                {\r\n                    value: '1',\r\n                    label: 'm3/h',\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: 'm3/min'\r\n                },\r\n                {\r\n                    value: '3',\r\n                    label: 'm3/s'\r\n                },\r\n                {\r\n                    value: '4',\r\n                    label: 'L/h'\r\n                },\r\n                {\r\n                    value: '5',\r\n                    label: 'l/min'\r\n                },\r\n                {\r\n                    value: '6',\r\n                    label: 'l/s'\r\n                },\r\n                {\r\n                    value: '7',\r\n                    label: 'Nm3/h'\r\n                },\r\n                {\r\n                    value: '8',\r\n                    label: 'Nm3/min'\r\n                },\r\n                {\r\n                    value: '9',\r\n                    label: 'Nm3/s'\r\n                },\r\n                {\r\n                    value: '10',\r\n                    label: 'kg/h'\r\n                },\r\n                {\r\n                    value: '11',\r\n                    label: 'kg/min'\r\n                },\r\n                {\r\n                    value: '12',\r\n                    label: 'kg/s'\r\n                },\r\n                {\r\n                    value: '13',\r\n                    label: 't/h'\r\n                }\r\n            ],\r\n            optionsTwo: [\r\n                {\r\n                    value: '1',\r\n                    label: 'kPa(绝）'\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: 'kPa(表）'\r\n                },\r\n                {\r\n                    value: '3',\r\n                    label: 'MPa(绝）'\r\n                },\r\n                {\r\n                    value: '4',\r\n                    label: 'MPa(表）'\r\n                },\r\n                {\r\n                    value: '5',\r\n                    label: 'bar(绝）'\r\n                },\r\n                {\r\n                    value: '6',\r\n                    label: 'bar(表）'\r\n                },\r\n            ],\r\n            optionsThress: [\r\n                {\r\n                    value: '1',\r\n                    label: 'kg/m3'\r\n                }\r\n            ],\r\n            optionsFour: [\r\n                {\r\n                    value: '1',\r\n                    label: 'cP'\r\n                },\r\n                {\r\n                    value: '2',\r\n                    label: 'mPa·s'\r\n                },\r\n                {\r\n                    value: '3',\r\n                    label: 'kg/m·s'\r\n                }\r\n\r\n\r\n            ],\r\n            optionsFive: [\r\n                {\r\n                    value:'1',\r\n                    label:'t/h'\r\n                }\r\n            ],\r\n            compressConvenient: \"\",//定义压缩系数的计算结果（字符串）\r\n            maxFluid: \"\",//定义最大流量的计算结果\r\n            mediumFluid: \"\",//定义正常流量的计算结果\r\n            minFluid: \"\",//定义最小流量的计算结果\r\n            outcmomeData1: [],\r\n            processData1: [],\r\n            diameterValue: '',//声明管道内径变量\r\n            viscosity:'',//声明单位为kg/m·s动力粘度\r\n            dyviscosity:'',//声明运动粘度的值\r\n        };\r\n    },\r\n    methods: {\r\n        handleSelectChange2() {\r\n            // 触发事件并传递选中值\r\n            // bus.$emit('select-value-changed2', this.value4);\r\n            //   console.log('选中的值:', this.value4);\r\n        },\r\n        handleDefaultSelection2() {\r\n            // 默认选中数组的第一个值\r\n            this.value4 = [this.optionsFour[0].value];\r\n            // 触发事件并传递默认选中值\r\n            // bus.$emit('select-value-changed1', this.value2);\r\n            //   console.log('默认选中的值:', this.value1);\r\n        },\r\n        handleSelectChange1() {\r\n            // 触发事件并传递选中值\r\n            bus.$emit('select-value-changed1', this.value2);\r\n            //   console.log('选中的值:', this.value2);\r\n        },\r\n        handleDefaultSelection1() {\r\n            // 默认选中数组的第一个值\r\n            this.value2 = [this.optionsTwo[0].value];\r\n            // 触发事件并传递默认选中值\r\n            bus.$emit('select-value-changed1', this.value2);\r\n            //   console.log('默认选中的值:', this.value1);\r\n        },\r\n        handleSelectChange() {\r\n            // 触发事件并传递选中值\r\n            bus.$emit('select-value-changed', this.value1);\r\n            //   console.log('选中的值:', this.value1);\r\n        },\r\n        handleDefaultSelection() {\r\n            // 默认选中数组的第一个值\r\n            this.value1 = [this.optionsOne[0].value];\r\n            // 触发事件并传递默认选中值\r\n            bus.$emit('select-value-changed', this.value1);\r\n            //   console.log('默认选中的值:', this.value1);\r\n        },\r\n        maxFluidsion() {\r\n            const density1 = parseFloat(this.inputTens);//标准密度\r\n            const density = parseFloat(this.inputOnes);//工况密度\r\n            if (!isNaN(density) && !isNaN(density1)) {\r\n                let maxFluid = parseFloat(this.inputThree);\r\n                console.log(\"输入的最大流量是\", this.inputThree)\r\n                // 单位换算逻辑\r\n                const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                let output; // 定义输出变量\r\n                if (!isNaN(unit)) {\r\n                    if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output\r\n                            this.maxFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 60).toString()\r\n                            console.log(\"unit == '2'时\", this.minFluid)\r\n                        } else if (unit == '3') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density * 60;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density * 3600;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = 1000 * output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.maxFluid); // 输出结果\r\n                    bus.$emit('maxFluidChanged', this.maxFluid);\r\n                }\r\n            }\r\n            this.$watch('value1', (newValue, oldValue) => {\r\n                if (!isNaN(density) && !isNaN(density1)) {\r\n                let maxFluid = parseFloat(this.inputThree);\r\n                console.log(\"输入的最大流量是\", this.inputThree)\r\n                // 单位换算逻辑\r\n                const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                let output; // 定义输出变量\r\n                if (!isNaN(unit)) {\r\n                    if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output\r\n                            this.maxFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 60).toString()\r\n                            console.log(\"unit == '2'时\", this.minFluid)\r\n                        } else if (unit == '3') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = maxFluid\r\n                            const fluidFlow = output\r\n                            this.maxFluid = (fluidFlow * 3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = maxFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density * 60;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = output / density * 3600;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = maxFluid;\r\n                            const fluidFlow = 1000 * output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.maxFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.maxFluid); // 输出结果\r\n                    bus.$emit('maxFluidChanged', this.maxFluid);\r\n                }\r\n            }\r\n            });\r\n        },\r\n        minFluidsion() {\r\n            const density1 = parseFloat(this.inputTens);//标准密度\r\n            const density = parseFloat(this.inputOnes);//工况密度\r\n            if (!isNaN(density) && !isNaN(density1)) {\r\n                let minFluid = parseFloat(this.inputOne);\r\n                console.log(\"输入的最小流量是\", this.inputOne)\r\n                // 单位换算逻辑\r\n                const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                let output; // 定义输出变量\r\n                if (!isNaN(unit)) {\r\n                    if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output \r\n                            this.minFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*60).toString()\r\n                            console.log(\"unit == '2'时\", this.minFluid)\r\n                        } else if (unit == '3') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density*60;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density*3600;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = minFluid;\r\n                            const fluidFlow = 1000*output/density;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.minFluid); // 输出结果\r\n                    bus.$emit('minFluidChanged', this.minFluid);\r\n                }\r\n            }\r\n            this.$watch('value1', (newValue, oldValue) => {\r\n                if (!isNaN(density) && !isNaN(density1)) {\r\n                    let minFluid = parseFloat(this.inputOne);\r\n                    console.log(\"输入的最小流量是\", this.inputOne)\r\n                    // 单位换算逻辑\r\n                    const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                    console.log(\"流量单位变化为：\", unit)\r\n                    console.log(\"工况密度是\", density)\r\n                    console.log(\"标准密度是\", density1)\r\n                    let output; // 定义输出变量\r\n                    if (!isNaN(unit)) {\r\n                        if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output \r\n                            this.minFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*60).toString()\r\n                            console.log(\"unit == '2'时\", this.minFluid)\r\n                        } else if (unit == '3') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = minFluid \r\n                            const fluidFlow = output \r\n                            this.minFluid = (fluidFlow*3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = minFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density*60;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = minFluid;\r\n                            const fluidFlow = output/density*3600;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = minFluid;\r\n                            const fluidFlow = 1000*output/density;\r\n                            const fluidFlows = fluidFlow \r\n                            this.minFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.minFluid); // 输出结果\r\n                    bus.$emit('minFluidChanged', this.minFluid);\r\n\r\n\r\n                    }\r\n                }\r\n            });\r\n\r\n        },\r\n        mediumFluidsion() {\r\n            const density1 = parseFloat(this.inputTens);//标准密度\r\n            const density = parseFloat(this.inputOnes);//工况密度\r\n            if (!isNaN(density) && !isNaN(density1)) {\r\n                let mediumFluid = parseFloat(this.inputTwo);\r\n                console.log(\"输入的正常流量是\", this.inputTwo)\r\n                // 单位换算逻辑\r\n                const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                let output; // 定义输出变量\r\n                if (!isNaN(unit)) {\r\n                    if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 60).toString()\r\n                            console.log(\"unit == '2'时\", this.mediumFluid)\r\n                        } else if (unit == '3') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density * 60;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density * 3600;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = 1000 * output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.maxFluid); // 输出结果\r\n                    bus.$emit('mediumFluidChanged', this.mediumFluid);\r\n                }\r\n            }\r\n            this.$watch('value1', (newValue, oldValue) => {\r\n                if (!isNaN(density) && !isNaN(density1)) {\r\n                let mediumFluid = parseFloat(this.inputTwo);\r\n                console.log(\"输入的正常流量是\", this.inputTwo)\r\n                // 单位换算逻辑\r\n                const unit = this.value1[0]; // 假设选择的单位存储在 selectedUnit 中\r\n                let output; // 定义输出变量\r\n                if (!isNaN(unit)) {\r\n                    if (unit == '1' || unit == '2' || unit == '3' || unit == '4' || unit == '5' || unit === '6' || unit == '7' || unit == '8' || unit == '9') {\r\n                        if (unit == '1') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = fluidFlow.toFixed(2)\r\n                        } else if (unit == '2') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 60).toString()\r\n                            console.log(\"unit == '2'时\", this.mediumFluid)\r\n                        } else if (unit == '3') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 3600).toString()\r\n                        } else if (unit == '4') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 0.001).toString()\r\n                        } else if (unit == '5') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 0.06).toString()\r\n                        } else if (unit == '6') {\r\n                            output = mediumFluid\r\n                            const fluidFlow = output\r\n                            this.mediumFluid = (fluidFlow * 3.6).toString()\r\n                        } else if (unit == '7') {\r\n                            const conversionFactor = density1 / density;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else if (unit == '8') {\r\n                            const conversionFactor = density1 / density * 60;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else if (unit == '9') {\r\n                            const conversionFactor = density1 / density * 3600;\r\n                            output = mediumFluid * conversionFactor\r\n                            const fluidFlow = output\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n                        } else {\r\n                            output = '无法识别的单位';\r\n                        }\r\n                    } else if (unit == '10' || unit == '11' || unit == '12' || unit == '13') {\r\n                        if (unit == '10') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '11') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density * 60;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '12') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = output / density * 3600;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        } else if (unit == '13') {\r\n                            output = mediumFluid;\r\n                            const fluidFlow = 1000 * output / density;\r\n                            const fluidFlows = fluidFlow\r\n                            this.mediumFluid = fluidFlows.toString()\r\n\r\n                        }\r\n                    } else {\r\n                        output = '无法识别的单位';\r\n                    }\r\n                    console.log(this.mediumFluid); // 输出结果\r\n                    bus.$emit('mediumFluidChanged', this.mediumFluid);\r\n                }\r\n                }\r\n            });\r\n        },\r\n        compressionCoefficient() {\r\n            if(this.medium=='气体')\r\n            {\r\n            const temperature = parseFloat(this.inputFive);\r\n            if (isNaN(temperature)) {\r\n                return; // 温度输入不合法，不进行任何操作\r\n            }\r\n\r\n            let pressure = parseFloat(this.inputEight);\r\n            if (isNaN(pressure)) {\r\n                return; // 压力输入不合法，不进行任何操作\r\n            }\r\n\r\n            let selectedOption = parseInt(this.value2); // 将字符串类型的选项值转换为数字类型\r\n\r\n            const recalculateCompressCoefficient = () => {\r\n                let pressureInKpaAbs = pressure; // 初始化压力值为输入的值\r\n                switch (selectedOption) {\r\n                    case 2:\r\n                        pressureInKpaAbs += 101.325; // 将压力值从kPa(表）转换为kPa(绝）\r\n                        break;\r\n                    case 3:\r\n                        pressureInKpaAbs *= 1000; // 将压力值从MPa(绝）转换为kPa(绝）\r\n                        break;\r\n                    case 4:\r\n                        pressureInKpaAbs = pressure * 1000 + 101.325; // 将压力值从MPa(表）转换为kPa(绝）\r\n                        break;\r\n                    case 5:\r\n                        pressureInKpaAbs *= 101.325; // 将压力值从bar(绝）转换为kPa(绝）\r\n                        break;\r\n                    case 6:\r\n                        pressureInKpaAbs = pressure * 101.325 + 101.325; // 将压力值从bar(表）转换为kPa(绝）\r\n                        break;\r\n                    default: // 默认情况下，假设压力值已经是kPa(绝）单位\r\n                        break;\r\n                }\r\n                const compressCoefficient = (pressureInKpaAbs / 101.325) * 273 / (273 + temperature);\r\n                this.compressConvenient = compressCoefficient.toString();\r\n            };\r\n\r\n            // 初始计算压缩系数\r\n            recalculateCompressCoefficient();\r\n            // 监听选项值的变化，并重新计算压力值和压缩系数\r\n            this.$watch('value2', (newValue, oldValue) => {\r\n                if (newValue == oldValue) {\r\n                    return; // 单位值未改变，不进行任何操作\r\n                }\r\n                console.log(`压力选项值从 ${oldValue} 变为 ${newValue}`);\r\n                // 更新选项值并重新计算压力值和压缩系数\r\n                selectedOption = parseInt(newValue);\r\n                pressure = parseFloat(this.inputEight);\r\n                recalculateCompressCoefficient();\r\n            });\r\n        }\r\n        },\r\n        calculateViscosity(){\r\n            //计算运动粘度\r\n            this.dyviscosity = Number(this.viscosity) / Number(this.inputOnes)\r\n            console.log(\"运动粘度为：\", this.dyviscosity)\r\n        },\r\n        // 更新粘度值\r\n        updateViscosity(value, unit) {\r\n            if (value && unit) {\r\n                if (unit == 'kg/m·s') {\r\n                    this.viscosity = parseFloat(value);\r\n                } else if (unit == 'mPa·s') {\r\n                    this.viscosity = 0.001 * parseFloat(value);\r\n                } else if (unit == 'cP') {\r\n                    this.viscosity = 0.001 * parseFloat(value);\r\n                } else {\r\n                    console.log(\"不支持的单位\");\r\n                    return;\r\n                }\r\n                console.log(\"统一化为单位是kg/m·s后的粘度值为：\", this.viscosity);\r\n                this.calculateViscosity()\r\n                console.log(\"运动粘度为；\",this.dyviscosity)\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.$watch('value4', (newValue, oldValue) => {\r\n            console.log('下拉框数值变化：', newValue);\r\n            if (newValue && newValue.length > 0) {\r\n                const unit = this.optionsFour.find(option => option.value === newValue[0]).label;\r\n                this.updateViscosity(this.inputFives, unit);\r\n            }\r\n        });\r\n        this.$watch('inputOnes', (newValue, oldValue) => {\r\n            this.calculateViscosity(); // 调用计算运动粘度函数\r\n            bus.$emit('inputOnes', newValue);\r\n        });\r\n        // 监听输入框数值变化\r\n        this.$watch('inputFives', (newValue, oldValue) => {\r\n            if (newValue || newValue === 0) {\r\n                this.updateViscosity(newValue, this.value4[0] ? this.optionsFour.find(option => option.value === this.value4[0]).label : '');\r\n            }\r\n        });\r\n        this.value5 = [this.optionsThress[0].value];\r\n        this.value3 = [this.optionsOnes[0].value];\r\n        this.value7 = [this.optionsFive[0].value];\r\n        this.handleDefaultSelection2()\r\n        this.handleDefaultSelection1()\r\n        // 初始化默认选中值为选项数组的第一个值\r\n        this.handleDefaultSelection()\r\n        // this.calculatemaxFlowSpeed()\r\n        bus.$on('density-change', (density) => {\r\n            console.log('收到的密度值:', density);\r\n            console.log(typeof (density))//number\r\n            console.log(typeof (this.compressConvenient))//String\r\n            console.log(\"density:\", density);\r\n            console.log(\"compressConvenient:\", this.compressConvenient);\r\n            if(this.medium=='气体'){\r\n            this.inputOnes = Number(density) * Number(this.compressConvenient);\r\n            this.$watch('compressConvenient', (newVal, oldVal) => {\r\n                this.inputOnes = Number(density) * Number(newVal);\r\n            });\r\n        }else if(this.medium=='液体'){\r\n            this.inputOnes=density\r\n        }\r\n            this.inputTens = density\r\n            console.log(typeof (this.inputOnes))\r\n            console.log(this.inputOnes)\r\n            // this.pressureLossion()\r\n        });\r\n        bus.$on('viscosity-change', (viscosity) => {\r\n            console.log('收到的粘度值:', viscosity);\r\n            if (viscosity == 0 && (this.medium == '气体' || this.medium == '液体')) {\r\n                //用户自己输入\r\n            } else {\r\n                this.inputFives = viscosity * 0.001; // 将单位kg/m·s转换为cP呈现在页面上\r\n                this.viscosity = viscosity;\r\n                console.log(\"已设置this.inputFives为计算结果：\", this.inputFives);\r\n            }\r\n            console.log(\"最终的标准动力粘度值是：\", this.viscosity); // 添加打印语句，打印最终的this.inputFives\r\n            this.calculateViscosity();     \r\n        });\r\n        bus.$on('medium-change', (medium) => {\r\n            this.medium=medium\r\n            console.log(\"接收到选择的具体介质名称后判断是否计算压缩系数\", medium);\r\n            if (medium === '气体') {\r\n                this.inputTens1 = 'kg/m3';\r\n                // console.log(\"1234\", this.inputTens1)\r\n            } else if (medium === '液体') {\r\n                this.compressConvenient='无'\r\n                this.inputTens1 = 'kg/m3';\r\n            } else if(medium === '蒸汽'){\r\n                this.compressConvenient='无'\r\n            }\r\n        });\r\n    },\r\n    watch: {\r\n        dyviscosity(newVal) {\r\n            bus.$emit('dyviscosityChanged', newVal);\r\n            console.log('监听到的运动粘度值为：', newVal);\r\n        },\r\n        value4(newValue, oldValue){\r\n            this.handleSelectChange2();\r\n        },\r\n        value1(newValue, oldValue) {\r\n            // 监听 value1 的变化，当选项改变时执行 handleSelectChange() 方法\r\n            this.handleSelectChange();\r\n        },\r\n        value2(newValue, oldValue) {\r\n            // 监听 value1 的变化，当选项改变时执行 handleSelectChange() 方法\r\n            this.handleSelectChange1();\r\n        },\r\n        processData: {\r\n            handler(newVal, oldVal) {\r\n                this.processData1 = newVal\r\n                console.log(\"接受到了项目信息:\", this.processData1)\r\n            }\r\n        },\r\n        outcmomeData: {\r\n            handler(newVal, oldVal) {\r\n                this.outcmomeData1 = newVal\r\n                console.log(\"接受到了输出结果信息:\", this.outcmomeData1)\r\n            }\r\n        },\r\n        fluidData: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了\", newVal)\r\n                const firstItem = newVal['流量'];\r\n                const secondItem = newVal['温度'];\r\n                const thirdItem = newVal['压力'];\r\n                const fourItem = newVal['密度']\r\n                const fiveItem = newVal['粘度']\r\n                const sixItem = newVal['量程范围']\r\n                this.inputOne = firstItem['最小'];\r\n                this.inputTwo = firstItem['正常'];\r\n                this.inputThree = firstItem['最大'];\r\n                this.inputFour = secondItem['最小'];\r\n                this.inputFive = secondItem['正常'];\r\n                this.inputSix = secondItem['最大']\r\n                this.inputSeven = thirdItem['最小']\r\n                this.inputEight = thirdItem['正常']\r\n                this.inputNine = thirdItem['最大']\r\n                this.inputTen = fourItem['最小']\r\n                this.inputOnes = fourItem['正常']\r\n                this.inputTwos = fourItem['最大']\r\n                this.inputFours = fiveItem['最小']\r\n                this.inputFives = fiveItem['正常']\r\n                this.inputSixs = fiveItem['最大']\r\n                 this.inputSevens = sixItem['最小']\r\n                this.inputEights = sixItem['正常']\r\n                this.inputNines = sixItem['最大']\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n    },\r\n\r\n\r\n};  \r\n</script>\r\n<style scoped>\r\n#Fluid {\r\n    position: absolute;\r\n    left: 29px;\r\n    /* left: 128px; */\r\n    margin-top: 590px;\r\n    left: 110px;\r\n    background-color: #ffff;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    height: 430px;\r\n    /* 400px */\r\n    border-radius: 10px;\r\n    border: 1px solid rgb(217, 210, 210);\r\n}\r\n\r\n.biaotilan {\r\n    width: auto;\r\n    height: 45px;\r\n    /* background-color: #02a7f0; */\r\n    overflow: hidden;\r\n}\r\n\r\n.sanjiao {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    height: 45px;\r\n    width: 50px;\r\n    background-color: rgb(24, 102, 170);\r\n    clip-path: polygon(0 0, 100% 100%, 100% 0);\r\n}\r\n\r\n.container {\r\n    width: 505px;\r\n    height: 45px;\r\n    line-height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n}\r\n\r\n.textOne {\r\n    margin-left: 75px;\r\n}\r\n\r\n.textTwo {\r\n    margin-left: 75px;\r\n    margin-right: 125px;\r\n}\r\n\r\n.request1 {\r\n    margin-top: 10px;\r\n    margin-left: 110px;\r\n    font-size: 13px;\r\n}\r\n\r\n.request {\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n}\r\n\r\n.input {\r\n    width: 90px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.select {\r\n    margin-left: 10px;\r\n    width: 90px;\r\n}\r\n\r\n.child {\r\n    margin-top: -798px;\r\n    left: 668px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Fluid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Fluid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Fluid.vue?vue&type=template&id=07acd87c&scoped=true&\"\nimport script from \"./Fluid.vue?vue&type=script&lang=js&\"\nexport * from \"./Fluid.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Fluid.vue?vue&type=style&index=0&id=07acd87c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"07acd87c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Size\"}},[_vm._m(0),_vm._m(1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"仪表尺寸 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputOne),callback:function ($$v) {_vm.inputOne=$$v},expression:\"inputOne\"}}),_c('common-select',{staticClass:\"select2\",attrs:{\"options\":_vm.inputTwo},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThree),callback:function ($$v) {_vm.inputThree=$$v},expression:\"inputThree\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小可测量流量 \")]),_vm._v(\"               \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFive),callback:function ($$v) {_vm.inputFive=$$v},expression:\"inputFive\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSix),callback:function ($$v) {_vm.inputSix=$$v},expression:\"inputSix\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最大可测量流量 \")]),_vm._v(\"               \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSeven),callback:function ($$v) {_vm.inputSeven=$$v},expression:\"inputSeven\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEight),callback:function ($$v) {_vm.inputEight=$$v},expression:\"inputEight\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNine),callback:function ($$v) {_vm.inputNine=$$v},expression:\"inputNine\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小可测量流量的流速\")]),_vm._v(\"      \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTen),callback:function ($$v) {_vm.inputTen=$$v},expression:\"inputTen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputOnes),callback:function ($$v) {_vm.inputOnes=$$v},expression:\"inputOnes\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwos),callback:function ($$v) {_vm.inputTwos=$$v},expression:\"inputTwos\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最大可测量流量的流速\")]),_vm._v(\"      \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThrees),callback:function ($$v) {_vm.inputThrees=$$v},expression:\"inputThrees\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFours),callback:function ($$v) {_vm.inputFours=$$v},expression:\"inputFours\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFives),callback:function ($$v) {_vm.inputFives=$$v},expression:\"inputFives\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小设计流量的压损 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSixs),callback:function ($$v) {_vm.inputSixs=$$v},expression:\"inputSixs\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSevens),callback:function ($$v) {_vm.inputSevens=$$v},expression:\"inputSevens\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEights),callback:function ($$v) {_vm.inputEights=$$v},expression:\"inputEights\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最大设计流量的压损 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNines),callback:function ($$v) {_vm.inputNines=$$v},expression:\"inputNines\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTens),callback:function ($$v) {_vm.inputTens=$$v},expression:\"inputTens\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEleven),callback:function ($$v) {_vm.inputEleven=$$v},expression:\"inputEleven\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最小设计流量的精度 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwelve),callback:function ($$v) {_vm.inputTwelve=$$v},expression:\"inputTwelve\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThirteen),callback:function ($$v) {_vm.inputThirteen=$$v},expression:\"inputThirteen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFourteen),callback:function ($$v) {_vm.inputFourteen=$$v},expression:\"inputFourteen\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最大设计流量的精度 \")]),_vm._v(\"         \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFifteen),callback:function ($$v) {_vm.inputFifteen=$$v},expression:\"inputFifteen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSixteen),callback:function ($$v) {_vm.inputSixteen=$$v},expression:\"inputSixteen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSeventeen),callback:function ($$v) {_vm.inputSeventeen=$$v},expression:\"inputSeventeen\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"正常流量的雷诺数 \")]),_vm._v(\"           \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEighteen),callback:function ($$v) {_vm.inputEighteen=$$v},expression:\"inputEighteen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNineteen),callback:function ($$v) {_vm.inputNineteen=$$v},expression:\"inputNineteen\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwenty),callback:function ($$v) {_vm.inputTwenty=$$v},expression:\"inputTwenty\"}})],1),_c('div',{staticClass:\"recommend-button\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.recommend}},[_vm._v(\"推荐\")])],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"多口径比对 Compare sizes\")]),_c('div',{staticClass:\"sanjiao\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"request\"},[_c('span',{staticClass:\"textOne\"},[_vm._v(\"小一尺寸\")]),_vm._v(\"   \"),_c('span',{staticClass:\"textTwo\"},[_vm._v(\"当前尺寸\")]),_vm._v(\"  \"),_c('span',[_vm._v(\"大一尺寸\")])])\n}]\n\nexport { render, staticRenderFns }","//连接已创建的数据库\r\nvar db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);\r\n\r\n//查询仪表类型对应的口径信息---完成\r\nexport function getBore_informations_One(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id,size from bore_informations where instrument_type_id=?', [obj.instrument_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//在调用以下接口时前端要写一个判断，判断其选择的介质式哪种类型\r\n//改的\r\n//--------------------------------------------------------------------------------------------------\r\n //若介质选择气体，则根据选择的仪表类型、口径id和具体介质id来查询仪表口径对应的最大可测流量、最小可测流量等信息\r\n export function getGflowtables_bore(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select gmin_standardflow,gmax_standardflow,gmin_select,gmax_select from gflowtables where bore_informations_id=? and instrument_type_id=? and mediutables_id=?', [obj.bore_informations_id,obj.instrument_type_id,obj.mediutables_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//若介质选择液体，则根据选择的仪表类型、口径id和具体介质id来查询仪表口径对应的最大可测流量、最小可测流量等信息\r\nexport function getLflowtables_bore(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select lmin_standardflow,lmax_standardflow,lmin_select,lmax_select from lflowtables where bore_informations_id=? and instrument_type_id=? and mediutables_id=?', [obj.bore_informations_id,obj.instrument_type_id,obj.mediutables_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//若介质选择蒸汽,同上\r\nexport function getSteamstable(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select size,stflow_upperlimit,stflow_lowlimit,expandflow_upperlimit from steamstable where bore_informations_id=? and instrument_type_id=? and mediutables_id=?', [obj.bore_informations_id,obj.instrument_type_id,obj.mediutables_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n  //----------------------------------------------------------------------------------------------------------","<template>\r\n    <div id=\"Size\">\r\n        <div class=\"biaotilan\">\r\n            <div class=\"container\">多口径比对 Compare sizes</div>\r\n      <div class=\"sanjiao\"></div>\r\n    </div>\r\n        <div class=\"request\">\r\n            <span class=\"textOne\">小一尺寸</span>&nbsp;&nbsp;\r\n            <span class=\"textTwo\">当前尺寸</span>&nbsp;\r\n            <span>大一尺寸</span>\r\n        </div>\r\n        <div class=\"request\"> \r\n            <span>仪表尺寸 </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputOne\" class=\"input\"></el-input>\r\n            <common-select v-model=\"name\" :options=\"inputTwo\" class=\"select2\" ></common-select>\r\n            <el-input v-model=\"inputThree\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最小可测量流量 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputFour\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFive\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSix\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最大可测量流量 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputSeven\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEight\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputNine\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最小可测量流量的流速</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputOnes\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputTwos\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最大可测量流量的流速</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputThrees\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFours\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFives\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最小设计流量的压损 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputSixs\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSevens\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEights\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最大设计流量的压损 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputNines\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputTens\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputEleven\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最小设计流量的精度 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputTwelve\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputThirteen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputFourteen\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>最大设计流量的精度 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputFifteen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSixteen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputSeventeen\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"request\">\r\n            <span>正常流量的雷诺数 </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <el-input v-model=\"inputEighteen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputNineteen\" class=\"input\"></el-input>\r\n            <el-input v-model=\"inputTwenty\" class=\"input\"></el-input>\r\n        </div>\r\n        <div class=\"recommend-button\">\r\n        <el-button type=\"primary\" @click=\"recommend\">推荐</el-button>\r\n    </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { MessageBox } from 'element-ui'\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport { bus } from '@/main.js'\r\nimport {getGflowtables_bore,getLflowtables_bore,getSteamstable,getBore_informations_One} from '@/api/select/bore_information.js';\r\nexport default {\r\n    name: 'Size',\r\n    components:{\r\n    CommonSelect\r\n  },\r\n    props:{\r\n        sizeData:{\r\n      type:Array,\r\n      default:()=>([])\r\n    }\r\n  },\r\n    data(){\r\n        return{\r\n            minFluid:'',//存储最小流量\r\n            maxFluid:'',//存储最大流量\r\n            mediumFluid:'',//存储正常流量\r\n            value:'',\r\n            name:[],\r\n            inputOne: '',\r\n            inputTwo: [],\r\n            inputThree: '',\r\n            inputFour: '',\r\n            inputFive: '',\r\n            inputSix: '',\r\n            inputSeven: '',\r\n            inputEight: '',\r\n            inputNine: '',\r\n            inputTen: '',\r\n            inputOnes: '',\r\n            inputTwos: '',\r\n            inputThrees: '',\r\n            inputFours: '',\r\n            inputFives: '',\r\n            inputSixs: '',\r\n            inputSevens: '',\r\n            inputEights: '',\r\n            inputNines: '',\r\n            inputTens: '',\r\n            inputEleven: '',\r\n            inputTwelve: '',\r\n            inputThirteen: '',\r\n            inputFourteen: '',\r\n            inputFifteen: '',\r\n            inputSixteen: '',\r\n            inputSeventeen: '',\r\n            inputEighteen: '',\r\n            inputNineteen: '',\r\n            inputTwenty: '',\r\n            instrument_id:'',//仪表类型id\r\n            bore_id:'',//具体口径id\r\n            selectname:'',//选择的具体介质名称\r\n            bore_size:'',//具体口径大小\r\n            viscosity:'',\r\n            density:'',\r\n            dyviscosity:'',//运动粘度的值，后续计算流量上下限\r\n            fmediutables_id:'',//具体气体介质名称的id\r\n            lmediutables_id:'',//具体液体介质名称的id\r\n            smediutables_id:'',//具体蒸汽介质名称id\r\n            wdensity:'',//工况密度的值\r\n            maxFluidSpeed:'',//最大流速\r\n            minFluidSpeed:'',//最小流速\r\n            mediumFluidSpeed:'',//正常流速\r\n            ys:'',//压力损失\r\n            ln:'',//雷诺数\r\n            minjd:'',//最小精度\r\n            maxjd:'',//最大精度\r\n            mediumjd:'',//正常精度\r\n            rebore_id:''//推荐按钮的口径id\r\n\r\n\r\n        }\r\n    },\r\n    watch: {\r\n        name(newValue) {\r\n            if (newValue.length > 0) {\r\n                console.log(newValue)\r\n                this.bore_id = newValue[0]\r\n                this.bore_size = newValue.label\r\n                console.log('用户选择的口径id是：', this.bore_id);\r\n                // console.log('用户选择的口径id大小是：', this.bore_size);\r\n                // this.getBore_informations_OneData()\r\n                this.getBoreData()\r\n            }\r\n        },\r\n        sizeData: {\r\n    handler(newVal, oldVal) {\r\n      console.log('接收到的sizeData数据：', newVal);\r\n      const firstItem = newVal['仪表尺寸'];\r\n      const secondItem=newVal['最小可测量流量'];\r\n      const thirdItem=newVal['最大可测量流量'];\r\n      const fourItem=newVal['最小可测量流量的流速']\r\n      const fiveItem=newVal['最大可测量流量的流速']\r\n      const sixItem=newVal['最小设计流量的压损']\r\n      const sevenItem=newVal['最大设计流量的压损']\r\n      const eightItem=newVal['最小设计流量的精度']\r\n      const nineItem=newVal['最大设计流量的精度']\r\n      const tenItem=newVal['正常流量的雷诺数']\r\n        console.log(secondItem)\r\n        console.log(thirdItem)\r\n        // 将仪表尺寸的具体数据赋值给 inputOne、inputTwo、inputThree\r\n        this.inputOne = firstItem['小一尺寸'];\r\n        this.inputTwo = firstItem['当前尺寸'];\r\n        this.inputThree = firstItem['大一尺寸'];\r\n        this.inputFour=secondItem['小一尺寸'];\r\n        this.inputFive=secondItem['当前尺寸'];\r\n        this.inputSix=secondItem['大一尺寸']\r\n        this.inputSeven=thirdItem['小一尺寸']\r\n        this.inputEight=thirdItem['当前尺寸']\r\n        this.inputNine=thirdItem['大一尺寸']\r\n        this.inputTen=fourItem['小一尺寸']\r\n        this.inputOnes=fourItem['当前尺寸']\r\n        this.inputTwos=fourItem['大一尺寸']\r\n        this.inputThrees=fiveItem['小一尺寸']\r\n        this.inputFours=fiveItem['当前尺寸']\r\n        this.inputFives=fiveItem['大一尺寸']\r\n        this.inputSixs=sixItem['小一尺寸']\r\n        this.inputSevens=sixItem['当前尺寸']\r\n        this.inputEights=sixItem['大一尺寸']\r\n        this.inputNines=sevenItem['小一尺寸']\r\n        this.inputTens=sevenItem['当前尺寸']\r\n        this.inputEleven=sevenItem['大一尺寸']\r\n        this.inputTwelve=eightItem['小一尺寸']\r\n        this.inputThirteen=eightItem['当前尺寸']\r\n        this.inputFourteen=eightItem['大一尺寸']\r\n\r\n        this.inputFifteen=nineItem['小一尺寸']\r\n        this.inputSixteen=nineItem['当前尺寸']\r\n        this.inputSeventeen=nineItem['大一尺寸']\r\n\r\n\r\n        this.inputEighteen=tenItem['小一尺寸']\r\n        this.inputNineteen=tenItem['当前尺寸']\r\n        this.inputTwenty=tenItem['大一尺寸']\r\n    },\r\n    deep: true\r\n  }\r\n    },\r\n    created(){\r\n        bus.$on('mediumFluidChanged', (mediumFluid) => {\r\n            // 处理 minFluid 的变化，例如更新组件内部的数据\r\n            this.mediumFluid = mediumFluid;\r\n            console.log(\"Size接受到了正常流量\",this.mediumFluid)\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n\r\n        });\r\n        bus.$on('minFluidChanged', (minFluid) => {\r\n            // 处理 minFluid 的变化，例如更新组件内部的数据\r\n            this.minFluid = minFluid;\r\n            console.log(\"Size接受到了最小流量\",this.minFluid)\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n\r\n        });\r\n        bus.$on('maxFluidChanged', (maxFluid) => {\r\n            // 处理 minFluid 的变化，例如更新组件内部的数据\r\n            this.maxFluid = maxFluid;\r\n            console.log(\"Size接受到了最大流量\",this.maxFluid)\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n\r\n        });\r\n        bus.$on('instrumentChanged', (instrument) => {\r\n            this.instrument_id= instrument;\r\n            console.log('接收到的 仪表类型 数据:', this.instrument_id);\r\n            this.getBore_informations_OneData()\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n        \r\n        });\r\n        bus.$on('selectnameChanged', (selectname) => {\r\n            this.selectname= selectname;\r\n            console.log('接收到的 介质名称 数据:', this.selectname);\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n      \r\n        });\r\n        bus.$on('selected2-changed', (selected2) => {\r\n            console.log('Size收到的具体介质id:', selected2);\r\n            this.lmediutables_id=selected2\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n       \r\n            // 其他操作...\r\n        });\r\n        bus.$on('selected1-changed', (selected1) => {\r\n            console.log('Size收到的具体介质id:', selected1);\r\n            this.fmediutables_id=selected1\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n    \r\n            // 其他操作...\r\n        });\r\n        bus.$on('selected3-changed', (selected3) => {\r\n            console.log('Size收到的具体介质id:', selected3);\r\n            this.smediutables_id=selected3\r\n            this.getBoreData()\r\n            this.getrecommedData()\r\n     \r\n            // 其他操作...\r\n        });\r\n        //后续了解箭头函数的作用\r\n        bus.$on('dyviscosityChanged', (newVal) => {\r\n            console.log('Size接收到的运动粘度值为:', newVal);\r\n            this.dyviscosity = newVal;\r\n            this.getBoreData();\r\n            this.getrecommedData()\r\n         \r\n        });\r\n        bus.$on('inputOnes', (newVal) => {\r\n            console.log('Size接收到的工况密度值为:', newVal);\r\n            this.wdensity = newVal;\r\n            // 在这里处理接收到的运动粘度值\r\n            this.getBoreData();\r\n            this.getrecommedData()\r\n           \r\n        });\r\n},\r\n    methods: {\r\n        getBoreData() {\r\n            if (this.selectname == '气体') {\r\n                if (this.bore_id && this.instrument_id && this.fmediutables_id && this.wdensity && this.dyviscosity) {\r\n                    getGflowtables_bore({ bore_informations_id: this.bore_id, instrument_type_id: this.instrument_id, mediutables_id: this.fmediutables_id }).then((res) => {\r\n                        console.log(\"方法要用到的参数\", this.bore_id);\r\n                        let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                        console.log(dataList)\r\n                        // this.inputFive \r\n                        const gmin = dataList[0].gmin_standardflow//查表得到的最小值\r\n                        console.log(gmin)\r\n                        console.log(\"1接收到的工况密度为：\", this.wdensity)\r\n                        const gmin1 = Number(gmin) * Math.sqrt(1.205 / Number(this.wdensity))\r\n                        console.log(\"第一个公式算出来的值为：\", gmin1)\r\n                        console.log(\"1接收到的运动粘度是：\", this.dyviscosity)\r\n                        const gmin2 = Number(gmin) * Math.sqrt((15/1000000) /Number(this.dyviscosity) )\r\n                        console.log(\"第二个公式算出来的值为：\", gmin2)\r\n                        if (gmin1 > gmin2) {\r\n                            this.inputFive = gmin1;\r\n                        } else {\r\n                            this.inputFive = gmin2;\r\n                        }\r\n                        this.inputEight = dataList[0].gmax_standardflow\r\n                        console.log(this.maxFluid)\r\n                        console.log(this.minFluid)\r\n                        if (this.minFluid >= this.inputFive && this.minFluid <= this.inputEight && this.maxFluid >= this.inputFive && this.maxFluid <= this.inputEight) {\r\n                            // 更新页面上的提示信息\r\n                            MessageBox.confirm('流量在可测范围内', '提示', {\r\n                                confirmButtonText: '确定',\r\n                                type: 'success'\r\n                            }).then(() => {\r\n                                const bore = this.inputTwo.find(item => item.value === this.name[0]);\r\n                                if (bore) {\r\n                                    this.bore_size = bore.label;\r\n                                    console.log('获得的口径大小:', this.bore_size);\r\n                                } else {\r\n                                    console.log('未找到与选中的口径id相匹配的口径大小');\r\n                                    this.bore_size = '';\r\n                                }\r\n                                console.log(typeof (this.inputFive))\r\n                                console.log(typeof (this.bore_size))\r\n                                this.inputOnes = Number(this.inputFive) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600;\r\n                                this.inputFours = Number(this.inputEight) / (3.14 * (this.bore_size/1000)* (this.bore_size/1000) / 4) / 3600;\r\n                                console.log(this.inputOnes);\r\n                                this.inputThirteen = '1'\r\n                                this.inputSixteen = '1'\r\n                                this.minFluidSpeed = Number(this.minFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                console.log(\"最小流速为：\", this.minFluidSpeed)\r\n                                this.maxFluidSpeed = Number(this.maxFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                this.mediumFluidSpeed = Number(this.mediumFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                this.ys = 2.4 * 0.5 * Number(this.wdensity) * Number(this.mediumFluidSpeed) * Number(this.mediumFluidSpeed)\r\n                                console.log(\"压损的大小为：\",this.ys)\r\n                                this.ln = this.mediumFluidSpeed * (this.bore_size/1000) / Number(this.dyviscosity)\r\n                                this.inputNineteen = this.ln//雷诺数的值\r\n                                this.inputSevens = Number(this.wdensity) * Number(this.minFluidSpeed) * Number(this.minFluidSpeed) * 2.4 * 0.5\r\n                                this.inputTens = Number(this.wdensity) * Number(this.maxFluidSpeed) * Number(this.maxFluidSpeed) * 2.4 * 0.5\r\n                                this.minjd = '1'\r\n                                this.maxjd = '1'\r\n                                this.mediumjd = '1'\r\n                                bus.$emit('fluid-speeds', {\r\n                                    minFluidSpeed: this.minFluidSpeed,\r\n                                    maxFluidSpeed: this.maxFluidSpeed,\r\n                                    mediumFluidSpeed: this.mediumFluidSpeed,\r\n                                    ys: this.ys,\r\n                                    ln: this.ln,\r\n                                    minjd: this.minjd,\r\n                                    maxjd: this.maxjd,\r\n                                    mediumjd: this.mediumjd\r\n                                });\r\n                            }).catch(() => {\r\n                                // 用户点击了取消按钮，可以不进行任何操作或者执行其他相应的操作\r\n                            });\r\n\r\n                        } else {\r\n                            MessageBox.confirm('流量不在范围内，请重新选择口径大小', '提示', {\r\n                                confirmButtonText: '确定',\r\n                                cancelButtonText: '取消',\r\n                                type: 'warning'\r\n                            }).then(() => {\r\n                                // 用户点击了确定按钮，处理重新选择口径大小的逻辑\r\n                                // 这里可以跳转到重新选择口径大小的页面，或者执行其他相应的操作\r\n                            }).catch(() => {\r\n                                // 用户点击了取消按钮，可以不进行任何操作或者执行其他相应的操作\r\n                            });\r\n                        }\r\n                    }).catch((error) => {\r\n                        // 处理可能出现的错误\r\n                        console.error('查询失败:', error);\r\n                    });\r\n                }\r\n            }\r\n            else if (this.selectname == '液体') {\r\n                if (this.bore_id && this.instrument_id && this.lmediutables_id && this.wdensity && this.dyviscosity) {\r\n                    getLflowtables_bore({ bore_informations_id: this.bore_id, instrument_type_id: this.instrument_id, mediutables_id: this.lmediutables_id }).then((res) => {\r\n                        console.log(res);\r\n                        console.log(\"方法要用到的参数\", this.bore_id);\r\n                        let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                        const lmin = dataList[0].lmin_standardflow//查表得到的最小值\r\n                        console.log(\"1接收到的工况密度为：\", this.wdensity)\r\n                        const lmin1 = Number(lmin) * Math.sqrt(1.205 / Number(this.wdensity))\r\n                        console.log(\"第一个公式算出来的值为：\", lmin1)\r\n                        console.log(\"1接收到的运动粘度是：\", this.dyviscosity)\r\n                        const lmin2 = Number(lmin) * Math.sqrt((15/1000000) /Number(this.dyviscosity) )\r\n                        console.log(\"第二个公式算出来的值为：\", lmin2)\r\n                        if (lmin1 > lmin2) {\r\n                            this.inputFive = lmin1;\r\n                        } else {\r\n                            this.inputFive = lmin2;\r\n                        }\r\n                        this.inputEight = dataList[0].lmax_standardflow\r\n                        if (this.minFluid >= this.inputFive && this.minFluid <= this.inputEight && this.maxFluid >= this.inputFive && this.maxFluid <= this.inputEight) {\r\n                            // 更新页面上的提示信息\r\n                            MessageBox.confirm('流量在可测范围内', '提示', {\r\n                                confirmButtonText: '确定',\r\n                                type: 'success'\r\n                            }).then(() => {\r\n                                const bore = this.inputTwo.find(item => item.value === this.name[0]);\r\n                                if (bore) {\r\n                                    this.bore_size = bore.label;\r\n                                    console.log('获得的口径大小:', this.bore_size);\r\n                                } else {\r\n                                    console.log('未找到与选中的口径id相匹配的口径大小');\r\n                                    this.bore_size = '';\r\n                                }\r\n                                console.log(typeof (this.inputFive))\r\n                                console.log(typeof (this.bore_size))\r\n                                this.inputOnes = Number(this.inputFive) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600;\r\n                                this.inputFours = Number(this.inputEight) / (3.14 * (this.bore_size/1000)* (this.bore_size/1000) / 4) / 3600;\r\n                                console.log(this.inputOnes);\r\n                                this.inputThirteen = '1'\r\n                                this.inputSixteen = '1'\r\n                                this.minFluidSpeed = Number(this.minFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                console.log(\"最小流速为：\", this.minFluidSpeed)\r\n                                this.maxFluidSpeed = Number(this.maxFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                this.mediumFluidSpeed = Number(this.mediumFluid) / (3.14 * (this.bore_size/1000) * (this.bore_size/1000) / 4) / 3600\r\n                                this.ys = 2.4 * 0.5 * Number(this.wdensity) * Number(this.mediumFluidSpeed) * Number(this.mediumFluidSpeed)\r\n                                console.log(\"压损的大小为：\",this.ys)\r\n                                this.ln = this.mediumFluidSpeed * (this.bore_size/1000) / Number(this.dyviscosity)\r\n                                this.inputNineteen = this.ln//雷诺数的值\r\n                                this.inputSevens = Number(this.wdensity) * Number(this.minFluidSpeed) * Number(this.minFluidSpeed) * 2.4 * 0.5\r\n                                this.inputTens = Number(this.wdensity) * Number(this.maxFluidSpeed) * Number(this.maxFluidSpeed) * 2.4 * 0.5\r\n                                this.minjd = '1'\r\n                                this.maxjd = '1'\r\n                                this.mediumjd = '1'\r\n                                bus.$emit('fluid-speeds', {\r\n                                    minFluidSpeed: this.minFluidSpeed,\r\n                                    maxFluidSpeed: this.maxFluidSpeed,\r\n                                    mediumFluidSpeed: this.mediumFluidSpeed,\r\n                                    ys: this.ys,\r\n                                    ln: this.ln,\r\n                                    minjd: this.minjd,\r\n                                    maxjd: this.maxjd,\r\n                                    mediumjd: this.mediumjd\r\n                                });\r\n                            }).catch(() => {\r\n                                // 用户点击了取消按钮，可以不进行任何操作或者执行其他相应的操作\r\n                            });\r\n\r\n                        } else {\r\n                            MessageBox.confirm('流量不在范围内，请重新选择口径大小', '提示', {\r\n                                confirmButtonText: '确定',\r\n                                cancelButtonText: '取消',\r\n                                type: 'warning'\r\n                            }).then(() => {\r\n                                // 用户点击了确定按钮，处理重新选择口径大小的逻辑\r\n                                // 这里可以跳转到重新选择口径大小的页面，或者执行其他相应的操作\r\n                            }).catch(() => {\r\n                                // 用户点击了取消按钮，可以不进行任何操作或者执行其他相应的操作\r\n                            });\r\n                        }\r\n                    }).catch((error) => {\r\n                        // 处理可能出现的错误\r\n                        console.error('查询失败:', error);\r\n                    });\r\n                }\r\n            }\r\n            else if (this.selectname == '蒸汽') {\r\n                getSteamstable({ bore_informations_id: this.bore_id, instrument_type_id: this.instrument_id }).then((res) => {\r\n                    console.log(res);\r\n                    console.log(\"方法要用到的参数\", this.bore_id);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n\r\n            }\r\n\r\n        },\r\n        // 查询口径信息的方法\r\n        getBore_informations_OneData() {\r\n            return new Promise((resolve, reject) => {\r\n                if (this.instrument_id) {\r\n                    this.inputTwo = [];\r\n                    getBore_informations_One({ instrument_type_id: this.instrument_id }).then((res) => {\r\n                        let dataList = Array.from(res.rows);\r\n                        this.inputTwo = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.size };\r\n                        });\r\n                        resolve(); // 异步操作完成后，手动调用 resolve\r\n                    }).catch((error) => {\r\n                        console.error('查询失败:', error);\r\n                        reject(error); // 捕获错误并调用 reject\r\n                    });\r\n                } else {\r\n                    console.error('flowmeter_type_id 无效或不存在');\r\n                    reject('flowmeter_type_id 无效或不存在'); // 如果条件不满足，调用 reject\r\n                }\r\n            });\r\n        },\r\n        getrecommedData() {\r\n            return new Promise((resolve, reject) => {\r\n                if (this.selectname == '气体') {\r\n                    if (\r\n                        this.rebore_id &&\r\n                        this.instrument_id &&\r\n                        this.fmediutables_id &&\r\n                        this.wdensity &&\r\n                        this.dyviscosity\r\n                    ) {\r\n                        getGflowtables_bore({\r\n                            bore_informations_id: this.rebore_id,\r\n                            instrument_type_id: this.instrument_id,\r\n                            mediutables_id: this.fmediutables_id\r\n                        })\r\n                            .then((res) => {\r\n                                console.log(\"方法要用到的参数\", this.rebore_id);\r\n                                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                                console.log(dataList);\r\n                                // this.inputFive\r\n                                const gmin = dataList[0].gmin_standardflow; //查表得到的最小值\r\n                                console.log(\"1接收到的工况密度为：\", this.wdensity);\r\n                                const gmin1 = Number(gmin) * Math.sqrt(1.205 / Number(this.wdensity));\r\n                                console.log(\"第一个公式算出来的值为：\", gmin1);\r\n                                console.log(\"1接收到的运动粘度是：\", this.dyviscosity);\r\n                                const gmin2 = Number(gmin) * Math.sqrt(15 / Number(this.dyviscosity));\r\n                                console.log(\"第二个公式算出来的值为：\", gmin2);\r\n                                if (gmin1 > gmin2) {\r\n                                    this.inputFive = gmin1;\r\n                                } else {\r\n                                    this.inputFive = gmin2;\r\n                                }\r\n                                this.inputEight = dataList[0].gmax_standardflow;\r\n                                console.log(this.maxFluid);\r\n                                console.log(this.minFluid);\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                // 处理可能出现的错误\r\n                                console.error(\"查询失败:\", error);\r\n                                reject(error);\r\n                            });\r\n                    }\r\n                } else if (this.selectname == '液体') {\r\n                    if (\r\n                        this.rebore_id &&\r\n                        this.instrument_id &&\r\n                        this.lmediutables_id &&\r\n                        this.wdensity &&\r\n                        this.dyviscosity\r\n                    ) {\r\n                        getLflowtables_bore({\r\n                            bore_informations_id: this.rebore_id,\r\n                            instrument_type_id: this.instrument_id,\r\n                            mediutables_id: this.lmediutables_id\r\n                        })\r\n                            .then((res) => {\r\n                                console.log(res);\r\n                                console.log(\"方法要用到的参数\", this.rebore_id);\r\n                                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                                const lmin = dataList[0].lmin_standardflow; //查表得到的最小值\r\n                                console.log(\"1接收到的工况密度为：\", this.wdensity);\r\n                                const lmin1 = Number(lmin) * Math.sqrt(1.205 / Number(this.wdensity));\r\n                                console.log(\"第一个公式算出来的值为：\", lmin1);\r\n                                console.log(\"1接收到的运动粘度是：\", this.dyviscosity);\r\n                                const lmin2 = Number(lmin) * Math.sqrt(15 / Number(this.dyviscosity));\r\n                                console.log(\"第二个公式算出来的值为：\", lmin2);\r\n                                if (lmin1 > lmin2) {\r\n                                    this.inputFive = lmin1;\r\n                                } else {\r\n                                    this.inputFive = lmin2;\r\n                                }\r\n                                this.inputEight = dataList[0].lmax_standardflow;\r\n                                resolve();\r\n                            })\r\n                            .catch((error) => {\r\n                                // 处理可能出现的错误\r\n                                console.error(\"查询失败:\", error);\r\n                                reject(error);\r\n                            });\r\n                    }\r\n                } else if (this.selectname == '蒸汽') {\r\n                    getSteamstable({\r\n                        bore_informations_id: this.rebore_id,\r\n                        instrument_type_id: this.instrument_id\r\n                    })\r\n                        .then((res) => {\r\n                            console.log(res);\r\n                            console.log(\"方法要用到的参数\", this.rebore_id);\r\n                            let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                            console.log(dataList);\r\n                            resolve();\r\n                        })\r\n                        .catch((error) => {\r\n                            // 处理可能出现的错误\r\n                            console.error(\"查询失败:\", error);\r\n                            reject(error);\r\n                        });\r\n                } else {\r\n                    resolve(); // 默认返回resolve，避免无返回值导致的错误\r\n                }\r\n            });\r\n        },\r\n        recommend() {\r\n            return new Promise((resolve, reject) => {\r\n                this.getBore_informations_OneData()\r\n                    .then(() => {\r\n                        console.log(\"打印出口径id数组\", this.inputTwo);\r\n                        // 收集所有异步操作的 Promise 对象\r\n                        const promises = [];\r\n                        const inputFiveValues = []; // 存储inputFive的值\r\n                        const inputEightValues = []; // 存储inputEight的值\r\n                        const matchedCalibers = []; // 存储符合条件的口径大小\r\n                        for (let i = 0; i < this.inputTwo.length; i++) {\r\n                            const value = this.inputTwo[i].value;\r\n                            const label = this.inputTwo[i].label;\r\n                            this.rebore_id = value;\r\n                            // 将 getrecommedData() 的 Promise 对象添加到 promises 数组中\r\n                            promises.push(\r\n                                this.getrecommedData().then(() => {\r\n                                    inputFiveValues.push(this.inputFive); // 将inputFive的值添加到数组中\r\n                                    inputEightValues.push(this.inputEight); // 将inputEight的值添加到数组中\r\n                                    console.log(`rebore_id: ${value}, inputFive: ${this.inputFive}, inputEight: ${this.inputEight}`);\r\n                                    if (this.minFluid >= this.inputFive && this.minFluid <= this.inputEight && this.maxFluid >= this.inputFive && this.maxFluid <= this.inputEight) {\r\n                                        matchedCalibers.push({\r\n                                            value:value,\r\n                                            label: label,\r\n                                            inputFive: this.inputFive,\r\n                                            inputEight: this.inputEight\r\n                                        }); // 如果在范围内，则将符合的口径大小添加到数组中\r\n                                    }else{\r\n                                        //不满足流量范围的情况下,满足以下条件也可以\r\n                                        if(this.mediumFluid>=this.inputFive&&this.mediumFluid<=this.inputEight&&this.maxFluid >= this.inputFive && this.maxFluid <= this.inputEight){\r\n                                            matchedCalibers.push({\r\n                                            value:value,\r\n                                            label: label,\r\n                                            inputFive: this.inputFive,\r\n                                            inputEight: this.inputEight\r\n                                        });\r\n                                        }else{\r\n\r\n                                        }\r\n\r\n                                    }\r\n                                })\r\n                            );\r\n                        }\r\n                        // 使用 Promise.all() 处理所有异步操作\r\n                        Promise.all(promises)\r\n                            .then(() => {\r\n                                console.log(\"符合条件的口径大小：\", matchedCalibers); // 打印符合条件的口径大小数组\r\n                                matchedCalibers.sort((a, b) => a.label - b.label); // 对符合条件的口径大小进行从小到大排序\r\n                                const minCaliber = matchedCalibers[0]; // 找出最小的口径大小\r\n                                this.name = [minCaliber.value];  // 将口径最小的显示在this.inputTwo选择框中\r\n                                this.inputFive = minCaliber.inputFive;    // 将对应的inputFive的值显示在页面的this.inputFive的输入框中\r\n                                this.inputEight = minCaliber.inputEight;  // 将对应的inputEight的值显示在页面的this.inputEight的输入框中\r\n                                console.log(\"口径最小的是：\", minCaliber);\r\n                                resolve({\r\n                                    inputFive: minCaliber.inputFive,\r\n                                    inputEight: minCaliber.inputEight,\r\n                                    selectedCaliber: minCaliber.label\r\n                                });\r\n                            })\r\n                            .catch((error) => {\r\n                                reject(error);\r\n                            });\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                    \r\n            });\r\n            \r\n        },\r\n        \r\n    },\r\nmounted(){\r\n        bus.$on('density-change', (density) => {\r\n            console.log('Size收到的密度值:', density);\r\n            this.density=density\r\n            // 其他操作...\r\n        });\r\n        \r\n        \r\n\r\n}\r\n}\r\n    \r\n</script>\r\n\r\n<style scoped>\r\n#Size{\r\n    position: absolute;\r\n    margin-top: 437px;\r\n    right:105px;\r\n    background-color: #ffff;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    height: 590px;\r\n    border-radius: 10px;\r\n    border: 1px solid rgb(217, 210, 210);\r\n    \r\n   \r\n}\r\n.biaotilan{\r\n  width: auto;\r\n  height: 45px;\r\n  /* background-color: #02a7f0; */\r\n  overflow: hidden;\r\n\r\n\r\n  \r\n}\r\n.sanjiao{\r\n  position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        height: 45px;\r\n        width: 50px;\r\n        background-color: rgb(24, 102, 170);\r\n        clip-path: polygon(0 0, 100% 100%,100% 0);\r\n  }\r\n.container{\r\n    width: 640px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n   line-height: 35px;\r\n}\r\n.textOne{\r\n    margin-left: 200px;\r\n}\r\n.textTwo{\r\n    margin-left: 80px;\r\n    margin-right: 75px;\r\n}\r\n.request{\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n}\r\n.input{\r\n    width: 90px;\r\n    margin-left: 50px;\r\n}\r\n.select2{\r\n    width: 90px;\r\n    margin-left: 50px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Size.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Size.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Size.vue?vue&type=template&id=0119b836&scoped=true&\"\nimport script from \"./Size.vue?vue&type=script&lang=js&\"\nexport * from \"./Size.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Size.vue?vue&type=style&index=0&id=0119b836&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0119b836\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Loss\"}},[_c('div',{staticClass:\"container\"},[_vm._v(\"测量误差及压力损失 Measurement error & Pressure loss\")]),_vm._m(0),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][0]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 0, $$v)},expression:\"inputs[0][0]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][0]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 0, $$v)},expression:\"inputs[1][0]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][0]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 0, $$v)},expression:\"inputs[2][0]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][0]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 0, $$v)},expression:\"inputs[3][0]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][1]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 1, $$v)},expression:\"inputs[0][1]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][1]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 1, $$v)},expression:\"inputs[1][1]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][1]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 1, $$v)},expression:\"inputs[2][1]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][1]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 1, $$v)},expression:\"inputs[3][1]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][2]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 2, $$v)},expression:\"inputs[0][2]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][2]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 2, $$v)},expression:\"inputs[1][2]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][2]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 2, $$v)},expression:\"inputs[2][2]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][2]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 2, $$v)},expression:\"inputs[3][2]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][3]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 3, $$v)},expression:\"inputs[0][3]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][3]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 3, $$v)},expression:\"inputs[1][3]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][3]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 3, $$v)},expression:\"inputs[2][3]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][3]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 3, $$v)},expression:\"inputs[3][3]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][4]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 4, $$v)},expression:\"inputs[0][4]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][4]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 4, $$v)},expression:\"inputs[1][4]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][4]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 4, $$v)},expression:\"inputs[2][4]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][4]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 4, $$v)},expression:\"inputs[3][4]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][5]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 5, $$v)},expression:\"inputs[0][5]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][5]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 5, $$v)},expression:\"inputs[1][5]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][5]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 5, $$v)},expression:\"inputs[2][5]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][5]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 5, $$v)},expression:\"inputs[3][5]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][6]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 6, $$v)},expression:\"inputs[0][6]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][6]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 6, $$v)},expression:\"inputs[1][6]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][6]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 6, $$v)},expression:\"inputs[2][6]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][6]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 6, $$v)},expression:\"inputs[3][6]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][7]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 7, $$v)},expression:\"inputs[0][7]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][7]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 7, $$v)},expression:\"inputs[1][7]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][7]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 7, $$v)},expression:\"inputs[2][7]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][7]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 7, $$v)},expression:\"inputs[3][7]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][8]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 8, $$v)},expression:\"inputs[0][8]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][8]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 8, $$v)},expression:\"inputs[1][8]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][8]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 8, $$v)},expression:\"inputs[2][8]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][8]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 8, $$v)},expression:\"inputs[3][8]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][9]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 9, $$v)},expression:\"inputs[0][9]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][9]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 9, $$v)},expression:\"inputs[1][9]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][9]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 9, $$v)},expression:\"inputs[2][9]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][9]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 9, $$v)},expression:\"inputs[3][9]\"}})],1),_c('div',{staticClass:\"request\"},[_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[0][10]),callback:function ($$v) {_vm.$set(_vm.inputs[0], 10, $$v)},expression:\"inputs[0][10]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[1][10]),callback:function ($$v) {_vm.$set(_vm.inputs[1], 10, $$v)},expression:\"inputs[1][10]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[2][10]),callback:function ($$v) {_vm.$set(_vm.inputs[2], 10, $$v)},expression:\"inputs[2][10]\"}}),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputs[3][10]),callback:function ($$v) {_vm.$set(_vm.inputs[3], 10, $$v)},expression:\"inputs[3][10]\"}})],1),_c('div',[_c('div',[_c('div',{staticClass:\"image-container\"},[_c('div',{ref:\"chart\",staticClass:\"echart\"},[_c('el-image',{staticStyle:{\"max-width\":\"100%\"},attrs:{\"src\":_vm.chartImageUrl[0]}})],1)]),_c('div',{staticClass:\"update-button\"},[_c('el-button',{on:{\"click\":_vm.validateInputs}},[_vm._v(\"绘制图表\")])],1)])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"流量（%）\")]),_c('span',[_vm._v(\"流量（kg/h）\")]),_c('span',[_vm._v(\"测量误差（%）\")]),_c('span',[_vm._v(\"压力损失（KPa）\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n   <div id=\"Loss\">\r\n  <div class=\"container\">测量误差及压力损失 Measurement error & Pressure loss</div>\r\n  <div class=\"request1\">\r\n    <span>流量（%）</span>\r\n    <span>流量（kg/h）</span>\r\n    <span>测量误差（%）</span>\r\n    <span>压力损失（KPa）</span>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][0]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][0]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][0]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][0]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][1]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][1]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][1]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][1]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][2]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][2]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][2]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][2]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][3]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][3]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][3]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][3]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][4]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][4]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][4]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][4]\" class=\"input\"></el-input>\r\n  </div><div class=\"request\">\r\n    <el-input v-model=\"inputs[0][5]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][5]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][5]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][5]\" class=\"input\"></el-input>\r\n  </div><div class=\"request\">\r\n    <el-input v-model=\"inputs[0][6]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][6]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][6]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][6]\" class=\"input\"></el-input>\r\n  </div><div class=\"request\">\r\n    <el-input v-model=\"inputs[0][7]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][7]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][7]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][7]\" class=\"input\"></el-input>\r\n  </div><div class=\"request\">\r\n    <el-input v-model=\"inputs[0][8]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][8]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][8]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][8]\" class=\"input\"></el-input>\r\n  </div><div class=\"request\">\r\n    <el-input v-model=\"inputs[0][9]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][9]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][9]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][9]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div class=\"request\">\r\n    <el-input v-model=\"inputs[0][10]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[1][10]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[2][10]\" class=\"input\"></el-input>\r\n    <el-input v-model=\"inputs[3][10]\" class=\"input\"></el-input>\r\n  </div>\r\n  <div>\r\n    <div>\r\n    <!-- 显示图表 -->\r\n    <div class=\"image-container\">\r\n      <div class=\"echart\" ref=\"chart\">\r\n        <el-image :src=\"chartImageUrl[0]\" style=\"max-width: 100%;\"  />\r\n      </div>\r\n      \r\n    </div>\r\n    <!-- 绘制按钮 -->\r\n    <div class=\"update-button\">\r\n      <el-button @click=\"validateInputs\">绘制图表</el-button>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as echarts from 'echarts';\r\nexport default {\r\n    name: 'Loss',\r\n    props:{\r\n    measurementData:{\r\n      type:Array,\r\n      default:()=>([])\r\n    },\r\n    lossImage: {\r\n            type: Array,\r\n            default: () => ([])\r\n        }\r\n  },\r\n    data() {\r\n  return {\r\n    inputs: [\r\n      [null, null, null, null, null, null, null, null, null, null, null],\r\n      [null, null, null, null, null, null, null, null, null, null, null],\r\n      [null, null, null, null, null, null, null, null, null, null, null],\r\n      [null, null, null, null, null, null, null, null, null, null, null],\r\n    ],\r\n    chartImageUrl:[\"\"]//图表图片的Base64编码\r\n  }\r\n},\r\nmethods: {\r\n  validateInputs() {\r\n      this.drawChart();\r\n    },\r\n    async drawChart() {\r\n      // this.chartLoading = true;\r\n      const chart = echarts.init(this.$refs.chart);\r\n      // 获取用户输入的数据\r\n      const flowPercentage = this.inputs[0];\r\n      const flowKgPerHour = this.inputs[1];\r\n      const measurementError = this.inputs[2];\r\n      const pressureLoss = this.inputs[3];\r\n      // 构造图表的配置项和数据\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n          },\r\n          formatter: \"{b}: {c}\"\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: flowKgPerHour,\r\n          name: '流量(kg/h)',\r\n          axisLabel: {\r\n            fontSize: 9 // 设置字体大小为 10px\r\n          }\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '测量误差(%)',\r\n            min: 0,\r\n            max: 2,\r\n            interval: 0.2\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '压损(KPa)',\r\n            min: 0,\r\n            max: 120,\r\n            interval: 20\r\n          }\r\n        ],\r\n        legend: {\r\n          data: ['测量误差', '压损'],\r\n          bottom: 10,\r\n          formatter: function(name) {\r\n            var color = '';\r\n            if (name == '测量误差') {\r\n              color = 'blue';\r\n            } else if (name == '压损') {\r\n              color = 'orange';\r\n            }\r\n            return name;\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '测量误差',\r\n            type: 'line',\r\n            data: measurementError,\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'blue'\r\n              }\r\n            }\r\n          },\r\n          {\r\n            name: '压损',\r\n            type: 'line',\r\n            yAxisIndex: 1,\r\n            data: pressureLoss,\r\n            itemStyle: {\r\n              normal: {\r\n                color: 'orange'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n      \r\n      // 渲染图表\r\n      chart.setOption(option);\r\n    }\r\n  },\r\n  watch: {\r\n  inputs: {\r\n    handler() {\r\n      this.validateInputs();\r\n    },\r\n    deep: true\r\n  },\r\n  measurementData: {\r\n  handler(newVal, oldVal) {\r\n    //当我们直接修改数组中某个元素的值时，Vue无法感知到这个修改，因为它只能拦截数组对象本身的方法，但不会对数组中的每个元素进行拦截。\r\n    //因此，我们需要使用Vue提供的$set方法来更新数组中的元素。\r\n    for (const key in newVal) {\r\n      if (newVal.hasOwnProperty(key)) {\r\n        const arr = newVal[key];\r\n        for (let i = 0; i < arr.length; i++) {\r\n          const value = arr[i];\r\n          if (key === '流量（%）') {\r\n            this.$set(this.inputs[0], i, value);\r\n          } else if (key === '流量（kg/h）') {\r\n            this.$set(this.inputs[1], i, value);\r\n          } else if (key === '测量误差（%）') {\r\n            this.$set(this.inputs[2], i, value);\r\n          } else if (key === '压力损失(KPa)') {\r\n            this.$set(this.inputs[3], i, value);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log('inputs:', this.inputs);\r\n    this.validateInputs();\r\n  },\r\n  deep: true\r\n},\r\n  lossImage: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了loss图片\", newVal)\r\n                const imageData = newVal\r\n                this.chartImageUrl[0] = imageData[0].src\r\n                // console.log(\"这是第二张图片的src\",this.chartImageUrl[0])\r\n            }\r\n        }\r\n}\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n#Loss{\r\n    /* display: flex; */\r\n    flex-direction: row;\r\n  justify-content: space-between;\r\n    position: absolute;\r\n    width: 1207.5px;\r\n    margin-top: 280px;\r\n    margin-left:110px;\r\n    background-color: #ffff;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n  border-right: 1px solid rgb(217, 210, 210);\r\n  border-bottom: 1px solid rgb(217, 210, 210);\r\n  border: 1px solid rgb(217, 210, 210);\r\n  height: 1278.8px;\r\n  border-radius: 10px; \r\n  /* overflow: auto; */\r\n\r\n}\r\n/* .loading {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n} */\r\n.el-image__error {\r\n    display: none;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: #C0C4CC;\r\n    vertical-align: middle;\r\n}\r\n.image-container .el-image__error-icon,\r\n.image-container .el-image__error-placeholder {\r\n  display: none;\r\n}\r\n.echart{\r\n    width: 1207.5px;\r\n    height: 520px;\r\n    margin-top: 30px;\r\n    background-color: #ffff;\r\n  border-bottom: 1px solid rgb(217, 210, 210);\r\n  border: 1px solid rgb(217, 210, 210);\r\n}\r\n.container{\r\n    width: 1207.5px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    line-height: 35px;\r\n    line-height: 45px;\r\n}\r\n.textOne{\r\n    margin-left: 180px;\r\n    margin-right: -20px;\r\n}\r\n.request{\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n    margin-bottom:10px\r\n}\r\n\r\n.request1 span {\r\n    font-size: 13px;\r\n    margin-left: 170px;\r\n  margin-right: 20px; /* 设置右侧间距，根据实际需求调整 */\r\n  justify-content: space-between; /* 将子元素平均分配空间 */\r\n}\r\n\r\n.request1 {\r\n  text-align: justify; /* 对齐方式为两端对齐 */\r\n}\r\n\r\n.request1::after {\r\n  content: \"\";\r\n  flex-grow: 1;\r\n}\r\n.input{\r\n    width: 265px;\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Loss.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Loss.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Loss.vue?vue&type=template&id=f7a1f6fa&scoped=true&\"\nimport script from \"./Loss.vue?vue&type=script&lang=js&\"\nexport * from \"./Loss.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Loss.vue?vue&type=style&index=0&id=f7a1f6fa&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f7a1f6fa\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Specs\"}},[_c('img',{staticClass:\"image\",attrs:{\"src\":_vm.speciImageData[0],\"alt\":\"\"}}),_c('div',{staticClass:\"part1\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"流量计规格 Specifications\")]),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量计口径（mm） \")]),_vm._v(\"      \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputOne),callback:function ($$v) {_vm.inputOne=$$v},expression:\"inputOne\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最高使用温度（℃） \")]),_vm._v(\"      \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value1,\"options\":_vm.options1}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"满刻度流量（4-20mA）\")]),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThree),callback:function ($$v) {_vm.inputThree=$$v},expression:\"inputThree\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"输出方式 \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"防爆方式 \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFive),callback:function ($$v) {_vm.inputFive=$$v},expression:\"inputFive\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"本体材质 \")]),_vm._v(\"                    \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value2,\"options\":_vm.inputSix}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"检测体材质 \")]),_vm._v(\"                  \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value3,\"options\":_vm.inputSeven}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"变送器壳体材质 \")]),_vm._v(\"            \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEight),callback:function ($$v) {_vm.inputEight=$$v},expression:\"inputEight\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"连接方式 \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNine),callback:function ($$v) {_vm.inputNine=$$v},expression:\"inputNine\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"安装方式 \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value4,\"options\":_vm.options2}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"温压补偿方式 \")]),_vm._v(\"               \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value5,\"options\":_vm.options3}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量计防护等级 \")]),_vm._v(\"            \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value6,\"options\":_vm.options4}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"准确度等级 \")]),_vm._v(\"                   \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value7,\"options\":_vm.options5}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最高使用压力（Mpa） \")]),_vm._v(\"    \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value8,\"options\":_vm.options6}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"最大压力损失（Kpa） \")]),_vm._v(\"     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSixs),callback:function ($$v) {_vm.inputSixs=$$v},expression:\"inputSixs\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"现场显示 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSevens),callback:function ($$v) {_vm.inputSevens=$$v},expression:\"inputSevens\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"防爆标志 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEights),callback:function ($$v) {_vm.inputEights=$$v},expression:\"inputEights\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"发生体（起旋器）材质 \")]),_vm._v(\"     \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value9,\"options\":_vm.options7}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量计法兰材质 \")]),_vm._v(\"              \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value10,\"options\":_vm.options8}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"电器接口形式 \")]),_vm._v(\"                 \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value11,\"options\":_vm.options9}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量计连接标准 \")]),_vm._v(\"              \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value12,\"options\":_vm.options10}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"分体电缆长度 \")]),_vm._v(\"                 \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value131,\"options\":_vm.options11}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"插入式连接形式 \")]),_vm._v(\"              \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value141,\"options\":_vm.options12}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"供电电源 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFourteen),callback:function ($$v) {_vm.inputFourteen=$$v},expression:\"inputFourteen\"}})],1)]),_c('div',{staticClass:\"partTwo\"},[_c('div',{staticClass:\"containerOne\"},[_vm._v(\"流量计附件 Accessories\")]),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量配套法兰螺栓 \")]),_vm._v(\"          \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value13,\"options\":_vm.options13}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量配套密封垫片 \")]),_vm._v(\"          \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value14,\"options\":_vm.options14}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"分体支架 \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value15,\"options\":_vm.options15}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"法兰螺栓材质 \")]),_vm._v(\"                \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value16,\"options\":_vm.options16}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"垫片材质 \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value17,\"options\":_vm.options17}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"分体支架材质与规格 \")]),_vm._v(\"      \"),_c('common-select',{staticClass:\"select2\",attrs:{\"value\":_vm.value18,\"options\":_vm.options18}})],1)]),_c('div',{staticClass:\"access\"},[_c('div',{staticClass:\"container1\"},[_vm._v(\"标准型涡街流量计\")]),_c('div',{staticClass:\"model\"},[_vm._v(_vm._s(_vm.resultString))]),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"订货型号：\"+_vm._s(_vm.inputFifteen)+\" \")]),_vm._v(\"                   \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFifteen),callback:function ($$v) {_vm.inputFifteen=$$v},expression:\"inputFifteen\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"输出方式：\"+_vm._s(_vm.outputType1)+\" \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsOne1},model:{value:(_vm.name1),callback:function ($$v) {_vm.name1=$$v},expression:\"name1\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"仪表类型：\"+_vm._s(_vm.outputType2)+\" \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsTwo},model:{value:(_vm.name2),callback:function ($$v) {_vm.name2=$$v},expression:\"name2\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"功能类型：\"+_vm._s(_vm.outputType3)+\" \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsThress},model:{value:(_vm.name3),callback:function ($$v) {_vm.name3=$$v},expression:\"name3\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"连接方式：\"+_vm._s(_vm.outputType4)+\" \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsFour},model:{value:(_vm.name4),callback:function ($$v) {_vm.name4=$$v},expression:\"name4\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"测量介质：\"+_vm._s(_vm.outputType5)+\" \")]),_vm._v(\"                    \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwenty),callback:function ($$v) {_vm.inputTwenty=$$v},expression:\"inputTwenty\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"表体材质：\"+_vm._s(_vm.outputType6)+\" \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsSix},model:{value:(_vm.name6),callback:function ($$v) {_vm.name6=$$v},expression:\"name6\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"公称口径：\"+_vm._s(_vm.outputType7)+\" \")]),_vm._v(\"                      \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsSeven},model:{value:(_vm.name7),callback:function ($$v) {_vm.name7=$$v},expression:\"name7\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"公称压力：\"+_vm._s(_vm.outputType8)+\" \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsEight},model:{value:(_vm.name8),callback:function ($$v) {_vm.name8=$$v},expression:\"name8\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"探头材质：\"+_vm._s(_vm.outputType9)+\" \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsNine},model:{value:(_vm.name9),callback:function ($$v) {_vm.name9=$$v},expression:\"name9\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"防 爆：\"+_vm._s(_vm.outputType10)+\" \")]),_vm._v(\"                          \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsTen},model:{value:(_vm.name10),callback:function ($$v) {_vm.name10=$$v},expression:\"name10\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"供电电源：\"+_vm._s(_vm.outputType11)+\" \")]),_vm._v(\"                     \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsElvent},model:{value:(_vm.name11),callback:function ($$v) {_vm.name11=$$v},expression:\"name11\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"通讯功能：\"+_vm._s(_vm.outputType12)+\" \")]),_vm._v(\"                    \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsSecond},model:{value:(_vm.name12),callback:function ($$v) {_vm.name12=$$v},expression:\"name12\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"通讯接口：\"+_vm._s(_vm.outputType13)+\" \")]),_vm._v(\"                    \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsThirdteen},model:{value:(_vm.name13),callback:function ($$v) {_vm.name13=$$v},expression:\"name13\"}})],1),_c('div',{staticClass:\"request1\"},[_c('span',[_vm._v(\"仪表结构：\"+_vm._s(_vm.outputType14)+\" \")]),_vm._v(\"                    \"),_c('common-select',{staticClass:\"select1\",attrs:{\"value\":_vm.value,\"options\":_vm.optionsFourteen},model:{value:(_vm.name14),callback:function ($$v) {_vm.name14=$$v},expression:\"name14\"}})],1)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//连接已创建的数据库\r\nvar db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);\r\n//查询涡街流量计对应的输出类型信息（完成）--要不要传入id 只有涡街流量计才有\r\nexport function getType_of_output() {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select * from type_of_output', [], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n//查询显示类型信息（功能）--完成\r\nexport function getFunction_type(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id,type_name,encode from function_type where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//查询表体材料信息--完成\r\nexport function getBody_materials(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id,type_name,encode from body_materials where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//查询检测体材料信息--完成\r\nexport function getCheckbody_materials(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id,type_name from checkbody_materials where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//查询公称口径信息--完成\r\nexport function getNomial_diamete(obj) {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select id,type_name,encode from nomial_diameter where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n// 查询公称压力信息--完成\r\nexport function getNominal_pressures() {\r\n    return new Promise((reslove,reject)=>{\r\n      db.transaction(function(tx) {\r\n        tx.executeSql('select * from nominal_pressures', [], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//查询送器壳体材质表信息--写死--铝合金\r\nexport function getChangebody_materials(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select id,type_name from changebody_materials where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询本体材料信息--完成\r\nexport function getBdy_materialtable() {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from body_materialtable ', [], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//查询发生体材质--完成\r\nexport function getGenerating_bodytable(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from generating_bodytable where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询探头材质信息--完成\r\nexport function getProbe_material(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from probe_material where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询防爆设计信息--完成\r\nexport function getExplosion_proof_designs(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from explosion_proof_designs where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询供电电源信息--完成\r\nexport function getPower_supplys(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from power_supplys where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询通讯协议信息--完成\r\nexport function getCommunications(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from communications where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询通讯接口信息--完成\r\nexport function getCommunications_interfaces(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from communications_interfaces where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询仪表结构信息--完成\r\nexport function getInstrument(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from instruments where instrument_type_id=? and flowmeter_type_id=?', [obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询流量计防护等级信息--完成\r\nexport function getProtections(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from  protections where instrument_type_id=? and flowmeter_type_id=?', [obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询仪准确度等级信息--完成\r\nexport function getAccurategrades(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from accurategrades where instrument_type_id=? and flowmeter_type_id=?', [obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\n//查询流量计法兰材质信息表---改过--完成\r\nexport function getFLmaterials(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from FLmaterials where flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询分体电缆长度信息表--改过--完成\r\nexport function getSlipcables(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from slipcables where  flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//查询电器类型接口信息--电器接口形式--改过--完成\r\nexport function getEleinfterfaces(obj) {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function(tx) {\r\n      tx.executeSql('select * from eleinfterfaces where  flowmeter_type_id=?', [obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n","<template>\r\n    <div id=\"Specs\">\r\n        <!-- 放流量计图 -->\r\n        <img :src=\"speciImageData[0]\" alt=\"\" class=\"image\">\r\n        <div class=\"part1\">\r\n            <div class=\"container\">流量计规格 Specifications</div>\r\n            <div class=\"request\">\r\n                <span>流量计口径（mm） </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputOne\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>最高使用温度（℃） </span> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTwo\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value1\" :options=\"options1\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>满刻度流量（4-20mA）</span>\r\n                <el-input v-model=\"inputThree\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>输出方式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFour\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>防爆方式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFive\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>本体材质 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSix\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value2\" :options=\"inputSix\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>检测体材质 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSeven\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value3\" :options=\"inputSeven\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>变送器壳体材质 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputEight\" class=\"input\"></el-input>\r\n                <!-- <common-select :value=\"value\" :options=\"inputEight\" class=\"select2\"></common-select> -->\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>连接方式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputNine\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>安装方式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputOnes\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value4\" :options=\"options2\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>温压补偿方式 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTwos\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value5\" :options=\"options3\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>流量计防护等级 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputThrees\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value6\" :options=\"options4\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>准确度等级 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputFours\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value7\" :options=\"options5\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>最高使用压力（Mpa） </span> &nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputFives\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value8\" :options=\"options6\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>最大压力损失（Kpa） </span> &nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSixs\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>现场显示 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSevens\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>防爆标志 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputEights\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>发生体（起旋器）材质 </span> &nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputNines\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value9\" :options=\"options7\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>流量计法兰材质 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTen\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value10\" :options=\"options8\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>电器接口形式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTens\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value11\" :options=\"options9\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>流量计连接标准 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputEleven\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value12\" :options=\"options10\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>分体电缆长度 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTwelve\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value131\" :options=\"options11\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>插入式连接形式 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputThirteen\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value141\" :options=\"options12\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>供电电源 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFourteen\" class=\"input\"></el-input>\r\n            </div>\r\n        </div>\r\n        <div class=\"partTwo\">\r\n            <div class=\"containerOne\">流量计附件 Accessories</div>\r\n            <div class=\"request\">\r\n                <span>流量配套法兰螺栓 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTwentys\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value13\" :options=\"options13\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>流量配套密封垫片 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"input1\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value14\" :options=\"options14\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>分体支架 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"input2\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value15\" :options=\"options15\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>法兰螺栓材质 </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"input3\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value16\" :options=\"options16\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>垫片材质 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"input4\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value17\" :options=\"options17\" class=\"select2\"></common-select>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>分体支架材质与规格 </span> &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"input5\" class=\"input\"></el-input> -->\r\n                <common-select :value=\"value18\" :options=\"options18\" class=\"select2\"></common-select>\r\n            </div>\r\n        </div>\r\n        <div class=\"access\">\r\n            <div class=\"container1\">标准型涡街流量计</div>\r\n            <div class=\"model\">{{ resultString }}</div>\r\n            <div class=\"request1\">\r\n                <span>订货型号：{{ inputFifteen }}\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFifteen\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>输出方式：{{ outputType1 }}\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSixteen\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name1\" :value=\"value\" :options=\"optionsOne1\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>仪表类型：{{ outputType2 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSeventeen\" class=\"input\"></el-input> -->\r\n                <!-- <common-select :value=\"value\" :options=\"optionsTwo\" class=\"select1\"></common-select> -->\r\n                <common-select v-model=\"name2\" :value=\"value\" :options=\"optionsTwo\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>功能类型：{{ outputType3 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputEighteen\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name3\" :value=\"value\" :options=\"optionsThress\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>连接方式：{{ outputType4 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputNineteen\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name4\" :value=\"value\" :options=\"optionsFour\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>测量介质：{{ outputType5 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputTwenty\" class=\"input\"></el-input>\r\n                <!-- <common-select v-model=\"name5\" :value=\"value\" :options=\"optionsFive\" class=\"select1\"></common-select> -->\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>表体材质：{{ outputType6 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputElevens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name6\" :value=\"value\" :options=\"optionsSix\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>公称口径：{{ outputType7 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputTwelves\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name7\" :value=\"value\" :options=\"optionsSeven\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>公称压力：{{ outputType8 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputThirteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name8\" :value=\"value\" :options=\"optionsEight\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>探头材质：{{ outputType9 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputFourteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name9\" :value=\"value\" :options=\"optionsNine\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>防 爆：{{ outputType10 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputFifteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name10\" :value=\"value\" :options=\"optionsTen\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>供电电源：{{ outputType11 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSixteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name11\" :value=\"value\" :options=\"optionsElvent\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>通讯功能：{{ outputType12 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputSeventeens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name12\" :value=\"value\" :options=\"optionsSecond\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>通讯接口：{{ outputType13 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputEighteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name13\" :value=\"value\" :options=\"optionsThirdteen\" class=\"select1\"></common-select>\r\n            </div>\r\n            <div class=\"request1\">\r\n                <span>仪表结构：{{ outputType14 }} </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <!-- <el-input v-model=\"inputNineteens\" class=\"input\"></el-input> -->\r\n                <common-select v-model=\"name14\" :value=\"value\" :options=\"optionsFourteen\" class=\"select1\"></common-select>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CommonSelect from '@/components/el-select/CommonSelect.vue'\r\nimport { bus } from '@/main.js'\r\nimport { getType_of_output,getFunction_type,getBody_materials,getNomial_diamete,getNominal_pressures,getProbe_material,getExplosion_proof_designs,getGenerating_bodytable,getCheckbody_materials,getChangebody_materials,getBdy_materialtable,getPower_supplys,getCommunications,getCommunications_interfaces,getInstrument,getProtections,getAccurategrades,getFLmaterials,getSlipcables,getEleinfterfaces } from '@/api/select/public_information';\r\nimport { getInstrument_type,getConnection_types,getConnection_standard } from '@/api/select/flowmeter_medius';\r\nexport default {\r\n    name: 'Specs',\r\n    props: {\r\n        speciImage: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        table8Data: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        speciData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        accessData:{\r\n            type: Array,\r\n            default: () => ([])\r\n        }\r\n    },\r\n    components: {\r\n        CommonSelect\r\n    },\r\n    data() {\r\n        return {\r\n            speciImageData: [],//存放图片\r\n            instrument_type:'',//获得仪表类型的id\r\n            flowmeter_type_id: '',//获得的流量计类型的id\r\n            inputOne: '',\r\n            inputTwo: '',\r\n            inputThree: '',\r\n            inputFour: '',\r\n            inputFive: '',\r\n            inputSix: [],\r\n            inputSeven: [],\r\n            inputEight: '铝合金',\r\n            inputNine: '',\r\n            inputTen: '',\r\n            inputOnes: '',\r\n            inputTwos: '',\r\n            inputThrees: '',\r\n            inputFours: '',\r\n            inputFives: '',\r\n            inputSixs: '',\r\n            inputSevens: '',\r\n            inputEights: '',\r\n            inputNines: '',\r\n            inputTens: '',\r\n            inputEleven: '',\r\n            inputTwelve: '',\r\n            inputThirteen: '',\r\n            inputFourteen: '',\r\n            inputFifteen: '',\r\n            inputSixteen: '',\r\n            inputSeventeen: '',\r\n            inputEighteen: '',\r\n            inputNineteen: '',\r\n            inputTwenty: '',\r\n            inputElevens: '',\r\n            inputTwelves: '',\r\n            inputThirteens: '',\r\n            inputFourteens: '',\r\n            inputFifteens: '',\r\n            inputSixteens: '',\r\n            inputSeventeens: '',\r\n            inputEighteens: '',\r\n            inputNineteens: '',\r\n            inputTwentys: '',\r\n            input1: '',\r\n            input2: '',\r\n            input3: '',\r\n            input4: '',\r\n            input5: '',\r\n            optionsOne1: [\r\n            ],\r\n            name1: [],\r\n            outputType1: '',//输出的值\r\n            optionsTwo: [\r\n            ],\r\n            name2: [],\r\n            outputType2: '',\r\n            optionsThress: [\r\n                \r\n            ],\r\n            name3: [],\r\n            outputType3: '',\r\n            optionsFour: [\r\n                \r\n            ],\r\n            name4: [],\r\n            outputType4: '',\r\n            optionsFive: [\r\n               \r\n            ],\r\n            name5: [],\r\n            outputType5: '',\r\n            optionsSix: [\r\n                \r\n            ],\r\n            name6: [],\r\n            outputType6: '',\r\n            optionsSeven: [\r\n                \r\n            ],\r\n            name7: [],\r\n            outputType7: '',\r\n            optionsEight: [\r\n                \r\n            ],\r\n            name8: [],\r\n            outputType8: '',\r\n            optionsNine: [\r\n\r\n            ],\r\n            name9: [],\r\n            outputType9: '',\r\n            optionsTen: [\r\n                \r\n            ],\r\n            name10: [],\r\n            outputType10: '',\r\n            optionsElvent: [\r\n                \r\n            ],\r\n            name11: [],\r\n            outputType11: '',\r\n            optionsSecond: [\r\n                \r\n            ],\r\n            name12: [],\r\n            outputType12: '',\r\n            optionsThirdteen: [],\r\n            name13: [],\r\n            outputType13: '',\r\n            optionsFourteen: [\r\n                \r\n            ],\r\n            name14: [],\r\n            outputType14: '',\r\n            options1: [\r\n            {\r\n                    value:'1',\r\n                    label:'无'\r\n                },{\r\n                    value:'2',\r\n                    label:'70'\r\n                },{\r\n                    value:'3',\r\n                    label:'100'\r\n                },\r\n                {\r\n                    value:'4',\r\n                    label:'150'\r\n                },{\r\n                    value:'5',\r\n                    label:'260'\r\n                },{\r\n                    value:'6',\r\n                    label:'300'\r\n                },{\r\n                    value:'7',\r\n                    label:'350'\r\n                },\r\n            ],\r\n            options2: [\r\n                {\r\n                    value:'1',\r\n                    label:'无'\r\n                },{\r\n                    value:'2',\r\n                    label:'一体'\r\n                },{\r\n                    value:'3',\r\n                    label:'分体'\r\n                },\r\n\r\n            ],\r\n            options3: [\r\n            {\r\n                    value:'1',\r\n                    label:'无'\r\n                },{\r\n                    value:'2',\r\n                    label:'一体'\r\n                },{\r\n                    value:'3',\r\n                    label:'分体'\r\n                },\r\n            ],\r\n            options4: [],\r\n            options5: [],\r\n            options6: [\r\n            {\r\n                    value:'1',\r\n                    label:'无'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'1.0Mpa'\r\n                },{\r\n                    value:'3',\r\n                    label:'1.6Mpa'\r\n                },{\r\n                    value:'4',\r\n                    label:'2.0Mpa'\r\n                },{\r\n                    value:'5',\r\n                    label:'2.5Mpa'\r\n                },{\r\n                    value:'6',\r\n                    label:'4.0Mpa'\r\n                },\r\n            ],\r\n            options7: [],\r\n            options8: [],\r\n            options9: [],\r\n            options10: [],\r\n            options11: [],\r\n            options12: [\r\n            {\r\n                    value:'1',\r\n                    label:'无'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'断流安装'\r\n                },\r\n                {\r\n                    value:'3',\r\n                    label:'不断流安装'\r\n                }\r\n            ],\r\n            options13: [\r\n                {\r\n                    value:'1',\r\n                    label:'有'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'无'\r\n                },\r\n            ],\r\n            options14: [\r\n            {\r\n                    value:'1',\r\n                    label:'有'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'无'\r\n                },\r\n            ],\r\n            options15: [\r\n            {\r\n                    value:'1',\r\n                    label:'有'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'无'\r\n                },\r\n            ],\r\n            options16: [\r\n                {\r\n                    value:'1',\r\n                    label:'无'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'碳钢'\r\n                },\r\n                {\r\n                    value:'3',\r\n                    label:'不锈钢'\r\n                }\r\n            ],\r\n            options17: [\r\n            {\r\n                    value:'1',\r\n                    label:'金属缠绕垫'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'石棉垫'\r\n                },\r\n\r\n            ],\r\n            options18: [\r\n            {\r\n                    value:'1',\r\n                    label:'有'\r\n                },\r\n                {\r\n                    value:'2',\r\n                    label:'无'\r\n                },\r\n            ],\r\n            value: [],\r\n            model: '',\r\n            value13: [],\r\n            value14: [],\r\n            value15: [],\r\n            value16: [],\r\n            value17: [],\r\n            value18: [],\r\n            value1:[],\r\n            value2:[],\r\n            value3:[],\r\n            value4:[],\r\n            value5:[],\r\n            value6:[],\r\n            value7:[],\r\n            value8:[],\r\n            value9:[],\r\n            value10:[],\r\n            value11:[],\r\n            value12:[],\r\n            value131:[],\r\n            value141:[],\r\n        }\r\n    },\r\n    watch: {\r\n        inputFifteen(newVal, oldVal) {\r\n            console.log('监听到了变化', newVal, oldVal)\r\n        },\r\n        name1(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType1 = 'ME';\r\n            } else if (newValue == '2') {\r\n                this.outputType1 = 'TE';\r\n            } else if (newValue == '3') {\r\n                this.outputType1 = 'TS';\r\n            } else if (newValue == '4') {\r\n                this.outputType1 = 'TW';\r\n            }\r\n        },\r\n        name2(newValue) {\r\n            if (newValue.length > 0) {\r\n      this.instrument_type=newValue[0]\r\n      console.log('用户选择的仪表类型是：', this.instrument_type);\r\n      bus.$emit('instrumentChanged', this.instrument_type);\r\n      this.getInstrumentData()\r\n      this.getProtectionsData()\r\n      this.getAccurategradesData()\r\n            }\r\n            if (newValue == '1') {\r\n                this.outputType2 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType2 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType2 = 'K';\r\n            } else if (newValue == '4') {\r\n                this.outputType2 = 'F';\r\n            } else {\r\n                this.outputType2 = '';\r\n            }\r\n        },\r\n        name3(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType3 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType3 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType3 = 'D';\r\n            }\r\n        },\r\n        name4(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType4 = '1';\r\n            } else if (newValue == '2') {\r\n                this.outputType4 = '2';\r\n            } else if (newValue == '3') {\r\n                this.outputType4 = '3';\r\n            } else if (newValue == '4') {\r\n                this.outputType4 = '4';\r\n            }\r\n        },\r\n        name5(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType5 = '1';\r\n            } else if (newValue == '2') {\r\n                this.outputType5 = '2';\r\n            } else if (newValue == '3') {\r\n                this.outputType5 = '3';\r\n            } else if (newValue == '4') {\r\n                this.outputType5 = '4';\r\n            }\r\n        },\r\n        name6(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType6 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType6 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType6 = 'C';\r\n            } else if (newValue == '4') {\r\n                this.outputType6 = 'D';\r\n            } else if (newValue == '5') {\r\n                this.outputType6 = 'E';\r\n            }\r\n        },\r\n        name7(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType7 = '080';\r\n            } else if (newValue == '2') {\r\n                this.outputType7 = '090';\r\n            } else if (newValue == '3') {\r\n                this.outputType7 = '085';\r\n            } else if (newValue == '4') {\r\n                this.outputType7 = '095';\r\n            }\r\n        },\r\n        name8(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType8 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType8 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType8 = 'C';\r\n            } else if (newValue == '4') {\r\n                this.outputType8 = 'D';\r\n            }\r\n        },\r\n        name9(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType9 = '1';\r\n            } else if (newValue == '2') {\r\n                this.outputType9 = '2';\r\n            } else if (newValue == '3') {\r\n                this.outputType9 = '3';\r\n            } else if (newValue == '4') {\r\n                this.outputType9 = '4';\r\n            }\r\n        },\r\n        name10(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType10 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType10 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType10 = 'C';\r\n            } else if (newValue == '4') {\r\n                this.outputType10 = 'D';\r\n            }\r\n        },\r\n        name11(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType11 = '1';\r\n            } else if (newValue == '2') {\r\n                this.outputType11 = '2';\r\n            } else if (newValue == '3') {\r\n                this.outputType11 = '3';\r\n            } else if (newValue == '4') {\r\n                this.outputType11 = '4';\r\n            }\r\n        },\r\n        name12(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType12 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType12 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType12 = 'C';\r\n            } else if (newValue == '4') {\r\n                this.outputType12 = 'D';\r\n            }\r\n        },\r\n        name13(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType13 = '1';\r\n            } else if (newValue == '2') {\r\n                this.outputType13 = '2';\r\n            } else if (newValue == '3') {\r\n                this.outputType13 = '3';\r\n            } else if (newValue == '4') {\r\n                this.outputType13 = '4';\r\n            }\r\n        },\r\n        name14(newValue) {\r\n            if (newValue == '1') {\r\n                this.outputType14 = 'A';\r\n            } else if (newValue == '2') {\r\n                this.outputType14 = 'B';\r\n            } else if (newValue == '3') {\r\n                this.outputType14 = 'C';\r\n            } else if (newValue == '4') {\r\n                this.outputType14 = 'D';\r\n            }\r\n        },\r\n        speciImage: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了speci图片\", newVal)\r\n                const imageData = newVal\r\n                this.speciImageData[0] = imageData[0].src\r\n                // console.log(\"这是图片的URL\",this.speciImageData[0])\r\n            }\r\n        },\r\n        table8Data: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接收到了table8Data数据\", newVal);\r\n                //通讯接口\r\n                getCommunications_interfaces({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsThirdteen = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.interface_name };\r\n                    });\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('通讯接口')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsThirdteen); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsThirdteen.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name13 = [match.value];\r\n                                }\r\n                            } else if (key.includes('测量介质')) {\r\n                                const Type1 = data[key];\r\n                                this.inputTwenty = Type1;\r\n                            } else if (key.includes('输出方式')) {\r\n                                const type = data[key];\r\n                                console.log(this.$data.optionsOne1); // 访问Vue实例的data属性\r\n                                let newStr = type;\r\n                                if (Array.isArray(type)) {\r\n                                    newStr = type[0];\r\n                                }\r\n                                // 后续了解正则表达式\r\n                                newStr = newStr.replace(/（/g, '(').replace(/）/g, ')');\r\n                                console.log('匹配之前：', newStr, this.$data.optionsOne1);\r\n                                console.log(typeof (this.$data.optionsOne1[0].label));\r\n                                console.log(typeof (newStr));\r\n                                const match = this.$data.optionsOne1.find(option => option.label == newStr);\r\n                                console.log('匹配结果：', match);\r\n                                if (match) {\r\n                                    console.log('赋值给 this.name1:', match.value);\r\n                                    this.name1 = [match.value];\r\n                                }\r\n                            } else if (key.includes('连接方式')) {\r\n                                const type = data[key];\r\n                                console.log(this.$data.optionsFour); // 访问Vue实例的data属性\r\n                                let newStr = type;\r\n                                if (Array.isArray(type)) {\r\n                                    newStr = type[0];\r\n                                }\r\n                                // 后续了解正则表达式\r\n                                newStr = newStr.replace(/（/g, '(').replace(/）/g, ')');\r\n                                console.log('匹配之前：', newStr, this.$data.optionsOne1);\r\n                                console.log(typeof (this.$data.optionsFour[0].label));\r\n                                console.log(typeof (newStr));\r\n                                const match = this.$data.optionsFour.find(option => option.label == newStr);\r\n                                console.log('匹配结果：', match);\r\n                                if (match) {\r\n                                    console.log('赋值给 this.name1:', match.value);\r\n                                    this.name4 = [match.value];\r\n                                }\r\n                            } else if (key.includes('公称压力')) {\r\n                                const type = data[key];\r\n                                console.log(this.$data.optionsEight); // 访问Vue实例的data属性\r\n                                let newStr = type;\r\n                                if (Array.isArray(type)) {\r\n                                    newStr = type[0];\r\n                                }\r\n                                // 后续了解正则表达式\r\n                                newStr = newStr.replace(/（/g, '(').replace(/）/g, ')');\r\n                                console.log('匹配之前：', newStr, this.$data.optionsEight);\r\n                                console.log(typeof (this.$data.optionsEight[0].label));\r\n                                console.log(typeof (newStr));\r\n                                const match = this.$data.optionsEight.find(option => option.label == newStr);\r\n                                console.log('匹配结果：', match);\r\n                                if (match) {\r\n                                    console.log('赋值给 this.name1:', match.value);\r\n                                    this.name8 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //仪表类型\r\n                getInstrument_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsTwo = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsTwo);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('仪表类型')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsTwo); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsTwo.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name2 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //功能类型\r\n                getFunction_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsThress = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsThress);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('功能类型')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsThress); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsThress.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name3 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //表体材质\r\n                getBody_materials({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsSix = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('表体材质')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsSix); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsSix.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name6 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(this.optionsSix);\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //公称口径\r\n                getNomial_diamete({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsSeven = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsSeven);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('公称口径')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsSeven); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsSeven.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name7 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //探头材质\r\n                getProbe_material({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsNine = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('探头材质')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsNine); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsNine.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name9 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(this.optionsNine);\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //防爆\r\n                getExplosion_proof_designs({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsTen = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsTen);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('防')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsTen); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsTen.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name10 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //供电电源\r\n                getPower_supplys({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsElvent = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.electric_name };\r\n                    });\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('供电电源')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsElvent); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsElvent.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name11 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    console.log(this.optionsElvent);\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //通讯功能\r\n                getCommunications({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsSecond = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.communication_name };\r\n                    });\r\n                    console.log(this.optionsSecond);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('通讯功能')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.optionsSecond); // 访问Vue实例的data属性\r\n                                const match = this.$data.optionsSecond.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.name12 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //仪表结构\r\n                getInstrument_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsTwo = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsTwo);\r\n                    console.log(\"仪表类型id为\", this.instrument_type);\r\n                    console.log(\"flid为:\", this.flowmeter_type_id);\r\n                    getInstrument({ flowmeter_type_id: this.flowmeter_type_id, instrument_type_id: this.instrument_type }).then((res) => {\r\n                        console.log(\"这是res\", res);\r\n                        let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                        console.log(\"这是获得到仪表结构\", dataList)\r\n                        // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                        this.optionsFourteen = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.instrument_name };\r\n                        });\r\n                        console.log(\"这是仪表结构数据\", this.optionsFourteen);\r\n                        if (Object.keys(newVal).length > 0) {\r\n                            const data = newVal; // 获取projectData对象\r\n                            for (let key in data) {\r\n                                if (key.includes('仪表结构')) {\r\n                                    console.log(key + ':', data[key]);\r\n                                    const Type = data[key][0];\r\n                                    console.log(Type);\r\n                                    console.log(this.$data.optionsFourteen); // 访问Vue实例的data属性\r\n                                    const match = this.$data.optionsFourteen.find(option => option.label == Type);\r\n                                    console.log(match);\r\n                                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                    if (match) {\r\n                                        this.name14 = [match.value];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }).catch((error) => {\r\n                        // 处理可能出现的错误\r\n                        console.error('查询失败:', error);\r\n                    });\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n            }\r\n        },\r\n        speciData: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了speciData数据\", newVal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    const data = newVal; // 获取projectData对象\r\n                    this.inputOne = data['流量计口径（mm）'];\r\n                    this.inputThree = data['满刻度流量（4-20mA）'];\r\n                    this.inputFour = data.输出方式;\r\n                    this.inputFive = data.防爆方式;\r\n                    this.inputEight = data.变送器壳体材质;\r\n                    this.inputNine = data.连接方式;\r\n                    this.inputSixs = data['最大压力损失（Kpa）'];\r\n                    this.inputSevens = data.现场显示;\r\n                    this.inputEights = data.防爆标志;\r\n                    this.inputFourteen = data.供电电源\r\n                    // 获取流量计类型的值\r\n                    const Type = data[\"最高使用温度（℃）\"][0];\r\n                    console.log(\"最高温度是\",Type)\r\n                    // 在选项中查找匹配项的value属性\r\n                    const match = this.options1.find(option => option.label == Type);\r\n                    console.log(\"管道材质是\", match)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match) {\r\n                        this.value1 = [match.value];\r\n                    }\r\n                    const Type1 = data.本体材质[0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    const match1 = this.inputSix.find(option => option.label == Type1);\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match1) {\r\n                        this.value2 = [match1.value];\r\n                    }\r\n                    const Type3 = data.安装方式[0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    console.log(Type3)\r\n                    const match3 = this.options2.find(option => option.label == Type3);\r\n                    console.log(\"检测体材质是\", match3)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match3) {\r\n                        this.value4 = [match3.value];\r\n                    }\r\n                    const Type2 = data.温压补偿方式[0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    console.log(Type2)\r\n                    const match2 = this.options3.find(option => option.label == Type2);\r\n                    console.log(\"温压补偿方式是\", match2)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match2) {\r\n                        this.value5 = [match2.value];\r\n                    }\r\n                    const Type4 = data['最高使用压力（Mpa）'][0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    console.log(Type2)\r\n                    const match4 = this.options6.find(option => option.label == Type4);\r\n                    console.log(\"检测体材质是\", match4)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match4) {\r\n                        this.value8 = [match4.value];\r\n                    }\r\n                    const Type5 = data.流量计连接标准[0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    console.log(Type2)\r\n                    const match5 = this.options10.find(option => option.label == Type5);\r\n                    console.log(\"检测体材质是\", match2)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match5) {\r\n                        this.value12 = [match5.value];\r\n                    }\r\n                    const Type6 = data.插入式连接形式[0];\r\n                    // 在选项中查找匹配项的value属性\r\n                    console.log(Type2)\r\n                    const match6 = this.options12.find(option => option.label == Type6);\r\n                    console.log(\"检测体材质是\", match2)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match6) {\r\n                        this.value141 = [match6.value];\r\n                    }\r\n                }\r\n                getInstrument_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.optionsTwo = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.optionsTwo);\r\n                    console.log(\"仪表类型id为\", this.instrument_type);\r\n                    console.log(\"flid为:\", this.flowmeter_type_id);\r\n                    //准确度等级 需要两个参数\r\n                    getProtections({ flowmeter_type_id: this.flowmeter_type_id, instrument_type_id: this.instrument_type }).then((res) => {\r\n                        // console.log(res);\r\n                        let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                        // console.log(dataList);\r\n                        // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                        this.options4 = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.protection_name };\r\n                        });\r\n                        console.log(this.options4);\r\n                        if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('准确度等级')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options5); // 访问Vue实例的data属性\r\n                                const match = this.$data.options5.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value7 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    }).catch((error) => {\r\n                        // 处理可能出现的错误\r\n                        console.error('查询失败:', error);\r\n                    });\r\n                    //流量计防护等级 需要两个参数\r\n                    getAccurategrades({ flowmeter_type_id: this.flowmeter_type_id, instrument_type_id: this.instrument_type }).then((res) => {\r\n                        // console.log(res);\r\n                        let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                        // console.log(dataList);\r\n                        // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                        this.options5 = dataList.map(function (item) {\r\n                            return { value: item.id, label: item.accurategrade_name };\r\n                        });\r\n                        console.log(this.options5);\r\n                        if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('流量计防护等级')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options4); // 访问Vue实例的data属性\r\n                                const match = this.$data.options4.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value6 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    }).catch((error) => {\r\n                        // 处理可能出现的错误\r\n                        console.error('查询失败:', error);\r\n                    });\r\n\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //检测体材质 1\r\n                getCheckbody_materials({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.inputSeven = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.inputSeven);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('检测体')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.inputSeven); // 访问Vue实例的data属性\r\n                                const match = this.$data.inputSeven.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value3 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //发生体\r\n                getGenerating_bodytable({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.options7 = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.type_name };\r\n                    });\r\n                    console.log(this.options7);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('发生体')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options7); // 访问Vue实例的data属性\r\n                                const match = this.$data.options7.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value9 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //流量计法兰\r\n                getFLmaterials({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    // console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    // console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.options8 = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.FLmaterial_name };\r\n                    });\r\n                    console.log(this.options8);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('流量计法兰材质')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options8); // 访问Vue实例的data属性\r\n                                const match = this.$data.options8.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value10 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //电器接口形式\r\n                getEleinfterfaces({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    // console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    // console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.options9 = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.eleinfterface_name };\r\n                    });\r\n                    console.log(this.options9);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('电器接口形式')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options9); // 访问Vue实例的data属性\r\n                                const match = this.$data.options9.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value11 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n                //分体电缆长度\r\n                getSlipcables({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n                    // console.log(res);\r\n                    let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                    // console.log(dataList);\r\n                    // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n                    this.options11 = dataList.map(function (item) {\r\n                        return { value: item.id, label: item.slipcable_name };\r\n                    });\r\n                    console.log(this.options11);\r\n                    if (Object.keys(newVal).length > 0) {\r\n                        const data = newVal; // 获取projectData对象\r\n                        for (let key in data) {\r\n                            if (key.includes('分体电缆长度')) {\r\n                                console.log(key + ':', data[key]);\r\n                                const Type = data[key][0];\r\n                                console.log(Type);\r\n                                console.log(this.$data.options11); // 访问Vue实例的data属性\r\n                                const match = this.$data.options11.find(option => option.label == Type);\r\n                                console.log(match);\r\n                                // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                                if (match) {\r\n                                    this.value131 = [match.value];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }).catch((error) => {\r\n                    // 处理可能出现的错误\r\n                    console.error('查询失败:', error);\r\n                });\r\n            }\r\n\r\n        },\r\n        accessData:{\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了accessData数据\", newVal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    const data = newVal; // 获取projectData对象\r\n                    // 获取流量计类型的值\r\n                    const Type = data.流量配套法兰螺栓[0];\r\n                    console.log(Type)\r\n                    // 在选项中查找匹配项的value属性\r\n                    const match = this.options13.find(option => option.label == Type);\r\n                    console.log(\"流量配套法兰螺栓是\",match)\r\n                    // 如果找到了匹配项，则将其value属性赋值给selectedValue\r\n                    if (match) {\r\n                        this.value13 = [match.value];\r\n                    }\r\n                    const Type1 = data.流量配套密封垫片[0];\r\n                    console.log(Type1)\r\n                    const match1 = this.options14.find(option => option.label == Type1);\r\n                    console.log(\"流量配套法兰螺栓是\",match1)\r\n                    if (match1) {\r\n                        this.value14 = [match1.value];\r\n                    }\r\n                    const Type2 = data.分体支架[0];\r\n                    console.log(Type2)\r\n                    const match2 = this.options15.find(option => option.label == Type2);\r\n                    console.log(\"流量配套法兰螺栓是\",match2)\r\n                    if (match2) {\r\n                        this.value15 = [match2.value];\r\n                    }\r\n                    const Type3 = data.法兰螺栓材质[0];\r\n                    console.log(Type3)\r\n                    const match3 = this.options16.find(option => option.label == Type3);\r\n                    console.log(\"法兰螺栓材质是\",match3)\r\n                    if (match3) {\r\n                        this.value16 = [match3.value];\r\n                    }\r\n                    const Type4 = data.垫片材质[0];\r\n                    console.log(Type4)\r\n                    const match4 = this.options17.find(option => option.label == Type4);\r\n                    // console.log(\"流量配套法兰螺栓是\",match4)\r\n                    if (match4) {\r\n                        this.value17 = [match4.value];\r\n                    }\r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n\r\n        }\r\n\r\n    },\r\n    computed: {\r\n        resultString() {\r\n            return `${this.inputFifteen}${this.outputType1}${this.outputType2}${this.outputType3}${this.outputType4}${this.outputType5}${this.outputType6}${this.outputType7}${this.outputType8}${this.outputType9}${this.outputType10}${this.outputType11}${this.outputType12}${this.outputType13}${this.outputType14}`;\r\n        }\r\n    },\r\n    methods: {\r\n        getType_of_outputData() {\r\n            this.optionsOne1 = []\r\n            getType_of_output().then((res) => {\r\n                console.log(res);\r\n                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                // 或者使用扩展运算符\r\n                // let dataList = [...res.rows];\r\n                console.log(dataList);\r\n                this.optionsOne1 = dataList.map(function (item) {\r\n                    return { value: item.id, label: item.type_name };\r\n                });\r\n                console.log(this.optionsOne1);\r\n            })\r\n        },\r\n        getBdy_materialtableData() {\r\n            this.inputSix = []\r\n            getBdy_materialtable().then((res) => {\r\n                console.log(res);\r\n                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                // 或者使用扩展运算符\r\n                // let dataList = [...res.rows];\r\n                console.log(dataList);\r\n                this.inputSix = dataList.map(function (item) {\r\n                    return { value: item.id, label: item.type_name };\r\n                });\r\n                console.log(this.inputSix);\r\n            })\r\n        },\r\n        getConnection_typesData() {\r\n            this.optionsFour = []\r\n            getConnection_types().then((res) => {\r\n                console.log(res);\r\n                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                // 或者使用扩展运算符\r\n                // let dataList = [...res.rows];\r\n                console.log(dataList);\r\n                this.optionsFour = dataList.map(function (item) {\r\n                    return { value: item.id, label: item.connection_name };\r\n                });\r\n                console.log(this.optionsFour);\r\n            })\r\n        },\r\n        getInstrument_typeData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsTwo = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetInstrument_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsTwo = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsTwo);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetCheckbody_materialsData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.inputSeven = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetCheckbody_materials({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.inputSeven = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.inputSeven);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetPower_supplysData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsElvent = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetPower_supplys({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsElvent = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.electric_name };\r\n});\r\nconsole.log(this.optionsElvent);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetCommunicationsData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsSecond = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetCommunications({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsSecond = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.communication_name };\r\n});\r\nconsole.log(this.optionsSecond);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetCommunications_interfacesData() {\r\n  // 首先检查 this.flowmeter_type_id 是否存在且有效\r\n  if (this.flowmeter_type_id) {\r\n    console.log(this.flowmeter_type_id);\r\n    this.optionsThirdteen = [];\r\n    // 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\n    getCommunications_interfaces({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\n      console.log(res);\r\n      let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n      console.log(dataList);\r\n      // 将查询结果映射到 this.optionsTwo，以便后续使用\r\n    this.optionsThirdteen = dataList.map(function(item) {\r\n      return { value: item.id, label: item.interface_name };\r\n    });\r\n      console.log(\"再次获得下拉框的值\",this.optionsThirdteen);\r\n    }).catch((error) => {\r\n      // 处理可能出现的错误\r\n      console.error('查询失败:', error);\r\n    });\r\n  } else {\r\n    // 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\n    console.error('flowmeter_type_id 无效或不存在');\r\n  }\r\n},\r\ngetFunction_typeData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsThress = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetFunction_type({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsThress = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsThress);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetConnection_standardData() {\r\n    this.options10 = []\r\n    getConnection_standard().then((res) => {\r\n                console.log(res);\r\n                let dataList = Array.from(res.rows); // 使用Array.from()方法\r\n                // 或者使用扩展运算符\r\n                // let dataList = [...res.rows];\r\n                console.log(dataList);\r\n                this.options10 = dataList.map(function (item) {\r\n                    return { value: item.id, label: item.cstandard_name };\r\n                });\r\n                console.log(this.options10);\r\n            })\r\n},\r\ngetInstrumentData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id&&this.instrument_type) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.optionsFourteen = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetInstrument({ flowmeter_type_id: this.flowmeter_type_id,instrument_type_id:this.instrument_type } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsFourteen = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.instrument_name };\r\n});\r\nconsole.log(this.optionsFourteen);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetProtectionsData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id&&this.instrument_type) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.options4 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetProtections({ flowmeter_type_id: this.flowmeter_type_id,instrument_type_id:this.instrument_type } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options4 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.protection_name };\r\n});\r\nconsole.log(this.options4);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetAccurategradesData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id&&this.instrument_type) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.options5 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetAccurategrades({ flowmeter_type_id: this.flowmeter_type_id,instrument_type_id:this.instrument_type } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options5 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.accurategrade_name };\r\n});\r\nconsole.log(this.options5);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetFLmaterialsData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.options8 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetFLmaterials({ flowmeter_type_id: this.flowmeter_type_id } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options8 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.FLmaterial_name };\r\n});\r\nconsole.log(this.options8);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetSlipcablesData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.options11 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetSlipcables({ flowmeter_type_id: this.flowmeter_type_id } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options11 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.slipcable_name };\r\n});\r\nconsole.log(this.options11);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetEleinfterfacesData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nconsole.log(this.instrument_type);\r\nthis.options9 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetEleinfterfaces({ flowmeter_type_id: this.flowmeter_type_id } ).then((res) => {\r\n// console.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// console.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options9 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.eleinfterface_name };\r\n});\r\nconsole.log(this.options9);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetBody_materialsData() {\r\n// 首先检查 this.flowmeter_type_id 是否存在且有效\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsSix = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetBody_materials({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsSix = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsSix);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n},\r\ngetNomial_diameteData(){\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsSeven = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetNomial_diamete({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsSeven = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsSeven);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n\r\n},\r\ngetNominal_pressuresData() {\r\nthis.optionsEight = []\r\ngetNominal_pressures().then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\n// 或者使用扩展运算符\r\n// let dataList = [...res.rows];\r\nconsole.log(dataList);\r\nthis.optionsEight = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsEight); \r\n})\r\n},\r\ngetProbe_materialData(){\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsNine = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetProbe_material({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsNine = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsNine);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n\r\n},\r\ngetExplosion_proof_designsData(){\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.optionsTen = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetExplosion_proof_designs({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.optionsTen = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.optionsTen);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n\r\n},\r\ngetGenerating_bodytableData(){\r\nif (this.flowmeter_type_id) {\r\nconsole.log(this.flowmeter_type_id);\r\nthis.options7 = [];\r\n\r\n// 调用 getInstrument_type 并传入包含 flowmeter_type_id 的对象\r\ngetGenerating_bodytable({ flowmeter_type_id: this.flowmeter_type_id }).then((res) => {\r\nconsole.log(res);\r\nlet dataList = Array.from(res.rows); // 使用Array.from()方法\r\nconsole.log(dataList);\r\n// 将查询结果映射到 this.optionsTwo，以便后续使用\r\nthis.options7 = dataList.map(function(item) {\r\nreturn { value: item.id, label: item.type_name };\r\n});\r\nconsole.log(this.options7);\r\n}).catch((error) => {\r\n// 处理可能出现的错误\r\nconsole.error('查询失败:', error);\r\n});\r\n} else {\r\n// 如果 this.flowmeter_type_id 无效，则可以在这里处理，例如设置错误消息或者返回\r\nconsole.error('flowmeter_type_id 无效或不存在');\r\n}\r\n\r\n},\r\n    },\r\n    mounted() {\r\n        this.getType_of_outputData();\r\n        this.getNominal_pressuresData();\r\n        this.getConnection_typesData();\r\n        this.getBdy_materialtableData();\r\n        this.getConnection_standardData();\r\n        bus.$on('selectnameChanged', (newVal) => {\r\n            console.log('接收到的介质为:', newVal);\r\n            // 在这里处理接收到的介质值\r\n            this.inputTwenty = newVal;\r\n            console.log(\"测量介质值变为：\", this.inputTwenty);\r\n            bus.$emit('inputTwentyChanged', this.inputTwenty);\r\n        });\r\n        //后续了解mouted和created的区别·，以及箭头函数\r\n    },\r\n    created() {\r\n        // 监听 flowmeterTypeChanged 事件，并更新 receivedFlowmeterType 数据\r\n        bus.$on('flowmeterTypeChanged', (flowmeterType) => {\r\n            this.flowmeter_type_id = flowmeterType;\r\n            console.log('接收到的 flowmeter_type 数据:', this.flowmeter_type_id);\r\n              this.getInstrument_typeData();\r\n              this.getFunction_typeData();\r\n              this.getBody_materialsData();\r\n              this.getNomial_diameteData();\r\n              this.getProbe_materialData();\r\n              this.getExplosion_proof_designsData();\r\n              this.getGenerating_bodytableData();\r\n              this.getCheckbody_materialsData();\r\n            //   this.getChangebody_materialsData();\r\n              this.getPower_supplysData();\r\n              this.getCommunicationsData() \r\n              this.getCommunications_interfacesData()\r\n              this.getFLmaterialsData()\r\n              this.getSlipcablesData()\r\n              this.getEleinfterfacesData() \r\n        });\r\n        bus.$on('flowmeterEncodeTypeChanged', (flowmeterType) => {\r\n            this.inputFifteen = flowmeterType;\r\n            console.log('接收到的 encode 数据:', this.inputFifteen);\r\n        });\r\n        // bus.$on('selectnameChanged', function (newVal) {\r\n        //     console.log('接收到的介质为:', newVal);\r\n        //     // 在这里处理接收到的介质值\r\n        //     this.inputTwenty=newVal\r\n        //     console.log(\"测量介质值变为：\",this.inputTwenty)\r\n        // });\r\n\r\n    },\r\n    \r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#Specs {\r\n    position: relative;\r\n    margin-top: 50px;\r\n    left: 60px;\r\n    /* background-color: #ffff; */\r\n    width: 1309.5px;\r\n    height: 1790px;\r\n    /* background-image: url(\"../assets/截屏2023-10-31\\ 16.09.19.png\"); */\r\n}\r\n\r\n.part1 {\r\n    position: relative;\r\n    margin-left: 60px;\r\n    width: 550px;\r\n    height: 1270px;\r\n    top: 60px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    /* background: url(\"../assets/截屏2023-10-31\\ 16.10.13.png\"); */\r\n\r\n}\r\n\r\n\r\n.partTwo {\r\n    margin-top: 100px;\r\n    margin-left: 60px;\r\n    width: 550px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    height: 380px;\r\n    /* background: url(\"../assets/截屏2023-10-31\\ 16.10.13.png\"); */\r\n\r\n}\r\n\r\n.image {\r\n    position: absolute;\r\n    margin-left: 80px;\r\n    width: 450px;\r\n    margin-top: 55px;\r\n}\r\n\r\n.container {\r\n    width: 550px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    line-height: 45px;\r\n\r\n}\r\n\r\n.select2 {\r\n    width: 355px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.container1 {\r\n    width: 550px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    font-weight: bold;\r\n    height: 60px;\r\n    /* text-align: center; */\r\n    font-size: 30px;\r\n    background-color: rgb(24, 102, 170);\r\n    line-height: 45px;\r\n\r\n}\r\n\r\n.containerOne {\r\n    width: 550px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    line-height: 45px;\r\n\r\n}\r\n\r\n.request {\r\n    margin-top: 10px;\r\n    margin-left: 8px;\r\n    font-size: 13px;\r\n}\r\n\r\n.request1 {\r\n    margin-top: 10px;\r\n    font-size: 13px;\r\n}\r\n\r\n.input {\r\n    width: 355px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.access {\r\n    position: absolute;\r\n    margin-left: 706px;\r\n    /* margin-right: 160px; */\r\n    top: 449.8px;\r\n    background-color: #ffff;\r\n    border: 1px solid rgb(217, 210, 210);\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    height: 1008px;\r\n}\r\n\r\n.model {\r\n    margin-top: 10px;\r\n    font-size: 25px;\r\n}\r\n\r\n.select1 {\r\n    margin-top: 10px;\r\n    margin-left: 3px;\r\n    font-size: 13px;\r\n    width: 355px;\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Specs.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Specs.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Specs.vue?vue&type=template&id=656a15fc&scoped=true&\"\nimport script from \"./Specs.vue?vue&type=script&lang=js&\"\nexport * from \"./Specs.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Specs.vue?vue&type=style&index=0&id=656a15fc&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"656a15fc\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"Draw\"}},[_c('img',{staticClass:\"image\",attrs:{\"src\":_vm.imageData[0],\"alt\":\"\",\"id\":\"image\"}}),_c('img',{staticClass:\"images\",attrs:{\"src\":_vm.imageData[1],\"alt\":\"\",\"id\":\"images\"}}),_c('div',{staticClass:\"divery1\"},[_vm._m(0),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"安装位号 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputOne),callback:function ($$v) {_vm.inputOne=$$v},expression:\"inputOne\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"流量计口径（mm） \")]),_vm._v(\"          \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwo),callback:function ($$v) {_vm.inputTwo=$$v},expression:\"inputTwo\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"仪表类型 \")]),_vm._v(\"                        \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThree),callback:function ($$v) {_vm.inputThree=$$v},expression:\"inputThree\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"仪表结构 \")]),_vm._v(\"                        \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFour),callback:function ($$v) {_vm.inputFour=$$v},expression:\"inputFour\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"连接方式 \")]),_vm._v(\"                        \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFive),callback:function ($$v) {_vm.inputFive=$$v},expression:\"inputFive\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"压力等级 \")]),_vm._v(\"                        \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSix),callback:function ($$v) {_vm.inputSix=$$v},expression:\"inputSix\"}})],1)]),_c('div',{staticClass:\"divery2\"},[_vm._m(1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"公称口径 \")]),_vm._v(\"                       \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSeven),callback:function ($$v) {_vm.inputSeven=$$v},expression:\"inputSeven\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"表体内径 D \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEight),callback:function ($$v) {_vm.inputEight=$$v},expression:\"inputEight\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"标准型长度 L1 \")]),_vm._v(\"                \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNine),callback:function ($$v) {_vm.inputNine=$$v},expression:\"inputNine\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"法兰外径 D1 \")]),_vm._v(\"                    \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTen),callback:function ($$v) {_vm.inputTen=$$v},expression:\"inputTen\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"中心螺距 K \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputOnes),callback:function ($$v) {_vm.inputOnes=$$v},expression:\"inputOnes\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"法兰厚度 C \")]),_vm._v(\"                     \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputTwos),callback:function ($$v) {_vm.inputTwos=$$v},expression:\"inputTwos\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"螺栓孔径 d \")]),_vm._v(\"                      \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputThrees),callback:function ($$v) {_vm.inputThrees=$$v},expression:\"inputThrees\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"螺栓数量 n \")]),_vm._v(\"                      \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFours),callback:function ($$v) {_vm.inputFours=$$v},expression:\"inputFours\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"总高 H \")]),_vm._v(\"                           \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputFives),callback:function ($$v) {_vm.inputFives=$$v},expression:\"inputFives\"}})],1)]),_c('div',{staticClass:\"divery3\"},[_vm._m(2),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"表体 \")]),_vm._v(\"                               \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSixs),callback:function ($$v) {_vm.inputSixs=$$v},expression:\"inputSixs\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"法兰 \")]),_vm._v(\"                                \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputSevens),callback:function ($$v) {_vm.inputSevens=$$v},expression:\"inputSevens\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"发生体 \")]),_vm._v(\"                             \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputEights),callback:function ($$v) {_vm.inputEights=$$v},expression:\"inputEights\"}})],1),_c('div',{staticClass:\"request\"},[_c('span',[_vm._v(\"检测体 \")]),_vm._v(\"                            \"),_c('el-input',{staticClass:\"input\",model:{value:(_vm.inputNines),callback:function ($$v) {_vm.inputNines=$$v},expression:\"inputNines\"}})],1)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biantilan\"},[_c('div',{staticClass:\"container\"},[_vm._v(\"结构尺寸图 Dimensional drawing\")]),_c('div',{staticClass:\"sanjiao1\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"containerOne\"},[_vm._v(\"流量计安装尺寸 Dimensions\")]),_c('div',{staticClass:\"sanjiao2\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"biaotilan\"},[_c('div',{staticClass:\"containerOne\"},[_vm._v(\"流量计材质 Material\")]),_c('div',{staticClass:\"sanjiao3\"})])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"Draw\">\r\n        <!-- 放流量计图 -->\r\n        <img :src=\"imageData[0]\" alt=\"\" class=\"image\" id=\"image\">\r\n        <img :src=\"imageData[1]\" alt=\"\" class=\"images\" id=\"images\">\r\n        <div class=\"divery1\">\r\n            <div class=\"biantilan\">\r\n                <div class=\"container\">结构尺寸图 Dimensional drawing</div>\r\n                <div class=\"sanjiao1\"></div>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>安装位号\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputOne\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>流量计口径（mm） </span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputTwo\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>仪表类型 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputThree\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>仪表结构 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFour\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>连接方式 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFive\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>压力等级 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSix\" class=\"input\"></el-input>\r\n            </div>\r\n        </div>\r\n        <div class=\"divery2\">\r\n            <div class=\"biaotilan\">\r\n                <div class=\"containerOne\">流量计安装尺寸 Dimensions</div>\r\n                <div class=\"sanjiao2\"></div>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>公称口径\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSeven\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>表体内径 D </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputEight\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>标准型长度 L1 </span>&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputNine\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>法兰外径 D1 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputTen\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>中心螺距 K </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputOnes\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>法兰厚度 C </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputTwos\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>螺栓孔径 d </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputThrees\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>螺栓数量 n </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFours\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>总高 H </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputFives\" class=\"input\"></el-input>\r\n            </div>\r\n        </div>\r\n        <div class=\"divery3\">\r\n            <div class=\"biaotilan\">\r\n                <div class=\"containerOne\">流量计材质 Material</div>\r\n                <div class=\"sanjiao3\"></div>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>表体\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSixs\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>法兰 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputSevens\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>发生体 </span>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputEights\" class=\"input\"></el-input>\r\n            </div>\r\n            <div class=\"request\">\r\n                <span>检测体\r\n                </span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <el-input v-model=\"inputNines\" class=\"input\"></el-input>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: 'Draw',\r\n    props: {\r\n        dimensionalData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        dimenData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        materialData: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        drawImages: {\r\n            type: Array,\r\n            default: () => ([])\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            inputOne: '',\r\n            inputTwo: '',\r\n            inputThree: '',\r\n            inputFour: '',\r\n            inputFive: '',\r\n            inputSix: '',\r\n            inputSeven: '',\r\n            inputEight: '',\r\n            inputNine: '',\r\n            inputTen: '',\r\n            inputOnes: '',\r\n            inputTwos: '',\r\n            inputThrees: '',\r\n            inputFours: '',\r\n            inputFives: '',\r\n            inputSixs: '',\r\n            inputSevens: '',\r\n            inputEights: '',\r\n            inputNines: '',\r\n            imageData: [],//存储每个图片的src\r\n        }\r\n    },\r\n    watch: {\r\n        dimensionalData: {\r\n            handler(newVal, oldVal) {\r\n                console.log(newVal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    const data = newVal; // 获取projectData对象\r\n                    this.inputOne = data.安装位号 || '';\r\n                    this.inputTwo = data['流量计口径（mm）'] || '';\r\n                    this.inputThree = data.仪表类型 || '';\r\n                    this.inputFour = data.仪表结构 || '';\r\n                    this.inputFive = data.连接方式\r\n                    this.inputSix = data.压力等级\r\n                }\r\n            }\r\n        },\r\n        dimenData: {\r\n            handler(newVal, oldVal) {\r\n                console.log(newVal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    const data = newVal;\r\n                    this.inputSeven = data.公称口径 || '';\r\n                    this.inputEight = data['表体内径D'] || '';\r\n                    this.inputNine = data['标准型长度L1'] || '';\r\n                    this.inputTen = data['法兰外径D1'] || '';\r\n                    this.inputOnes = data['中心螺距K']\r\n                    this.inputTwos = data['法兰厚度C']\r\n                    this.inputThrees = data['螺栓孔径d']\r\n                    this.inputFours = data['螺栓数量n']\r\n                    this.inputFives = data['总高H']\r\n\r\n                }\r\n\r\n            }\r\n        },\r\n        materialData: {\r\n            handler(newVal, oldVal) {\r\n                console.log(newVal)\r\n                if (Object.keys(newVal).length > 0) {\r\n                    const data = newVal; // 获取projectData对象\r\n                    this.inputSixs = data.表体 || '';\r\n                    this.inputSevens = data.法兰 || '';\r\n                    this.inputEights = data.发生体 || '';\r\n                    this.inputNines = data.检测体 || '';\r\n                }\r\n\r\n            }\r\n        },\r\n        drawImages: {\r\n            handler(newVal, oldVal) {\r\n                console.log(\"接受到了图片\", newVal)\r\n                const imageData = newVal\r\n                // img.src=this.imageData[0]\r\n                // console.log(img.src)\r\n                this.imageData[0] = imageData[0].src\r\n                this.imageData[1] = imageData[1].src\r\n                console.log(this.imageData[0])\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#Draw {\r\n    position: absolute;\r\n    margin-top: 50px;\r\n    left: 60px;\r\n    /* background-color: #ffff;  */\r\n    width: 1309.5px;\r\n    height: 1300px;\r\n}\r\n\r\n.divery1 {\r\n    height: 380px;\r\n    width: 550px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    margin-left: 64px;\r\n    margin-top: 40px;\r\n}\r\n\r\n.divery2 {\r\n    height: 530px;\r\n    width: 550px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    margin-left: 64px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.divery3 {\r\n    height: 260px;\r\n    width: 550px;\r\n    border-left: 1px solid rgb(217, 210, 210);\r\n    border-right: 1px solid rgb(217, 210, 210);\r\n    border-bottom: 1px solid rgb(217, 210, 210);\r\n    border: 1px solid rgb(217, 210, 210);\r\n    margin-left: 64px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.biaotilan {\r\n    width: 550px;\r\n    height: 45px;\r\n    /* background-color: #02a7f0; */\r\n    overflow: hidden;\r\n\r\n\r\n\r\n}\r\n\r\n.sanjiao1 {\r\n    position: absolute;\r\n    top: 40px;\r\n    left: 566px;\r\n    height: 45px;\r\n    width: 50px;\r\n    background-color: rgb(24, 102, 170);\r\n    clip-path: polygon(0 0, 100% 100%, 100% 0);\r\n}\r\n\r\n.sanjiao2 {\r\n    position: absolute;\r\n    top: 442px;\r\n    left: 566px;\r\n    height: 45px;\r\n    width: 50px;\r\n    background-color: rgb(24, 102, 170);\r\n    clip-path: polygon(0 0, 100% 100%, 100% 0);\r\n}\r\n\r\n.sanjiao3 {\r\n    position: absolute;\r\n    top: 995px;\r\n    left: 566px;\r\n    height: 45px;\r\n    width: 50px;\r\n    background-color: rgb(24, 102, 170);\r\n    clip-path: polygon(0 0, 100% 100%, 100% 0);\r\n}\r\n\r\n.image {\r\n    position: absolute;\r\n    margin-left: 200px;\r\n    margin-top: 100px;\r\n}\r\n\r\n.images {\r\n    position: absolute;\r\n    margin-left: 200px;\r\n    margin-top: 300px;\r\n}\r\n\r\n.container {\r\n    width: 550px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    line-height: 45px;\r\n}\r\n\r\n.containerOne {\r\n    width: 550px;\r\n    height: 45px;\r\n    background-color: rgba(227, 227, 227, 0.667);\r\n    /* margin-top: 10px; */\r\n    line-height: 45px;\r\n}\r\n\r\n.request {\r\n    margin-top: 10px;\r\n    margin-left: 5px;\r\n    font-size: 13px;\r\n}\r\n\r\n.input {\r\n    width: 350px;\r\n    margin-left: 10px;\r\n}</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Draw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Draw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Draw.vue?vue&type=template&id=6a4bb186&scoped=true&\"\nimport script from \"./Draw.vue?vue&type=script&lang=js&\"\nexport * from \"./Draw.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Draw.vue?vue&type=style&index=0&id=6a4bb186&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6a4bb186\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c(\"div\")\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);//数据库名 版本 数据库描述 大小\r\n// 删除数据库里面的表\r\n// db.transaction(function(tx) {\r\n// tx.executeSql('DROP TABLE IF EXISTS mediutables', [], function() {\r\n// console.log('flowmeters table dropped successfully');\r\n// }, function(tx, error) {\r\n// console.log('Error dropping flowmeters table: ' + error.message);\r\n// });\r\n// });\r\n\r\n// 创建流量计类型表\r\nexport function createflowmeter() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists flowmeter_type('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(10) not null unique)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建仪表类型信息表\r\nexport function createinstrument_type() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists instrument_type('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(10) not null,'+' flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//新增的\r\n//创建不同流量计不同类型对应图片表\r\nexport function createflowmeterimage() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists flowmeter_image('+'id integer primary key  autoincrement not null,'+\r\n      'image varchar(255) not null,'+'instrument_type_id int default null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建连接方式信息表\r\nexport function createconnection_types() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists connection_types('+'id integer primary key  autoincrement not null,'+\r\n      'connection_name varchar(50) not null,'+'encode varchar(10) not null,'+'instrument_type_id int default null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建连接标准信息表\r\nexport function connection_standard() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists connection_standard('+'id integer primary key  autoincrement not null,'+\r\n      'cstandard_name varchar(50) not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//名字没改只是字段改了\r\n\r\n//创建夹持型的结构尺寸表\r\n// D是表体内径\r\n// D1是表体外径\r\n// D400是400摄氏度下的表体外径\r\n// BL是表体长度\r\n// BL400是400摄氏度下的表体长度\r\n// H是高度即总高\r\n// H400是是400摄氏度下的的流量计高度\r\n//bore_id对应的口径id\r\n//instrument_type_id是仪表类型id\r\n//flowmeter_type_id是流量计类型id\r\nexport function clamp_structuretable() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists clamp_structuretable('+'id integer primary key  autoincrement not null,'+\r\n      'D int default null,'+'D1 int default null,'+'D400 int default null,'+'BL int default null,'+'BL400 int default null,'+\r\n      'H int default null,'+'H400 int default null,'+'bore_id int not null,'+'instrument_type_id int default null,'+'flowmeter_type_id not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建法兰型的结构尺寸表\r\n// BD是表体内径\r\n// stL是标准型长度\r\n// wideL是宽量程型长度\r\n// tpL是温压型长度\r\n// senL是传感器型长度\r\n// L400是400摄氏度型长度\r\n// FD1是法兰外径\r\n// CK是中心螺距\r\n// FC法兰厚度\r\n// d是螺栓孔径\r\n// n是螺栓数量\r\n// H是高度即总高\r\n// H400是是400摄氏度下的的流量计高度\r\n//bore_id对应的口径id\r\n// nominal_pressures_id公称压力等级id\r\nexport function flan_structuretable() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists flan_structuretable('+'id integer primary key  autoincrement not null,'+\r\n      'BD int check(BD>0) default null,'+'stL int  default null,'+'wideL int  default null,'+'tpL int  default null,'+'senL int default null,'+'L400 int default null,'+\r\n      'FD1 int check(FD1>0) default null,'+'CK int check(CK>0) default null,'+'FC int check(FC>0) default null,'+'d int check(d>0) default null,'+\r\n      'n int check(n>0) default null,'+'H int check(H>0) default null,'+'H400 int default null,'+'bore_id int not null,'+'nominal_pressures_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建结构尺寸图信息表\r\n// name是结构尺寸图的名称\r\n// image字段是对应的图片链接\r\n// connection_types_id是连接类型的id\r\n//instrument_type_id是仪表类型id\r\n//flowmeter_type_id是流量计类型id\r\nexport function  clamp_sizeimage() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists clamp_sizeimage('+'id integer primary key  autoincrement not null,'+\r\n      'name varchar(50) unique,'+'image varchar(255) default null,'+'connection_types_id not null,'+'instrument_type_id int null,'+'flowmeter_type_id not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// 创建口径信息表\r\n//口径这边DN等价于mm\r\n// 此表各字段解释：\r\n// size是口径大小,存储的数据单位同一为mm\r\n// instrument_type_id是所属仪表类型的id\r\nexport function bore_informations() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists bore_informations('+'id integer primary key  autoincrement not null,'+\r\n      'size int not null,'+'instrument_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建介质类型表\r\n//此表各字段解释:\r\n// 1.ty_name是介质类型名称，如气体、液体\r\n// 2.encode是介质类型的对应编码\r\nexport function mediutablestypes() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists mediutablestypes('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(10) not null,'+' encode varchar(3) default null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//名字没改，只是字段改了\r\n//创建介质信息表\r\n//此表各字段解释：\r\n// 1.media_name 是具体介质名称\r\n// 2.standar_density是标况密度\r\n// 3.viscosity是粘度，即动力粘度\r\n// 4.dynamic_viscosity是标况运动粘度，只有气体有\r\n// 4.mediutablestypes_id是具体介质所属大类，如液体、气体、蒸汽的id，可查介质类型表得到\r\nexport function mediutables() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists mediutables('+'id integer primary key  autoincrement not null,'+\r\n      'media_name varchar(50) unique not null,'+'standar_density decimal(10,5) default null,'+'viscosity decimal(10,5) default null,'+\r\n      'dynamic_viscosity int default null,'+'mediutablestypes_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//名字没改，只是字段改了\r\n//蒸汽介质具体信息表\r\n// 此表各字段解释同上表\r\nexport function steammedius() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists steammedius('+'id integer primary key  autoincrement not null,'+\r\n      'media_name varchar(50) unique not null,'+'standar_density decimal(10,5) default null,'+'viscosity decimal(10,5) default null,'\r\n      +'dynamic_viscosity int default null,'+'encode varchar(3) default null,'+'mediutablestypes_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\n//新增的\r\n\r\n//创建气体流量参数表,所有流量单位是m^3/h\r\n//此表各字段解释：\r\n// 1、id是主键，设置成自增，用于后续不同表的查询；\r\n// 2.size 是口径大小\r\n// 3.gmin_standardflow是最小标准流量范围\r\n// 4.gmax_standardflow是最大标准流量范围\r\n// 5.gmin_select是最小可选流量范围;\r\n// 6.gmax_select是最大可选流量范围;\r\n// 7.bore_informations_id是口径的id，可从口径信息表获得\r\n// 8.mediutables_id是所选气体具体介质的id\r\n// 9.instrument_type_id是仪表类型id\r\nexport function gflowtables() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists gflowtables ('+'id integer primary key  autoincrement not null,'+\r\n      'size int not null,'+'gmin_standardflow decimal(10,3),'+'gmax_standardflow decimal(10,3),'+'gmin_select decimal(10,3),'+'gmax_select decimal(10,3),'+\r\n      'bore_informations_id int not null,'+'mediutables_id int not null,'+'instrument_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建液体流量范围参数表，所有流量单位是m^3/h\r\n//此表各字段解释：\r\n// 1、id是主键，设置成自增，用于后续不同表的查询；\r\n// 2.size 是口径大小\r\n// 3.lmin_standardflow是最小标准流量范围\r\n// 4.lmax_standardflow是最大标准流量范围\r\n// 5.lmin_select是最小可选流量范围;\r\n// 6.lmax_select是最大可选流量范围;\r\n// 7.bore_informations_id是口径的id，可从口径信息表获得\r\n// 8.mediutables_id是所选液体具体介质的id\r\n// 9.instrument_type_id是仪表类型id\r\n\r\nexport function lflowtables() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists lflowtables ('+'id integer primary key  autoincrement not null,'+\r\n      'size int not null,'+'lmin_standardflow decimal(10,3),'+'lmax_standardflow decimal(10,5),'+'lmin_select decimal(10,3),'+'lmax_select decimal(10,3),'+\r\n      'bore_informations_id int not null,'+'mediutables_id int not null,'+'instrument_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建饱和蒸汽流量范围参数表\r\n//此表各字段解释：\r\n// 1、id是主键，设置成自增，用于后续不同表的查询；\r\n// 2.size 是口径大小\r\n// 3.pressure是绝压,单位为KPa\r\n// 4.temperatue是温度，单位为摄氏度\r\n// 5.density是密度，蒸汽介质密度\r\n// 6.lmax_select是最大可选流量范围;\r\n// 7.stflow_upperlimit是标准流量下限\r\n// 8.stflow_lowlimit是标准流量上限\r\n//9.expandflow_upperlimit可拓展流量最大上限\r\n// 7.bore_informations_id是口径的id，可从口径信息表获得\r\n// 8.mediutables_id是所选具体介质的id\r\n// 9.instrument_type_id是仪表类型id\r\nexport function steamstable() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists steamstable ('+'id integer primary key  autoincrement not null,'+\r\n      'size int not null,'+' pressure decimal(10,3),'+'temperatue decimal(10,3),'+'density decimal(10,3),'+'stflow_upperlimit int,'+'stflow_lowlimit int,'+'expandflow_upperlimit int,'+\r\n      'bore_informations_id int not null,'+'mediutables_id int not null,'+'instrument_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//---------------------------------------------------------------------公共信息表----------------------------------------------------------------------------------\r\n//创建涡街流量计输出类型选项信息表\r\nexport function type_of_output() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists type_of_output('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null unique,'+'encode varchar(5) not null unique)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建显示类型表 (通过所属流量计类型编号来查询）\r\nexport function function_type() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists function_type('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(5) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建表体材料(通过所属流量计类型编号来查询）\r\nexport function body_materials() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists body_materials('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(5) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建检测体材料信息表(通过所属流量计类型编号来查询）\r\nexport function checkbody_materials() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists checkbody_materials('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建变送器壳体材质表信息表(通过所属流量计类型编号来查询）\r\nexport function changebody_materials() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists changebody_materials('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null unique,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建公称口径信息表\r\nexport function nomial_diameter() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists nomial_diameter('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(5) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建公称压力信息表\r\nexport function nominal_pressures() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists nominal_pressures('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null unique,'+'encode varchar(3) not null unique)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建本体材料信息表\r\nexport function body_materialtable() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists body_materialtable('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null unique)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//创建发生体材质\r\nexport function generating_bodytable() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists generating_bodytable('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建探头材质信息表\r\nexport function probe_material() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists probe_material('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(3) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建防爆设计信息表\r\nexport function explosion_proof_designs() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists explosion_proof_designs('+'id integer primary key  autoincrement not null,'+\r\n      'type_name varchar(50) not null,'+'encode varchar(3) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建供电电源信息表\r\nexport function power_supplys() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists power_supplys ('+'id integer primary key autoincrement not null,'+\r\n      'electric_name varchar(50) not null,'+'electric_encode varchar(3) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建通讯协议信息表\r\nexport function communications() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists communications('+'id integer primary key  autoincrement not null,'+\r\n     'communication_name varchar(50) not null,'+'communication_encode varchar(3) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建通讯接口信息表\r\nexport function communications_interfaces() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists communications_interfaces('+'id integer primary key  autoincrement not null,'+\r\n      'interface_name varchar(50) not null,'+'interface_encode varchar(3) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建仪表结构\r\nexport function instruments(){\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists instruments('+'id integer primary key  autoincrement not null,'+\r\n      'instrument_name varchar(50) not null,'+'instrument_encode varchar(3) not null,'+'instrument_type_id int not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建流量计防护等级\r\nexport function protections(){\r\n  return new Promise((reslove,reject) =>{\r\ndb.transaction(tx => {\r\n      tx.executeSql('create table if not exists protections('+'id integer primary key  autoincrement not null,'+'protection_name varchar(10) not null,'+\r\n      'instrument_type_id int not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//准确度等级信息表\r\nexport function accurategrades(){\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists accurategrades('+'id integer primary key  autoincrement not null,'+\r\n      'accurategrade_name varchar(10) not null,'+'instrument_type_id int not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建电器接口信息表\r\nexport function eleinfterfaces() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists eleinfterfaces('+'id integer primary key  autoincrement not null,'+\r\n      'eleinfterface_name varchar(10) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//创建分割电缆长度信息表\r\nexport function slipcables(){\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists slipcables ('+'id integer primary key autoincrement not null,'+\r\n      'slipcable_name varchar(10) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//法兰材质信息表\r\nexport function FLmaterials() {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('create table if not exists FLmaterials ('+'id integer primary key autoincrement not null,'+\r\n      'FLmaterial_name varchar(20) not null,'+'flowmeter_type_id int not null)',[],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n//连接已创建的数据库\r\nvar db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);\r\n\r\n// 添加介质类型信息（三大类）\r\nexport function addMedius(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into mediutablestypes (type_name,encode) values(?,?)', [obj.ty_name, obj.encode], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加液体、气体等具体介质信息\r\nexport function addMediutables(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into mediutables (media_name,standar_density,viscosity,dynamic_viscosity,mediutablestypes_id) values(?,?,?,?,?)', \r\n      [obj.media_name, obj.standar_density,obj.viscosity,obj.dynamic_viscosity,obj.mediutablestypes_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加蒸汽介质具体信息\r\n//测量介质不用下拉框，根据选择的介质名称变化\r\nexport function addSteammediu(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into steammedius (media_name,standar_density,viscosity,dynamic_viscosity,encode,mediutablestypes_id) values(?,?,?,?,?,?)', \r\n      [obj.media_name,obj.standar_density,obj.viscosity,obj.dynamic_viscosity,obj.encode,obj.mediutablestypes_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n// 添加流量计类型信息（完成）\r\nexport function addFlowmeter(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into flowmeter_type (type_name,encode) values(?,?)',[obj.ty_name, obj.encode], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加对应的流量计类型图片\r\nexport function add_flowmeterimage(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into flowmeter_image (image,instrument_type_id,flowmeter_type_id) values(?,?,?)',[obj.image,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//删除所有数据\r\nexport function delAll() {\r\n  return new Promise((reslove,reject)=>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('delete from nominal_pressures', [], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })    \r\n  })\r\n\r\n}\r\n\r\n//添加仪表类型信息（完成）\r\nexport function addInstrument_type(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into instrument_type (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.ty_name, obj.encode,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加连接方式信息--根据流量计类型和仪表类型的id变化\r\nexport function addConnection_types(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into connection_types (connection_name,encode,instrument_type_id,flowmeter_type_id) values(?,?,?,?)', [obj.connection_name, obj.encode,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加连接标准信息\r\nexport function addConnection_standard(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into connection_standard (cstandard_name) values(?)', [obj.cstandard_name], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加夹持型结构尺寸表信息\r\nexport function addClamp_structuretable(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into clamp_structuretable (D,D1,D400,BL,BL400,H,H400,bore_id,instrument_type_id,flowmeter_type_id) values(?,?,?,?,?,?,?,?,?,?)', \r\n      [obj.D,obj.D1,obj.D400,obj.BL,obj.BL400,obj.H,obj.H400,obj.bore_id,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加法兰型的结构尺寸表信息\r\nexport function addFlan_structuretable(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into flan_structuretable (BD,stL,wideL,tpL,senL,L400,FD1,CK,FC,d,n,H,H400,bore_id,nominal_pressures_id) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)',\r\n      [obj.BD, obj.stL,obj.wideL,obj.tpL,obj.senL,obj.L400,obj.FD1,obj.CK,obj.FC,obj.d,obj.n,obj.H,obj.H400,obj.bore_id,obj.nominal_pressures_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加结构尺寸图信息\r\nexport function addClamp_sizeimage(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into clamp_sizeimage (name,image,connection_types_id,instrument_type_id,flowmeter_type_id) values(?,?,?,?,?)', \r\n      [obj.name, obj.image,obj.connection_types_id,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加口径信息\r\nexport function addBore_informations(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into bore_informations (size,instrument_type_id) values(?,?)', [obj.size, obj.instrument_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加气体流量参考信息范围\r\nexport function addGflowtables(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('insert into gflowtables (size,gmin_standardflow,gmax_standardflow,gmin_select,gmax_select,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?)',\r\n      [obj.size,obj.gmin_standardflow,obj.gmax_standardflow,obj.gmin_select,obj.gmax_select,obj.bore_informations_id,obj.mediutables_id,obj.instrument_type_id],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加液体流量参考信息\r\nexport function addLflowtables(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('insert into lflowtables (size,lmin_standardflow,lmax_standardflow,lmin_select,lmax_select,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?)',\r\n      [obj.size,obj.lmin_standardflow,obj.lmax_standardflow,obj.lmin_select,obj.lmax_select,obj.bore_informations_id,obj.mediutables_id,obj.instrument_type_id],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n//添加蒸汽流量范围参考信息\r\nexport function addSteamstable(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(tx => {\r\n      tx.executeSql('insert into steamstable (size,pressure,temperatue,density,stflow_upperlimit,stflow_lowlimit,expandflow_upperlimit,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?,?,?)',\r\n      [obj.size,obj.pressure,obj.temperatue,obj.density,obj.stflow_upperlimit,obj.stflow_lowlimit,obj.expandflow_upperlimit,obj.bore_informations_id,obj.mediutables_id,obj.instrument_type_id],\r\n      function (tx,res) {\r\n        reslove(tx,res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n\r\n//------------------------------------------------------添加数据部分----------------------------------------------------------------------\r\n\r\nexport function add_Mediuclass(){\r\n   //插入三大类介质\r\n   addMedius({ty_name: '气体', encode: '1'});\r\n   addMedius({ty_name: '液体', encode: '2'});\r\n   addMedius({ty_name: '蒸汽', encode: ''});\r\n}\r\nexport function add_Medius(){\r\n   //插入具体介质\r\n   addMediutables({media_name:'空气',standar_density: 1.293,viscosity:0,dynamic_viscosity:14000000,mediutablestypes_id:1});\r\n   addMediutables({media_name:'氧气',standar_density:1.4286,viscosity:0,dynamic_viscosity:14210000,mediutablestypes_id:1});\r\n   addMediutables({media_name:'氯气',standar_density:3.2143,viscosity:0,dynamic_viscosity:4110000,mediutablestypes_id:1});\r\n   addMediutables({media_name:'水',standar_density:1000,viscosity:0.001,dynamic_viscosity:null,mediutablestypes_id:2});\r\n   addMediutables({media_name:'汽油',standar_density:0,viscosity:0,dynamic_viscosity:null,mediutablestypes_id:2});\r\n   addMediutables({media_name:'机油',standar_density:800,viscosity:0.01,dynamic_viscosity:null,mediutablestypes_id:2});\r\n}\r\nexport function add_Steammedium(){\r\n  addSteammediu({media_name:'过饱和水蒸气',standar_density:0,viscosity:null,dynamic_viscosity:null,encode:'3',mediutablestypes_id:3});\r\n  addSteammediu({media_name:'过热水蒸气',standar_density:0,viscosity:null,dynamic_viscosity:null,encode:'9',mediutablestypes_id:3});\r\n  addSteammediu({media_name:'其他蒸汽',standar_density:0,viscosity:null,dynamic_viscosity:null,encode:'9',mediutablestypes_id:3});\r\n}\r\nexport function add_flowmeter(){\r\n     // 插入流量计类型\r\n     addFlowmeter({ty_name:'涡街流量计',encode:'10V'});\r\n     addFlowmeter({ty_name:'旋进流量计',encode:'20VST'});\r\n     addFlowmeter({ty_name:'电磁流量计',encode:'FBDC-'});\r\n}\r\nexport function add_instrument(){\r\n     //插入具体仪表类型\r\n     addInstrument_type({ty_name:'压电标准型',encode:'A',flowmeter_type_id:1});\r\n     addInstrument_type({ty_name:'压电双检测体型',encode:'B',flowmeter_type_id:1});\r\n     addInstrument_type({ty_name:'压电宽量程型',encode:'K',flowmeter_type_id:1});\r\n     addInstrument_type({ty_name:'标准型',encode:'A',flowmeter_type_id:2});\r\n     addInstrument_type({ty_name:'温压补偿型',encode:'W',flowmeter_type_id:2});\r\n}\r\nexport function add_Connectionmeans(){\r\n    //插入连接方式\r\n   addConnection_types({connection_name:'夹持型',encode:'1',instrument_type_id:1,flowmeter_type_id:1});\r\n   addConnection_types({connection_name:'法兰连接型',encode:'1',instrument_type_id:1,flowmeter_type_id:1});\r\n   addConnection_types({connection_name:'卫生连接型',encode:'2',instrument_type_id:1,flowmeter_type_id:1});\r\n   addConnection_types({connection_name:'国际法兰连接',encode:'1',instrument_type_id:4,flowmeter_type_id:2});\r\n   addConnection_types({connection_name:'DIN法兰连接',encode:'2',instrument_type_id:4,flowmeter_type_id:2});\r\n   addConnection_types({connection_name:'ANSI法兰连接',encode:'3',instrument_type_id:4,flowmeter_type_id:2});\r\n   addConnection_types({connection_name:'法兰连接型',encode:'0',instrument_type_id:null,flowmeter_type_id:3});\r\n   addConnection_types({connection_name:'插入型',encode:'C',instrument_type_id:null,flowmeter_type_id:3});\r\n}\r\nexport function add_Connection_standards(){\r\n   //插入连接标准\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN16RF'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN16MF'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN20'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN25'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN40'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN50'});\r\n   addConnection_standard({cstandard_name:'HG/T20592 PN150'});\r\n}\r\nexport function add_Clamp_structuretables(){\r\n  //添加夹持型结构尺寸表信息\r\n  addClamp_structuretable({D:15,D1:85,D400:95,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:1,flowmeter_type_id:1});\r\n  addClamp_structuretable({D:20,D1:85,D400:100,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:2,flowmeter_type_id:1});\r\n  addClamp_structuretable({D:25,D1:85,D400:100,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:3,flowmeter_type_id:1});\r\n}\r\nexport function add_Flan_structuretables(){\r\n   //添加法兰型结构尺寸表信息\r\n   addFlan_structuretable({BD:15,stL:200,wideL:null,tpL:null,senL:null,L400:200,FD1:95,CK:65,FC:14,d:4,n:4,H:320,H400:null,bore_id:1,nominal_pressures_id:1});\r\n   addFlan_structuretable({BD:20,stL:200,wideL:null,tpL:null,senL:null,L400:200,FD1:105,CK:75,FC:14,d:14,n:4,H:320,H400:null,bore_id:2,nominal_pressures_id:1});\r\n   addFlan_structuretable({BD:25,stL:200,wideL:200,tpL:200,senL:null,L400:200,FD1:115,CK:85,FC:16,d:14,n:4,H:320,H400:null,bore_id:3,nominal_pressures_id:1});\r\n}\r\nexport function add_Clamp_sizeimages(){\r\n    //添加结构尺寸图信息\r\n    addClamp_sizeimage({name:'夹持型尺寸图',image:'123445566',connection_types_id:0,instrument_type_id:1,flowmeter_type_id:1});\r\n    addClamp_sizeimage({name:'法兰型尺寸图',image:'123445566',connection_types_id:1,instrument_type_id:1,flowmeter_type_id:1});\r\n}\r\nexport function addBore_Informations(){\r\n   //添加口径信息\r\n   addBore_informations({size:15,instrument_type_id:1});\r\n   addBore_informations({size:20,instrument_type_id:1});\r\n   addBore_informations({size:25,instrument_type_id:1});\r\n   addBore_informations({size:32,instrument_type_id:1});\r\n}\r\n  \r\nexport function add_gflowtables(){\r\n  //添加气体流量参考信息 \r\n  addGflowtables({size:15,gmin_standardflow:2,gmax_standardflow:40,gmin_select:2,gmax_select:100,bore_informations_id:1,mediutables_id:1,instrument_type_id:1});\r\n  addGflowtables({size:20,gmin_standardflow:8,gmax_standardflow:60,gmin_select:8,gmax_select:120,bore_informations_id:2,mediutables_id:1,instrument_type_id:1});\r\n  addGflowtables({size:25,gmin_standardflow:6,gmax_standardflow:50,gmin_select:6,gmax_select:60,bore_informations_id:3,mediutables_id:1,instrument_type_id:1});\r\n  addGflowtables({size:32,gmin_standardflow:14,gmax_standardflow:100,gmin_select:14,gmax_select:150,bore_informations_id:4,mediutables_id:1,instrument_type_id:1});\r\n  }\r\nexport function add_Lflowtables(){\r\n  //添加液体流量参考信息 \r\n  addLflowtables({size:15,lmin_standardflow:1,lmax_standardflow:6,lmin_select:0.8,lmax_select:8,bore_informations_id:1,mediutables_id:4,instrument_type_id:1});\r\n  addLflowtables({size:20,lmin_standardflow:1.2,lmax_standardflow:8,lmin_select:1,lmax_select:15,bore_informations_id:2,mediutables_id:4,instrument_type_id:1});\r\n  addLflowtables({size:25,lmin_standardflow:2,lmax_standardflow:16,lmin_select:1.6,lmax_select:18,bore_informations_id:3,mediutables_id:4,instrument_type_id:1});\r\n  addLflowtables({size:32,lmin_standardflow:2.2,lmax_standardflow:20,lmin_select:1.8,lmax_select:30,bore_informations_id:4,mediutables_id:4,instrument_type_id:1});\r\n}\r\nexport function add_Steamstables(){\r\n  //添加饱和蒸汽流量范围参考信息\r\n  addSteamstable({size:15,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:30,stflow_lowlimit:10,expandflow_upperlimit:112,bore_informations_id:1,mediutables_id:7,instrument_type_id:1});\r\n  addSteamstable({size:20,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:102,stflow_lowlimit:13,expandflow_upperlimit:112,bore_informations_id:2,mediutables_id:7,instrument_type_id:1});\r\n  addSteamstable({size:25,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:133,stflow_lowlimit:17,expandflow_upperlimit:175,bore_informations_id:3,mediutables_id:7,instrument_type_id:1});\r\n  addSteamstable({size:32,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:236,stflow_lowlimit:30,expandflow_upperlimit:287,bore_informations_id:4,mediutables_id:7,instrument_type_id:1});\r\n}\r\n\r\nexport function add_Flowmeterimage(){\r\n  add_flowmeterimage({image:'12334',instrument_type_id:1,flowmeter_type_id:1});\r\n  add_flowmeterimage({image:'12334',instrument_type_id:2,flowmeter_type_id:1});\r\n  add_flowmeterimage({image:'12334',instrument_type_id:3,flowmeter_type_id:1});\r\n}\r\n\r\n\r\n","//连接已创建的数据库\r\nvar db = openDatabase('flowmeters','1.0','流量计选型数据库',5*1024*1024);\r\n\r\n// 添加涡街流量计专属输出类型信息（完成）\r\nexport function addType_of_output(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into type_of_output (type_name,encode) values(?,?)', [obj.ty_name, obj.encode], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加显示类型信息（功能）--完成\r\nexport function addFunction_type(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into function_type (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.type_name,obj.encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加表体材料信息--完成\r\nexport function addBody_materials(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into body_materials (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.ty_name,obj.encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n\r\n//添加检测体材料信息--视频里面没有--跟公司讲\r\nexport function addCheckbody_materials(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into checkbody_materials (type_name,flowmeter_type_id) values(?,?)', [obj.ty_name,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加变送器壳体材质表信息--视频是个输入框--写死 写铝合金\r\nexport function addChangebody_materials(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into changebody_materials (type_name,flowmeter_type_id) values(?,?)', [obj.ty_name,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加公称口径信息--完成\r\nexport function addNomial_diameter(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into nomial_diameter (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.ty_name,obj.encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n\r\n//添加公称压力信息（完成）\r\nexport function addNominal_pressures(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into nominal_pressures (type_name,encode) values(?,?)', [obj.ty_name, obj.encode], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加本体材料信息(本体材质)--视频没有本体材质--跟公司讲\r\nexport function addBody_materialtable(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into body_materialtable (type_name) values(?)', [obj.ty_name], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n//添加发生体材质信息--完成\r\nexport function addGenerating_bodytable(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into generating_bodytable (type_name,flowmeter_type_id) values(?,?)', [obj.ty_name,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n\r\n//添加探头材质信息--完成\r\nexport function addProbe_material(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into probe_material (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.ty_name,obj.encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n\r\n//添加防爆设计信息--完成\r\nexport function addExplosion_proof_designs(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into explosion_proof_designs (type_name,encode,flowmeter_type_id) values(?,?,?)', [obj.ty_name,obj.encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n//添加供电电源\r\nexport function addPower_supplys(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into power_supplys (electric_name,electric_encode,flowmeter_type_id) values(?,?,?)', \r\n      [obj.electric_name,obj.electric_encode,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//添加通讯协议信息\r\nexport function addCommunications(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into communications (communication_name,communication_encode,flowmeter_type_id) values(?,?,?)', \r\n      [obj.communication_name,obj.communication_encode,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//添加通讯接口信息\r\nexport function addCommunications_interfaces(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into communications_interfaces (interface_name,interface_encode,flowmeter_type_id) values(?,?,?)', \r\n        [obj.interface_name,obj.interface_encode,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n//添加仪表结构信息\r\nexport function addInstruments(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into instruments (instrument_name,instrument_encode,instrument_type_id,flowmeter_type_id) values(?,?,?,?)', \r\n      [obj.instrument_name,obj.instrument_encode,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//流量计防护等级信息\r\nexport function addProtections(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into protections (protection_name,instrument_type_id,flowmeter_type_id) values(?,?,?)', \r\n      [obj.protection_name,obj.instrument_type_id,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//添加准确度等级信息\r\nexport function addAccurategrades(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into accurategrades (accurategrade_name,instrument_type_id,flowmeter_type_id) values(?,?,?)', \r\n        [obj.accurategrade_name,obj.instrument_type_id,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n//添加流量计法兰材质\r\nexport function add_FLmaterials(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into FLmaterials (FLmaterial_name,flowmeter_type_id) values(?,?)', \r\n      [obj.FLmaterial_name,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//添加分体电缆长度\r\nexport function addSlipcables(obj) {\r\n  return new Promise((reslove,reject) =>{\r\n    db.transaction(function (tx) {\r\n      tx.executeSql('insert into slipcables (slipcable_name,flowmeter_type_id) values(?,?)', \r\n      [obj.slipcable_name,obj.flowmeter_type_id], \r\n      function (tx,res) {\r\n        reslove(res)\r\n      }, function (tx, err) {\r\n        reject(err.message)\r\n      })\r\n    })\r\n  })\r\n}\r\n//添加电器类型接口信息\r\nexport function addEleinfterfaces(obj) {\r\n    return new Promise((reslove,reject) =>{\r\n      db.transaction(function (tx) {\r\n        tx.executeSql('insert into eleinfterfaces (eleinfterface_name,flowmeter_type_id) values(?,?)', \r\n        [obj.eleinfterface_name,obj.flowmeter_type_id], \r\n        function (tx,res) {\r\n          reslove(res)\r\n        }, function (tx, err) {\r\n          reject(err.message)\r\n        })\r\n      })\r\n    })\r\n}\r\n  \r\n//-----------------------------------------------------添加信息函数部分-------------------------------------------------------------------\r\n//注最高温度、最高压力、插入连接形式数据直接写死在下拉框列表中，视频里面有数据\r\n\r\n\r\nexport function addType_of_outputs(){\r\n //添加涡街流量计专属输出类型信息\r\n addType_of_output({ty_name:'脉冲信号',encode:'ME'});\r\n addType_of_output({ty_name:'4-20MA(两线)',encode:'TE'});\r\n addType_of_output({ty_name:'4-20MA(三线)',encode:'TS'});\r\n addType_of_output({ty_name:'温压一体电流输出',encode:'TW'});\r\n}\r\n\r\nexport function addFunction_types(){\r\n  //添加显示类型信息（功能）\r\n  addFunction_type({type_name:'无现场显示',encode:'A',flowmeter_type_id:1});\r\n  addFunction_type({type_name:'现场显示电池供电',encode:'B',flowmeter_type_id:1});\r\n  addFunction_type({type_name:'现场显示，系统供电',encode:'D',flowmeter_type_id:1});\r\n}\r\n\r\nexport function addBody_Materials(){\r\n  //添加表体材料信息\r\n  addBody_materials({ty_name:'304不锈钢',encode:'A',flowmeter_type_id:1});\r\n  addBody_materials({ty_name:'316L',encode:'B',flowmeter_type_id:1});\r\n  addBody_materials({ty_name:'碳钢',encode:'C',flowmeter_type_id:1});\r\n}\r\nexport function add_Checkbody_materials(){\r\n  //添加检测体材料信息\r\n  addCheckbody_materials({ty_name:'304不锈钢',flowmeter_type_id:1,});\r\n  addCheckbody_materials({ty_name:'316L',flowmeter_type_id:1,});\r\n}\r\nexport function addNomial_diameters(){\r\n  //添加公称口径信息\r\n  addNomial_diameter({ty_name:'DN15',encode:'01',flowmeter_type_id:1});\r\n  addNomial_diameter({ty_name:'DN20',encode:'02',flowmeter_type_id:1});\r\n  addNomial_diameter({ty_name:'DN25',encode:'02',flowmeter_type_id:1});\r\n}\r\nexport function add_Nominal_pressures(){\r\n  //添加公称压力信息\r\n  addNominal_pressures({ty_name:'PN16',encode:'A',flowmeter_type_id:1});\r\n  addNominal_pressures({ty_name:'PN20 Class150',encode:'B',flowmeter_type_id:1});\r\n  addNominal_pressures({ty_name:'PN25',encode:'C',flowmeter_type_id:1});\r\n  addNominal_pressures({ty_name:'PN40',encode:'D',flowmeter_type_id:1});\r\n}\r\nexport function addBody_materialtables(){\r\n  //添加本体材料信息\r\n  addBody_materialtable({ty_name:'316L不锈钢'});\r\n}\r\nexport function addGenerating_bodytables(){\r\n  //添加发生体材质信息\r\n  addGenerating_bodytable({ty_name:'316L不锈钢',flowmeter_type_id:1});\r\n  addGenerating_bodytable({ty_name:'304不锈钢',flowmeter_type_id:1});\r\n  addGenerating_bodytable({ty_name:'铝合金',flowmeter_type_id:1});\r\n}\r\nexport function addProbe_materials(){\r\n  //添加探头材质信息\r\n  addProbe_material({ty_name:'304不锈钢',encode:'1',flowmeter_type_id:1});\r\n  addProbe_material({ty_name:'哈C',encode:'2',flowmeter_type_id:1});\r\n  addProbe_material({ty_name:'316L不锈钢',encode:'9',flowmeter_type_id:1});\r\n}\r\nexport function add_Explosion_proof_designs(){\r\n  //添加防爆设计信息\r\n  addExplosion_proof_designs({ty_name:'非防爆型',encode:'A',flowmeter_type_id:1});\r\n  addExplosion_proof_designs({ty_name:'本案防爆型',encode:'B',flowmeter_type_id:1});\r\n  addExplosion_proof_designs({ty_name:'隔爆型',encode:'G',flowmeter_type_id:1});\r\n}\r\nexport function add_Power_supplys(){\r\n  //添加供电电源\r\n  addPower_supplys({electric_name:'DC12V',electric_encode:'1',flowmeter_type_id:1});\r\n  addPower_supplys({electric_name:'DV24V',electric_encode:'2',flowmeter_type_id:1});\r\n  addPower_supplys({electric_name:'12V DC',electric_encode:'1',flowmeter_type_id:2});\r\n}\r\nexport function add_Communications(){\r\n  //添加通讯协议\r\n  addCommunications({communication_name:'无通讯协议',communication_encode:'A',flowmeter_type_id:1});\r\n  addCommunications({communication_name:'HART协议',communication_encode:'H',flowmeter_type_id:1});\r\n  addCommunications({communication_name:'MODBUS RTU',communication_encode:'B',flowmeter_type_id:1});\r\n}\r\nexport function add_Communications_interfaces(){\r\n  //添加通讯接口\r\n  addCommunications_interfaces({interface_name:'无通讯接口',interface_encode:'0',flowmeter_type_id:1});\r\n  addCommunications_interfaces({interface_name:'无线',interface_encode:'1',flowmeter_type_id:1});\r\n  addCommunications_interfaces({interface_name:'RS 485',interface_encode:'2',flowmeter_type_id:1});\r\n}\r\nexport function add_Instruments(){\r\n  //添加仪表结构\r\n  addInstruments({instrument_name:'一体型',instrument_encode:'A',instrument_type_id:1,flowmeter_type_id:1});\r\n  addInstruments({instrument_name:'分体型',instrument_encode:'R',instrument_type_id:1,flowmeter_type_id:1});\r\n  addInstruments({instrument_name:'潜水型(IP68)',instrument_encode:'Q',instrument_type_id:1,flowmeter_type_id:1});\r\n}\r\nexport function add_Protections(){\r\n  //添加流量计防护等级\r\n  addProtections({protection_name:'IP65',instrument_type_id:1,flowmeter_type_id:1});\r\n  addProtections({protection_name:'IP66',instrument_type_id:1,flowmeter_type_id:1});\r\n  addProtections({protection_name:'IP67',instrument_type_id:1,flowmeter_type_id:1});\r\n}\r\nexport function add_Accurategrades(){\r\n  //添加准确度等级\r\n  addAccurategrades({accurategrade_name:'0.5级',instrument_type_id:1,flowmeter_type_id:1});\r\n  addAccurategrades({accurategrade_name:'1级',instrument_type_id:1,flowmeter_type_id:1});\r\n  addAccurategrades({accurategrade_name:'1.5级',instrument_type_id:1,flowmeter_type_id:1});\r\n}\r\nexport function addFLmaterials(){\r\n  //添加法兰材质\r\n  add_FLmaterials({FLmaterial_name:'无',flowmeter_type_id:1});\r\n  add_FLmaterials({FLmaterial_name:'碳钢',flowmeter_type_id:1});\r\n  add_FLmaterials({FLmaterial_name:'304不锈钢',flowmeter_type_id:1});\r\n}\r\nexport function add_Slipcables(){\r\n  //添加分体电缆长度\r\n  addSlipcables({slipcable_name:'无',flowmeter_type_id:1});\r\n  addSlipcables({slipcable_name:'5米',flowmeter_type_id:1});\r\n  addSlipcables({slipcable_name:'15米',flowmeter_type_id:1});\r\n}\r\nexport function add_Eleinfterfaces(){\r\n  //添加电器类型接口\r\n  addEleinfterfaces({eleinfterface_name:'无',flowmeter_type_id:1});\r\n  addEleinfterfaces({eleinfterface_name:'M20X1.5',flowmeter_type_id:1});\r\n  addEleinfterfaces({eleinfterface_name:'1/2NPT',flowmeter_type_id:1});\r\n}\r\n\r\n\r\n//obj.eleinfterface_name,obj.flowmeter_type_id","<template>\n    <!-- 模板内容 -->\n  </template>\n  \n  <script>\n  import { mediutablestypes,mediutables,steammedius,createflowmeter,createinstrument_type,createconnection_types,connection_standard,clamp_structuretable,flan_structuretable,clamp_sizeimage,bore_informations,lflowtables,steamstable,type_of_output,function_type,body_materials,checkbody_materials,createflowmeterimage,protections} from '@/api/create/createDB';\n  import { nomial_diameter,nominal_pressures,body_materialtable,generating_bodytable,probe_material,explosion_proof_designs,power_supplys,communications,communications_interfaces,instruments,FLmaterials,accurategrades,slipcables,eleinfterfaces,gflowtables} from '@/api/create/createDB';\n  import { add_Mediuclass,add_Medius,add_Steammedium,add_flowmeter,add_instrument,add_Connectionmeans,add_Connection_standards,add_Clamp_structuretables,add_Flan_structuretables,add_Clamp_sizeimages,addBore_Informations,add_Lflowtables,add_Steamstables,add_gflowtables,add_Flowmeterimage} from '@/api/insert/addflowmeter';\n  import { addType_of_outputs,addFunction_types,addBody_Materials,add_Checkbody_materials,addNomial_diameters,add_Nominal_pressures,addBody_materialtables,addGenerating_bodytables,addProbe_materials,add_Explosion_proof_designs,add_Power_supplys,add_Communications,add_Communications_interfaces,add_Instruments,add_Protections,add_Accurategrades,addFLmaterials,add_Slipcables,add_Eleinfterfaces } from '@/api/insert/addpublic_information';\n  export default {\n    name: 'Db',\n    data() {\n      return {\n        dbConnection: null, // 数据库连接对象\n      };\n    },\n    created() {\n    this.dbConnection = window.openDatabase('flowmeters', '1.0', '流量计选型数据库', 5 * 1024 * 1024);\n    this.checkTableExists('mediutablestypes').then(tableExists => {\n      if (tableExists) {\n        // console.log('表1存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        mediutablestypes().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Mediuclass();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('mediutables').then(tableExists => {\n      if (tableExists) {\n        // console.log('表2存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        mediutables().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Medius();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('steammedius').then(tableExists => {\n      if (tableExists) {\n        // console.log('表3存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        steammedius().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Steammedium();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('flowmeter_type').then(tableExists => {\n      if (tableExists) {\n        // console.log('表4存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        createflowmeter().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_flowmeter();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('instrument_type').then(tableExists => {\n      if (tableExists) {\n        // console.log('表5存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        createinstrument_type().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_instrument();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('connection_types').then(tableExists => {\n      if (tableExists) {\n        // console.log('表6存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        createconnection_types().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Connectionmeans();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('connection_standard').then(tableExists => {\n      if (tableExists) {\n        // console.log('表7存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        connection_standard().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Connection_standards();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('clamp_structuretable').then(tableExists => {\n      if (tableExists) {\n        // console.log('表8存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        clamp_structuretable().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Clamp_structuretables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('flan_structuretable').then(tableExists => {\n      if (tableExists) {\n        // console.log('表9存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        flan_structuretable().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Flan_structuretables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('clamp_sizeimage').then(tableExists => {\n      if (tableExists) {\n        // console.log('表10存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        clamp_sizeimage().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Clamp_sizeimages();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('bore_informations').then(tableExists => {\n      if (tableExists) {\n        // console.log('表11存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        bore_informations().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addBore_Informations();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('lflowtables').then(tableExists => {\n      if (tableExists) {\n        // console.log('表12存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        lflowtables().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n         add_Lflowtables()\n          \n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('steamstable').then(tableExists => {\n      if (tableExists) {\n        // console.log('表13存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        steamstable().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Steamstables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('type_of_output').then(tableExists => {\n      if (tableExists) {\n        // console.log('表14存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        type_of_output().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addType_of_outputs();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('function_type').then(tableExists => {\n      if (tableExists) {\n        // console.log('表15存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        function_type().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addFunction_types();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('body_materials').then(tableExists => {\n      if (tableExists) {\n        // console.log('表16存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        body_materials().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addBody_Materials();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('checkbody_materials').then(tableExists => {\n      if (tableExists) {\n        // console.log('表17存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        checkbody_materials().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Checkbody_materials();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('nomial_diameter').then(tableExists => {\n      if (tableExists) {\n        // console.log('表18存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        nomial_diameter().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addNomial_diameters();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('nominal_pressures').then(tableExists => {\n      if (tableExists) {\n        // console.log('表19存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        nominal_pressures().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Nominal_pressures();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('body_materialtable').then(tableExists => {\n      if (tableExists) {\n        // console.log('表20存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        body_materialtable().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addBody_materialtables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('generating_bodytable').then(tableExists => {\n      if (tableExists) {\n        // console.log('表21存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        generating_bodytable().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addGenerating_bodytables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('probe_material').then(tableExists => {\n      if (tableExists) {\n        // console.log('表22存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        probe_material().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addProbe_materials();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('explosion_proof_designs').then(tableExists => {\n      if (tableExists) {\n        // console.log('表23存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        explosion_proof_designs().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Explosion_proof_designs();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('power_supplys').then(tableExists => {\n      if (tableExists) {\n        // console.log('表24存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        power_supplys().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Power_supplys();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('communications').then(tableExists => {\n      if (tableExists) {\n        // console.log('表25存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        communications().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Communications();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('communications_interfaces').then(tableExists => {\n      if (tableExists) {\n        // console.log('表26存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        communications_interfaces().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Communications_interfaces();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('instruments').then(tableExists => {\n      if (tableExists) {\n        // console.log('表27存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        instruments().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Instruments();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('protections').then(tableExists => {\n      if (tableExists) {\n        // console.log('表28存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        protections().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Protections();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('FLmaterials').then(tableExists => {\n      if (tableExists) {\n        // console.log('表29存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        FLmaterials().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          addFLmaterials();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('accurategrades').then(tableExists => {\n      if (tableExists) {\n        // console.log('表30存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        accurategrades().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Accurategrades();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('slipcables').then(tableExists => {\n      if (tableExists) {\n        // console.log('表31存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        slipcables().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Slipcables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('eleinfterfaces').then(tableExists => {\n      if (tableExists) {\n        // console.log('表32存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        eleinfterfaces().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Eleinfterfaces();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });  \n    this.checkTableExists('gflowtables').then(tableExists => {\n      if (tableExists) {\n        // console.log('表33存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        gflowtables().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_gflowtables();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.checkTableExists('flowmeter_image').then(tableExists => {\n      if (tableExists) {\n        // console.log('表34存在');\n        // 其他逻辑\n      } else {\n        console.log('表不存在');\n        createflowmeterimage().then((tx, res) => {\n          console.log('表创建成功', tx, res);\n          add_Flowmeterimage();\n        console.log(\"插入成功\")\n          // 其他逻辑\n        }).catch(error => {\n          console.error('表创建失败', error);\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n},\n    methods: {\n        //检查表是否存在\n      checkTableExists(tableName) {\n        return new Promise((resolve, reject) => {\n          this.dbConnection.transaction(tx => {\n            tx.executeSql(`SELECT name FROM sqlite_master WHERE type='table' AND name=?`, [tableName], function(tx, res) {\n              const tableExists = res.rows.length > 0;\n              resolve(tableExists);\n            }, function(tx, err) {\n              reject(err.message);\n            });\n          });\n        });\n      },\n      // 其他方法\n    },\n  };\n  </script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Db.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Db.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Db.vue?vue&type=template&id=1924ff22&\"\nimport script from \"./Db.vue?vue&type=script&lang=js&\"\nexport * from \"./Db.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"MyFooter\">\n    <div>\n      <Db/>\n    </div>\n    <div class=\"re1\">\n      <ExportWord2/>\n    </div>\n    <div class=\"re\">\n      <!-- <el-button type=\"file\" @click=\"handleFileUpload()\">点击导入</el-button> -->\n      <input type=\"file\" @change=\"handleFileUpload\">\n      </div>\n    <div class=\"part1\">\n      <selectType :projectData=\"projectData\"></selectType>\n    </div>\n    <div class=\"part2\">\n     <fluid :processData=\"processData\" :outcmomeData=\"outcmomeData\" :fluidData=\"fluidData\">\n     </fluid>\n     <size :sizeData=\"sizeData\"></size>  \n    </div>\n    <div class=\"part3\">\n      <chat :chartData=\"chartData\"></chat>\n   <loss :measurementData=\"measurementData\" :lossImage=\"lossImage\"></loss> \n  </div>\n  <div class=\"part4\">\n    <specs :speciImage=\"speciImage\" :speciData=\"speciData\" :table8Data=\"table8Data\" :accessData=\"accessData\"></specs>\n  </div>\n   <div class=\"part5\">\n     <draw :dimensionalData=\"dimensionalData\" :dimenData=\"dimenData\" :materialData=\"materialData\" :drawImages=\"drawImages\"></draw> \n    </div>\n  </div>\n</template>\n<script>\nimport mammoth from 'mammoth'\nimport { Divider as ElDivider } from 'element-ui'\nimport Chat from '@/components/information/Chat'\nimport Process from '@/components/information/Process'\nimport Fluid from '@/components/information/Fluid'\nimport Outcome from '@/components/information/Outcome'\nimport Size from '@/components/information/Size'\nimport Loss from '@/components/information/Loss'\nimport Specs from '@/components/information/Specs'\nimport Draw from '@/components/information/Draw'\nimport selectType from '@/pages/select-type.vue'\nimport ExportWord2 from '@/components/export-word2.vue'\nimport Db from '@/components/Db.vue'\nexport default {\n  name: 'MyFooter',\n  components: {\n    Process,\n    Fluid,\n    Outcome,\n    Size,\n    Chat,\n    Loss,\n    Specs,\n    Draw,\n    selectType,\n    ElDivider,\n    ExportWord2,\n    Db\n},\n  data() {\n    return {\n      processData:[],//存储解析后工艺参数的结果\n      fluidData:[],//存储解析后的介质参数结果\n      sizeData:[],//解析存储后的多口径比对结果\n      chartData:[],//解析存储后的流量计图表\n      measurementData: [],//存储解析后的测量误差及压力损失\n      outcmomeData: [],//存储解析后的计算结果\n      projectData: [],//存储解析后的项目信息\n      table8Data: [], // 存储表格8的数据,动态标题\n      speciData:[],//存储解析后的流量计规格\n      accessData:[],//存储解析后的流量计附件\n      dimensionalData:[],//存储解析后的结构尺寸图\n      dimenData:[],//存储解析后的流量计安装尺寸\n      materialData:[],//存储解析后的流量计材质\n      //存储不同页面的图片\n      drawImages:[],\n      speciImage:[],\n      lossImage:[],\n    }\n  },\n  methods: {\n    handleFileUpload(event) {\n      const file = event.target.files[0];\n      mammoth.convertToHtml({ arrayBuffer: file })\n        .then((result) => {\n          const html = result.value;\n\n          // 使用cheerio加载HTML\n          const cheerio = require('cheerio');\n          const $ = cheerio.load(html);\n          // 存储图片信息的数组\n          const images = [];\n\n          // 获取HTML中的图片信息\n          $('img').each((index, element) => {\n            const src = $(element).attr('src');\n            const alt = $(element).attr('alt');\n            const imageInfo = { src, alt };\n            images.push(imageInfo);\n            // 从HTML中删除图片节点，以避免影响表格结构的解析\n            $(element).remove();\n          });\n          console.log('保存的图片信息：', images);\n\n          // 只选择最后两张图片存储到drawImage中\n          this.drawImages = images.slice(-2);\n          console.log(this.drawImages)\n\n          //放第一张照片\n          this.lossImage=[images[0]]\n          console.log(\"这是第一张照片\",this.lossImage)\n\n          //放第二张图片\n          this.speciImage=[images[2]]\n          console.log(\"这是第二张照片\",this.speciImage)\n\n          // 从HTML中删除所有的图片节点\n          $('img').remove();\n          // console.log('删除成功')\n\n          // 获取处理后的HTML内容\n          const processedHtml = $.html();\n          // 使用cheerio加载处理后的HTML\n          const $processed = cheerio.load(processedHtml);\n\n          // 获取所有表格元素\n          const tables = $processed('table');\n          // console.log(tables)\n          // 处理表格部分\n\n          // 找到页面中的第八个表格并提取数据\n          const table8 = $('table').eq(9); // eq()从0开始计数，所以使用7来表示第八个表格\n          const rows = table8.find('tr');\n\n          const tableData = [];\n\n          // 遍历每一行并提取数据\n          for (let i = 1; i < rows.length; i++) {\n            const row = $(rows[i]);\n            const cells = row.find('td');\n\n            // 提取第一列的值作为键，提取第二列的值作为对应的值\n            const key = $(cells[0]).text().trim();\n            let value = $(cells[1]).text().trim();\n            if (key.includes('输出方式')) {\n              value = value.split(',')\n            }else if(key.includes('仪表类型')){\n              value = value.split(',')\n            }else if(key.includes('功能类型')){\n                  value = value.split(',');\n            }else if(key.includes('连接方式')){\n                  value = value.split(',');\n            }else if(key.includes('表体材质')){\n                  value = value.split(',');\n            }else if(key.includes('公称口径')){\n                  value = value.split(',');\n            }else if(key.includes('公称压力')){\n                  value = value.split(',');\n            }else if(key.includes('探头材质')){\n                  value = value.split(',');\n            }else if(key.includes('防')){\n                  value = value.split(',');\n            }else if(key.includes('供电电源')){\n                  value = value.split(',');\n            }else if(key.includes('通讯功能')){\n                  value = value.split(',');\n            }else if(key.includes('通讯接口')){\n                  value = value.split(',');\n            }else if(key.includes('仪表结构')){\n                  value = value.split(',');\n            }\n            // 将键值对存储到对象中\n            tableData[key] = value;\n          }\n          console.log(tableData);\n          this.table8Data = tableData\n          tables.each((index, element) => {\n            const table = $processed(element);\n            const tableName = table.find('tr:first-child td:first-child strong').text().trim();\n            if (tableName == '测量误差及压力损失 Measurement error & Pressure loss') {\n              // 获取表格中的所有行\n              const rows = table.find('tr');\n              // console.log(rows)\n              // 创建一个对象用于存储表格数据\n              const tableData = [];\n              // 获取第一行的所有单元格作为键\n              const keys = $(rows[1]).find('td').map((index, element) => $(element).text().trim()).get();\n              console.log(keys)\n              // 遍历每一行（跳过第一行）\n              for (let i = 2; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 将剩余单元格的文本内容作为值存储到对应的键里面\n                for (let j = 0; j < cells.length; j++) {\n                  const value = $(cells[j]).text().trim();\n                  if (!tableData[keys[j]]) {\n                    tableData[keys[j]] = [];\n                  }\n                  tableData[keys[j]].push(value);\n                }\n              }\n              // 在控制台打印提取的表格数据\n              // console.log('测量误差及压力损失表格数据：', tableData);\n              // 对提取的表格数据进行进一步处理或展示\n              this.measurementData = tableData\n              console.log(this.measurementData)\n            } \n            else if (tableName == '计算结果 Calculated results') {\n              // 处理计算结果、多口径比对、介质参数和流量计图表等逻辑\n              const rows = table.find('tr');\n              // 创建一个对象或数组用于存储表格数据\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 2; i < rows.length; i++) { // 注意这里可能需要调整起始索引\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 提取第一列的值作为第一层的键\n                const key1 = $(cells[0]).text().trim();\n                // 提取每个单元格的值，并根据需要存储到相应的数据结构中\n                for (let j = 1; j < cells.length; j++) {\n                  const cell = $(cells[j]);\n                  // 提取该单元格的值，并将其存储到对象或数组中对应的键值下\n                  const value = cell.text().trim();\n                  const key2 = $(rows[1]).find('td').eq(j).text().trim();\n                  const key = `${key1}-${key2}`;\n                  if (!tableData[key1]) {\n                    tableData[key1] = {};\n                  }\n                  tableData[key1][key2] = value;\n                }\n              }\n              // console.log(tableData);\n              this.outcmomeData = tableData;\n              // console.log(this.outcmomeData)\n            } else if (tableName == '项目信息 Project') {\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                let value = $(cells[1]).text().trim();\n                if (key === '流量计类型') {\n                  value = value.split(','); // 将逗号分隔的字符串拆分成数组\n                }\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.projectData = tableData\n              // console.log(\"项目信息是\",this.projectData)\n            } else if (tableName == '工艺参数 Proccess parameter') {\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                let value = $(cells[1]).text().trim();\n                if (key == '管道材质') {\n                  value = value.split(','); // 将逗号分隔的字符串拆分成数组\n                }else if(key=='介质名称'){\n                  value = value.split(',');\n                }\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.processData = tableData\n              console.log(\"项目信息是\",this.processData)\n            }else if (tableName == '流量计规格 Specifications'){\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                let value = $(cells[1]).text().trim();\n                // 将键值对存储到对象中\n                if (key.includes('最高使用温度')) {\n                  value = value.split(','); // 将逗号分隔的字符串拆分成数组\n                }else if(key=='本体材质'){\n                  value = value.split(',');\n                }else if(key=='检测体材质'){\n                  value = value.split(',');\n                }else if(key=='安装方式'){\n                  value = value.split(',');\n                }else if(key=='温压补偿方式'){\n                  value = value.split(',');\n                }else if(key=='流量计防护等级'){\n                  value = value.split(',');\n                }else if(key=='准确度等级'){\n                  value = value.split(',');\n                }else if(key=='最高使用压力(Mpa)'){\n                  value = value.split(',');\n                }else if(key.includes('发生体')){\n                  value = value.split(',');\n                }else if(key=='流量计法兰材质'){\n                  value = value.split(',');\n                }else if(key=='电器接口形式'){\n                  value = value.split(',');\n                }else if(key=='流量计连接标准'){\n                  value = value.split(',');\n                }else if(key=='分体电缆长度'){\n                  value = value.split(',');\n                }else if(key=='插入式连接方式'){\n                  value = value.split(',');\n                }\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.speciData = tableData\n              // console.log(\"1234\",this.speciData)\n\n            }else if (tableName == '流量计附件 Accessories'){\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                let value = $(cells[1]).text().trim();\n                if (key === '流量配套法兰螺栓') {\n                  value = value.split(','); // 将逗号分隔的字符串拆分成数组\n                }else if(key==='流量配套密封垫片'){\n                  value = value.split(',');\n                }else if(key==='分体支架'){\n                  value = value.split(',');\n                }else if(key==='法兰螺栓材质'){\n                  value = value.split(',');\n                }else if(key==='垫片材质'){\n                  value = value.split(',');\n                }\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.accessData = tableData\n              console.log(this.accessData)\n              \n            }else if (tableName == '结构尺寸图 Dimensional drawing'){\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                const value = $(cells[1]).text().trim();\n\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.dimensionalData = tableData\n              // console.log(this.dimensionalData)\n            }else if (tableName == '流量计安装尺寸 Dimensions'){\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                const value = $(cells[1]).text().trim();\n\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.dimenData = tableData\n              // console.log(this.dimenData)\n\n            }else if (tableName == '介质参数 Fluid properties'){\n              const rows = table.find('tr');\n              // 创建一个对象或数组用于存储表格数据\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 2; i < rows.length; i++) { // 注意这里可能需要调整起始索引\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 提取第一列的值作为第一层的键\n                const key1 = $(cells[0]).text().trim();\n                // 提取每个单元格的值，并根据需要存储到相应的数据结构中\n                for (let j = 1; j < cells.length; j++) {\n                  const cell = $(cells[j]);\n                  // 提取该单元格的值，并将其存储到对象或数组中对应的键值下\n                  const value = cell.text().trim();\n                  const key2 = $(rows[1]).find('td').eq(j).text().trim();\n                  const key = `${key1}-${key2}`;\n                  if (!tableData[key1]) {\n                    tableData[key1] = {};\n                  }\n                  tableData[key1][key2] = value;\n                }\n              }\n              // console.log(tableData);\n              this.fluidData = tableData;\n              // console.log(this.fluidData)\n\n\n            }else if (tableName == '多口径比对 Compare sizes'){\n              const rows = table.find('tr');\n              // 创建一个对象或数组用于存储表格数据\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 2; i < rows.length; i++) { // 注意这里可能需要调整起始索引\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 提取第一列的值作为第一层的键\n                const key1 = $(cells[0]).text().trim();\n                // 提取每个单元格的值，并根据需要存储到相应的数据结构中\n                for (let j = 1; j < cells.length; j++) {\n                  const cell = $(cells[j]);\n                  // 提取该单元格的值，并将其存储到对象或数组中对应的键值下\n                  let value = cell.text().trim();\n                  const key2 = $(rows[1]).find('td').eq(j).text().trim();\n                  const key = `${key1}-${key2}`;\n                  if (!tableData[key1]) {\n                    tableData[key1] = {};\n                  }\n                  if (key1 == '仪表尺寸' && key2 == '当前尺寸') {\n                    value = value.split(','); // 将 \"当前尺寸\" 的值转换为数组\n                  }\n                  tableData[key1][key2] = value;\n                }\n              }\n              // console.log(tableData);\n              this.sizeData= tableData;\n            }else if (tableName == '流量计图表 Chart'){\n              const rows = table.find('tr');\n              // 创建一个对象或数组用于存储表格数据\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 2; i < rows.length; i++) { // 注意这里可能需要调整起始索引\n                const row = $(rows[i]);\n                const cells = row.find('td');\n                // 提取第一列的值作为第一层的键\n                const key1 = $(cells[0]).text().trim();\n                // 提取每个单元格的值，并根据需要存储到相应的数据结构中\n                for (let j = 1; j < cells.length; j++) {\n                  const cell = $(cells[j]);\n                  // 提取该单元格的值，并将其存储到对象或数组中对应的键值下\n                  const value = cell.text().trim();\n                  const key2 = $(rows[1]).find('td').eq(j).text().trim();\n                  const key = `${key1}-${key2}`;\n                  if (!tableData[key1]) {\n                    tableData[key1] = {};\n                  }\n                  tableData[key1][key2] = value;\n                }\n              }\n              // console.log(tableData);\n              this.chartData= tableData;\n              // console.log(this.chartData)\n            }else if (tableName == '流量计材质 Material'){\n              const rows = table.find('tr');\n              const tableData = [];\n              // 遍历每一行并提取数据\n              for (let i = 1; i < rows.length; i++) {\n                const row = $(rows[i]);\n                const cells = row.find('td');\n\n                // 提取第一列的值作为键，提取第二列的值作为对应的值\n                const key = $(cells[0]).text().trim();\n                const value = $(cells[1]).text().trim();\n\n                // 将键值对存储到对象中\n                tableData[key] = value;\n              }\n              // console.log(tableData);\n              this.materialData= tableData\n              // console.log(this.materialData)\n\n            }else{\n            }\n          });\n\n          // 根据images数组将图片插入到页面的相应位置\n          // 这里需要根据具体情况进行处理，例如使用Vue.js的数据绑定和循环渲染功能\n\n        })\n        .catch((error) => {\n          console.error('解析文件时出现错误：', error);\n        });\n    }\n  },\n}\n\n\n\n</script>\n\n<style>\n.re{\n  width: auto;\n  height: 50px;\n  margin-left: -500px;\n  background: url(\"../assets/8.webp\");\n}\n.re1{\n  height: 50px;\n  width: auto;\n  background: url(\"../assets/8.webp\");\n}\n\n  .divder1 {\n  width: 100px;\n}\n.one{\n  position: fixed;\n}\n\n .img1{\n  position: absolute;\n  margin-top: -25px; \n  margin-left: 1410px;\n  \n }\n .img2{\n  position: absolute;\n  margin-top: -3px; \n  margin-left: 1410px;\n  \n }\n .img3{\n  position: absolute;\n  margin-top: 20px; \n  margin-left: 1410px;\n  \n }\n .img4{\n  position: absolute;\n  margin-top: 45px; \n  margin-left: 1410px;\n  \n }\n\n .part2{\n  width: auto;\n  height: 1200px;\n  margin-top: -1px;\n  background: url(\"../assets/截屏2023-10-31\\ 16.10.13.png\");\n \n  \n }\n .part3{\n  width: auto;\n  height: 1620px;\n  margin-top:-50px;\n  background: url(\"../assets/8.webp\");\n  background-repeat: no-repeat;\n  background-size:cover ; \n \n  \n\n\n }\n \n.part4{\n  width: auto;\n  border: 1px solid rgb(217, 210, 210);\n  /* border-bottom:1px solid rgb(217, 210, 210) ; */\n  margin-top: -1px;\n  height: 1900px;\n  /* background: url(\"../assets/截屏2023-10-31\\ 16.10.06.png\"); */\n  background: url(\"../assets/截屏2023-10-31\\ 16.10.13.png\");\n  /* background-repeat: no-repeat; */\n  /* background-size:cover ;  */\n}\n.part5{\n  width: auto;\n  margin-top: -1px;\n  height: 1380px;\n  background: url(\"../assets/8.webp\");\n  background-repeat: no-repeat;\n  background-size:cover ; \n}\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyFooter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MyFooter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyFooter.vue?vue&type=template&id=1cdbb138&\"\nimport script from \"./MyFooter.vue?vue&type=script&lang=js&\"\nexport * from \"./MyFooter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyFooter.vue?vue&type=style&index=0&id=1cdbb138&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <my-header />\n    <my-main />\n    <my-footer />\n  </div>\n</template>\n\n<script>\nimport MyHeader from '@/Layout/MyHeader.vue'\nimport MyMain from '@/Layout/MyMain.vue'\nimport MyFooter from '@/Layout/MyFooter.vue'\nexport default {\n  name: 'App',\n  components: {\n    MyHeader,\n    MyMain,\n    MyFooter\n  }\n}\n</script>\n\n<style>\n\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n#app {\n  /* font-family:PingFang SC,Source Sans Pro,Helvetica Neue,Arial,Microsoft YaHei,WenQuanYi Micro Hei,sans-serif; */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  background-color: #FFFFFF;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2a458d68&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=2a458d68&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Router from 'vue-router'\n\nVue.use(Router)//Vue实例中使用Vue Router插件\n\n//定义一个数组routes，其中包含了每个路由的规则，path：路由路径，name：路由名称，compone：路由对应的组件\nconst routes = [\n  {\n    path: '/',\n    redirect: {name: 'userInfo'},//重定向\n    component: () => import('@/Layout/MyMain.vue'),\n    children: [\n      {\n        path: '/user',\n        name: 'userInfo',\n        component: () => import('@/pages/select-type.vue'),\n        //路由对应的组件，使用动态导入的方式加载'@/pages/select-type.vue'组件\n      },      \n    ]\n  },\n  {\n    path: '/exportWord2',\n    name: 'exportWord2',\n    component: () => import('@/components/export-word2.vue'),  \n  },\n  {\n    path: '/seuif97',\n    name: 'seuif97',\n    component: () => import('@/components/seuif97.vue'),  \n  },\n\n  // 404 page must be placed at the end !!!\n  // { path: '*', redirect: '/404', hidden: true }\n]\n\n//创建一个Router实例，并传入路由规则\nconst router = new Router({\n  routes\n})\n\n//导出router以供其他组件使用\nexport default router","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n\n\n// const state = {\n//   sum:0\n// }\n\n// const actions = {\n//   // add({state},data){\n//   //   setTimeout(() => {\n//   //     state.sum += data      \n//   //   }, 800);\n//   // }\n// }\n\n// const mutations = {\n//   // ADD(state,data){\n//   //   state.sum += data\n//   // }\n// }\n// const getters = {\n//   // caclSum(state) {\n//   //   return state.sum * 20\n//   // }\n// }\n\n// //创建并暴露store\n// export default new vuex.Store({\n//   actions,\n//   mutations,\n//   state,\n//   getters,\n// })\nconst store = new Vuex.Store({\n  state: {\n    chartData: null\n  },\n  mutations: {\n    setChartData(state, chartData) {\n      state.chartData = chartData\n    }\n  }\n})\n\nexport default store","import Vue from 'vue'\nimport App from '@/App.vue'\nimport router from '@/router/index'\nimport store from '@/store/index'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport JSZip from 'jszip'\nimport mammoth from 'mammoth'\n// import { Cheerio } from 'cheerio'\n//创建事件总线\nexport const bus = new Vue();\n//bus被导出为一个Vue实例，成为事件总线。它将在应用程序中的各个组件之间进行事件通信。\n\n\n\nVue.use(ElementUI)\nVue.use(JSZip)\nVue.use(mammoth)\n// Vue.use(Cheerio)\nVue.config.productionTip = false //关闭生产提提示\n\n\nnew Vue({\n  store, \n  router,\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + \"eacbf135\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"flowRecord:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkflowRecord\"] = self[\"webpackChunkflowRecord\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(21640); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticRenderFns","name","component","attrs","value","options","isDisabled","on","handleChange","props","type","Array","default","required","Boolean","methods","selectedValues","$emit","$event","exportWord","_v","staticClass","staticStyle","Data","ref","option","base64DataURLToArrayBuffer","dataURL","base64Regex","test","stringBase64","replace","binaryString","window","atob","Buffer","from","toString","len","length","bytes","Uint8Array","i","ascii","charCodeAt","buffer","ExportBriefDataDocx","tempDocxPath","data","fileName","imgSize","console","log","ImageModule","require","expressions","assign","last","angularParser","tag","expr","compile","get","scope","context","obj","index","scopePathItem","scopeList","num","$index","filters","lower","input","toLowerCase","JSZipUtils","error","content","size","width","height","opts","centered","getImage","chartId","getSize","img","tagValue","tagName","hasOwnProperty","zip","PizZip","doc","Docxtemplater","attachModule","loadZip","setOptions","parser","setData","e","message","stack","properties","out","getZip","generate","mimeType","saveAs","Object","String","chart","canvans","ctx","mounted","$nextTick","$refs","getContext","echarts","setOption","download","_this","imageDate","getDataURL","image","Image","src","onload","drawImage","base64Data","toDataURL","downloadImg","link","document","createElement","href","click","target","min_value","max_value","flows","inputs","chartData","username","project","flowtype","number","connect_phone","imglist1","imgUrl","created","bus","$on","tooltip","trigger","axisPointer","formatter","xAxis","axisLabel","fontSize","minorTick","show","minorSplitLine","yAxis","min","max","interval","legend","bottom","series","smooth","calculate","itemStyle","normal","color","yAxisIndex","components","CanvasEcharts","y","Math","pow","push","j","canvas","imgurl","_m","model","inputOne","callback","$$v","expression","inputTwo","optionsOne","selectedValue","inputThree","inputFour","CommonSelect","projectData","flowmeter_type","flowmeter_type_encode","flow_encoed","getData","watch","newVal","oldVal","handler","keys","用户名称","项目名称","安装位号","flowMeterType","流量计类型","match","find","label","immediate","getFlowmeter","then","res","dataList","rows","map","item","id","type_name","items","encode","$watch","selectedObject","parseInt","db","openDatabase","getMedius","Promise","reslove","reject","transaction","tx","executeSql","err","getSteammedius","getInstrument_type","flowmeter_type_id","getConnection_types","getConnection_standard","handleFileUpload","processData","outcmomeData","fluidData","sizeData","measurementData","lossImage","speciImage","speciData","table8Data","accessData","dimensionalData","dimenData","materialData","drawImages","ChartData","$set","updateChartData","handleSelectValueChanged","selectedOption","firstItem","secondItem","JSON","stringify","deep","directives","rawName","domProps","_q","resetSelectedValues","optionsOne1","handleChange1","selected1","optionsOne2","handleChange2","selected2","optionsOne3","handleChange3","selected3","optionsTwo","compressConvenient","handleInputChange","processData1","mediutables_id","process_viscosity","processrealviscosity","process_density","processrealdensity","selectreal","sselectreal","getMediusData","media_name","standar_density","viscosity","catch","getSteammediusData","sendDiameterToFluid","medium","targetDensity","targetDensity1","newValue","oldValue","压缩系数","Type","管道材质","combinedArray","Type1","介质名称","mach1","mach2","mach3","minFluidsion","mediumFluidsion","maxFluidsion","value1","compressionCoefficient","inputFive","inputSix","value3","optionsOnes","inputSeven","inputEight","inputNine","value2","inputTen","inputOnes","inputTwos","value5","optionsThress","inputFours","inputFives","inputSixs","optionsFour","value4","inputSevens","inputEights","inputNines","optionsFive","value7","inputTens","inputTens1","outcmomeData1","maxFluid","mediumFluid","minFluid","inputThrees","optionsOne4","dyviscosity","maxFlowSpeed","thirdItem","fourItem","fiveItem","minFluids","minFluidSpeed","maxFluidSpeed","mediumFluidSpeed","ys","ln","minjd","maxjd","mediumjd","Process","Outcome","value6","diameterValue","handleSelectChange2","handleDefaultSelection2","handleSelectChange1","handleDefaultSelection1","handleSelectChange","handleDefaultSelection","density1","parseFloat","density","isNaN","unit","output","fluidFlow","toFixed","conversionFactor","fluidFlows","temperature","pressure","recalculateCompressCoefficient","pressureInKpaAbs","compressCoefficient","calculateViscosity","Number","updateViscosity","sixItem","computed","inputEleven","inputTwelve","inputThirteen","inputFourteen","inputFifteen","inputSixteen","inputSeventeen","inputEighteen","inputNineteen","inputTwenty","recommend","getBore_informations_One","instrument_type_id","getGflowtables_bore","bore_informations_id","getLflowtables_bore","getSteamstable","instrument_id","bore_id","selectname","bore_size","fmediutables_id","lmediutables_id","smediutables_id","wdensity","rebore_id","getBoreData","sevenItem","eightItem","nineItem","tenItem","getrecommedData","instrument","getBore_informations_OneData","gmin","gmin_standardflow","gmin1","sqrt","gmin2","gmax_standardflow","MessageBox","confirm","confirmButtonText","bore","cancelButtonText","lmin","lmin_standardflow","lmin1","lmin2","lmax_standardflow","resolve","promises","inputFiveValues","inputEightValues","matchedCalibers","all","sort","a","b","minCaliber","selectedCaliber","chartImageUrl","validateInputs","drawChart","flowKgPerHour","measurementError","pressureLoss","key","arr","imageData","speciImageData","options1","options2","options3","options4","options5","value8","options6","value9","options7","value10","options8","value11","options9","value12","options10","value131","options11","value141","options12","value13","options13","value14","options14","value15","options15","value16","options16","value17","options17","value18","options18","_s","resultString","outputType1","name1","outputType2","name2","outputType3","name3","outputType4","name4","outputType5","outputType6","optionsSix","name6","outputType7","optionsSeven","name7","outputType8","optionsEight","name8","outputType9","optionsNine","name9","outputType10","optionsTen","name10","outputType11","optionsElvent","name11","outputType12","optionsSecond","name12","outputType13","optionsThirdteen","name13","outputType14","optionsFourteen","name14","getType_of_output","getFunction_type","getBody_materials","getCheckbody_materials","getNomial_diamete","getNominal_pressures","getBdy_materialtable","getGenerating_bodytable","getProbe_material","getExplosion_proof_designs","getPower_supplys","getCommunications","getCommunications_interfaces","getInstrument","getProtections","getAccurategrades","getFLmaterials","getSlipcables","getEleinfterfaces","instrument_type","inputElevens","inputTwelves","inputThirteens","inputFourteens","inputFifteens","inputSixteens","inputSeventeens","inputEighteens","inputNineteens","inputTwentys","input1","input2","input3","input4","input5","name5","getInstrumentData","getProtectionsData","getAccurategradesData","interface_name","includes","$data","newStr","isArray","electric_name","communication_name","instrument_name","输出方式","防爆方式","变送器壳体材质","连接方式","现场显示","防爆标志","供电电源","本体材质","match1","Type3","安装方式","match3","Type2","温压补偿方式","match2","Type4","match4","Type5","流量计连接标准","match5","Type6","插入式连接形式","match6","protection_name","accurategrade_name","FLmaterial_name","eleinfterface_name","slipcable_name","流量配套法兰螺栓","流量配套密封垫片","分体支架","法兰螺栓材质","垫片材质","getType_of_outputData","getBdy_materialtableData","getConnection_typesData","connection_name","getInstrument_typeData","getCheckbody_materialsData","getPower_supplysData","getCommunicationsData","getCommunications_interfacesData","getFunction_typeData","getConnection_standardData","cstandard_name","getFLmaterialsData","getSlipcablesData","getEleinfterfacesData","getBody_materialsData","getNomial_diameteData","getNominal_pressuresData","getProbe_materialData","getExplosion_proof_designsData","getGenerating_bodytableData","flowmeterType","仪表类型","仪表结构","压力等级","公称口径","表体","法兰","发生体","检测体","createflowmeter","createinstrument_type","createflowmeterimage","createconnection_types","connection_standard","clamp_structuretable","flan_structuretable","clamp_sizeimage","bore_informations","mediutablestypes","mediutables","steammedius","gflowtables","lflowtables","steamstable","type_of_output","function_type","body_materials","checkbody_materials","nomial_diameter","nominal_pressures","body_materialtable","generating_bodytable","probe_material","explosion_proof_designs","power_supplys","communications","communications_interfaces","instruments","protections","accurategrades","eleinfterfaces","slipcables","FLmaterials","addMedius","ty_name","addMediutables","dynamic_viscosity","mediutablestypes_id","addSteammediu","addFlowmeter","add_flowmeterimage","addInstrument_type","addConnection_types","addConnection_standard","addClamp_structuretable","D","D1","D400","BL","BL400","H","H400","addFlan_structuretable","BD","stL","wideL","tpL","senL","L400","FD1","CK","FC","d","n","nominal_pressures_id","addClamp_sizeimage","connection_types_id","addBore_informations","addGflowtables","gmin_select","gmax_select","addLflowtables","lmin_select","lmax_select","addSteamstable","temperatue","stflow_upperlimit","stflow_lowlimit","expandflow_upperlimit","add_Mediuclass","add_Medius","add_Steammedium","add_flowmeter","add_instrument","add_Connectionmeans","add_Connection_standards","add_Clamp_structuretables","add_Flan_structuretables","add_Clamp_sizeimages","addBore_Informations","add_gflowtables","add_Lflowtables","add_Steamstables","add_Flowmeterimage","addType_of_output","addFunction_type","addBody_materials","addCheckbody_materials","addNomial_diameter","addNominal_pressures","addBody_materialtable","addGenerating_bodytable","addProbe_material","addExplosion_proof_designs","addPower_supplys","electric_encode","addCommunications","communication_encode","addCommunications_interfaces","interface_encode","addInstruments","instrument_encode","addProtections","addAccurategrades","add_FLmaterials","addSlipcables","addEleinfterfaces","addType_of_outputs","addFunction_types","addBody_Materials","add_Checkbody_materials","addNomial_diameters","add_Nominal_pressures","addBody_materialtables","addGenerating_bodytables","addProbe_materials","add_Explosion_proof_designs","add_Power_supplys","add_Communications","add_Communications_interfaces","add_Instruments","add_Protections","add_Accurategrades","addFLmaterials","add_Slipcables","add_Eleinfterfaces","dbConnection","checkTableExists","tableExists","tableName","Fluid","Size","Chat","Loss","Specs","Draw","selectType","ElDivider","ExportWord2","Db","event","file","files","mammoth","arrayBuffer","result","html","cheerio","$","load","images","each","element","attr","alt","imageInfo","remove","slice","processedHtml","$processed","tables","table8","eq","tableData","row","cells","text","trim","split","table","key1","cell","key2","MyHeader","MyMain","MyFooter","Vue","use","Router","routes","path","redirect","children","router","Vuex","store","state","mutations","setChartData","ElementUI","JSZip","config","productionTip","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","getter","__esModule","definition","o","defineProperty","enumerable","f","chunkId","reduce","u","miniCssF","g","globalThis","Function","prop","prototype","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","clearTimeout","doneFns","parentNode","removeChild","forEach","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","p","installedChunks","installedChunkData","promise","Error","loadingEnded","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}