(function(){var t={57034:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return r}});var n=function(){var t=this,e=t._self._c;return e("div")},s=[],a={name:"MyMain"},o=a,l=i(1001),u=(0,l.Z)(o,n,s,!1,null,null,null),r=u.exports},71482:function(t,e,i){"use strict";i.d(e,{Z:function(){return r}});var n=function(){var t=this,e=t._self._c;return e("el-cascader",{attrs:{value:t.value,options:t.options,"show-all-levels":!1,disabled:t.isDisabled},on:{change:t.handleChange}})},s=[],a={props:{value:{type:Array,default:()=>[]},options:{type:Array,required:!0},isDisabled:{type:Boolean,default:!1}},methods:{handleChange(t){this.$emit("input",t)}}},o=a,l=i(1001),u=(0,l.Z)(o,n,s,!1,null,null,null),r=u.exports},33559:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return q}});var n=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"app"}},[e("el-row",[e("el-button",{attrs:{type:"primary"},on:{click:function(e){return t.exportWord()}}},[t._v("点击导出")])],1),e("div",{staticClass:"box"},[e("el-table",{staticStyle:{width:"100%"},attrs:{data:t.Data}},[e("el-table-column",{attrs:{prop:"username",label:"用户名称",width:"180"}}),e("el-table-column",{attrs:{prop:"number",label:"安装位号",width:"180"}}),e("el-table-column",{attrs:{prop:"project",label:"项目名称"}}),e("el-table-column",{attrs:{prop:"connect_phone",label:"联系人/电话"}}),e("el-table-column",{attrs:{prop:"flowtype",label:"流量计类型"}})],1)],1),e("CanvasEcharts",{ref:"canvas",attrs:{option:t.option}})],1)},s=[],a=(i(57658),i(82801),i(1439),i(87585),i(55315),i(52749),i(50456)),o=i.n(a),l=i(37276),u=i.n(l),r=i(58029),c=i.n(r),p=i(96010),m=i(12887)["lW"],d=i(81273);function h(t){const e=/^data:image\/(png|jpg|jpeg|svg|svg\+xml);base64,/;if(!e.test(t))return!1;const i=t.replace(e,"");let n;n="undefined"!==typeof window?window.atob(i):m.from(i,"base64").toString("binary");const s=n.length,a=new Uint8Array(s);for(let o=0;o<s;o++){const t=n.charCodeAt(o);a[o]=t}return a.buffer}const _=(t,e,n,s)=>{d.log(111,t,e,n,s);var a=i(31406),l=i(52749),r=i(67779),m=i(10016);function _(t){t=t.replace(/^\.$/,"this").replace(/('|‘)/g,"'").replace(/(“|”)/g,'"');const e=l.compile(t);return{get:function(t,i){let n={};const s=m(i.scopePathItem),a=i.scopeList,o=i.num;for(let e=0,l=o+1;e<l;e++)n=r(n,a[e]);return n=r(n,{$index:s}),e(t,n)}}}l.filters.lower=function(t){return t?t.toLowerCase():t},c().getBinaryContent(t,((t,i)=>{t&&d.log(t),l.filters.size=function(t,e,i){return{data:t,size:[e,i]}};let r={};r={centered:!0},r.getImage=t=>h(t),r.getSize=function(t,e,i){return s.hasOwnProperty(i)?s[i]:[600,400]};const c=new(u())(i);let m=new(o());m.attachModule(new a(r)),m.loadZip(c),m.setOptions({parser:_}),m.setData(e);try{m.render()}catch(t){const e={message:t.message,name:t.name,stack:t.stack,properties:t.properties};throw d.log("err",{error:e}),t}const f=m.getZip().generate({type:"blob",mimeType:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"});(0,p.saveAs)(f,n)}))};var f=function(){var t=this,e=t._self._c;return e("div",{staticClass:"canvas-container"},[e("canvas",{ref:"canvans",attrs:{width:t.width,height:t.height}})])},v=[],g=i(93165),y={name:"CanvasIndex",props:{option:{type:Object,required:!0},width:{type:String,default:"600"},height:{type:String,default:"300"}},data(){return{chart:null,canvans:null,ctx:null}},mounted(){this.$nextTick((()=>{this.canvans=this.$refs.canvans,this.ctx=this.canvans.getContext("2d");let t=g.S1(this.canvans);t.setOption(this.option),this.chart=t}))},methods:{download(){const t=this;let e=this.chart.getDataURL(),i=new Image;return i.src=e,i.onload=function(){t.ctx.drawImage(i,0,0);let e=t.canvans.toDataURL("image/png");return e}},downloadImg(){let t=this.chart.getDataURL(),e=new Image;e.src=t,e.onload=function(){_this.ctx.drawImage(e,0,0);let t=_this.canvans.toDataURL("image/png"),i=document.createElement("a");i.href=t,i.download="chart.png",i.click()}}}},b=y,w=i(1001),x=(0,w.Z)(b,f,v,!1,null,"81a2a1aa",null),C=x.exports,F=i(21640),S=i(81273),T={name:"exportWord",data(){return{target:100,min_value:100,max_value:1e3,flows:[200,400,500],inputs:[[0,10,20,30,40,50,60,70,80,90,100],[6.56,11.08,16.79,23.68,31.75,41,51.43,63.05,75.84,89.82,104.97]],chartData:[],option:{},Data:[{username:"中国石油化工股份有限公司西南油气分公司",project:"川西气田雷口坡组气藏开发建设项目",flowtype:"涡街流量计",number:"6780-FT-30201",connect_phone:"胡总/123456789"}],imglist1:[{imgUrl:""}]}},created(){F.$.$on("chart-data-updated",(t=>{this.chartData=t,S.log("导出接受到了数据",this.chartData)})),this.option={tooltip:{trigger:"axis",axisPointer:{type:"cross"},formatter:"{b}: {c}"},xAxis:{type:"category",name:"流量(kg/h)",axisLabel:{fontSize:9},minorTick:{show:!0},minorSplitLine:{show:!0}},yAxis:[{type:"value",name:"测量误差(%)",min:0,max:2,interval:.2,minorTick:{show:!0},minorSplitLine:{show:!0}},{type:"value",name:"压损(KPa)",min:0,max:120,interval:20}],legend:{data:["测量误差","压损"],bottom:10,formatter:function(t){return"测量误差"==t?"blue":"压损"==t&&"orange",t}},series:[{name:"测量误差",type:"line",smooth:!0,data:this.calculate(),itemStyle:{normal:{color:"blue"}}},{name:"压损",type:"line",yAxisIndex:1,data:this.inputs[3],itemStyle:{normal:{color:"orange"}}},{name:String(this.flows[0]),type:"line",data:[[this.flows[0],0],[this.flows[0],120]],itemStyle:{normal:{type:"dashed",color:"red"}}},{name:String(this.flows[1]),type:"line",data:[[this.flows[1],0],[this.flows[1],120]],itemStyle:{normal:{type:"dashed",color:"red"}}},{name:String(this.flows[0]),type:"line",data:[[this.flows[2],0],[this.flows[2],120]],itemStyle:{normal:{type:"dashed",color:"red"}}}]}},components:{CanvasEcharts:C},methods:{calculate(){const t=[];if(this.min_value==0+.1*this.max_value){for(let i=0;i<this.min_value;i+=.1*this.min_value){var e=Math.pow(i/this.min_value,-.6);t.push([i,e])}for(let e=this.min_value;e<=this.max_value;e+=.1*this.max_value)t.push([e,1])}else for(let i=0;i<=this.max_value;i+=.1*this.max_value)if(i<this.min_value){e=Math.pow(i/this.min_value,-.6);t.push([i,e])}else t.push([i,1]);return t},async exportWord(){this.imglist1[0].imgUrl=this.$refs.canvas.download();let t={username:"中国石油化工股份有限公司西南油气分公司",project:"川西气田雷口坡组气藏开发建设项目",flowtype:"涡街流量计",number:"6780-FT-30201",connect_phone:"18159300958",imglist1:this.imglist1},e={imgurl:[2e3,2e3]};_("/word.docx",t,"words",e)}}},D=T,k=(0,w.Z)(D,n,s,!1,null,"7391b074",null),q=k.exports},96465:function(t,e,i){"use strict";i.r(e),i.d(e,{default:function(){return d}});var n=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"selectType"}},[e("div",{staticClass:"all"},[t._m(0),e("div",{staticClass:"request"},[e("span",[t._v("用户名称 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"请输入用户名"},model:{value:t.inputOne,callback:function(e){t.inputOne=e},expression:"inputOne"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("项目名称 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"请输入项目名称"},model:{value:t.inputTwo,callback:function(e){t.inputTwo=e},expression:"inputTwo"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("流量计类型")]),t._v("          "),e("common-select",{staticClass:"select",attrs:{options:t.optionsOne},model:{value:t.selectedValue,callback:function(e){t.selectedValue=e},expression:"selectedValue"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("安装位号 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"请输入位号"},model:{value:t.inputThree,callback:function(e){t.inputThree=e},expression:"inputThree"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("联系人/电话")]),t._v("   "),e("el-input",{staticClass:"input",attrs:{placeholder:"请输入电话"},model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}})],1)])])},s=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"container"},[t._v("项目信息 Project")]),e("div",{staticClass:"sanjiao"})])}],a=i(71482),o=i(95966),l=i(21640),u=i(81273),r={name:"selectType",components:{CommonSelect:a.Z},props:{projectData:{type:Array,default:()=>[]}},data(){return{inputOne:"",inputTwo:"",inputThree:"",inputFour:"",selectedValue:[],optionsOne:[],flowmeter_type:"",flowmeter_type_encode:"",flow_encoed:""}},mounted(){this.getData()},watch:{selectedValue:function(t,e){t.length>0&&(this.flowmeter_type=t[0],u.log("用户选择的流量计类型是：",this.flowmeter_type))},projectData:{handler(t,e){if(u.log("接收到的projectData数据：",t),Object.keys(t).length>0){const e=t;this.inputOne=e.用户名称||"",this.inputTwo=e.项目名称||"",this.inputThree=e.安装位号||"",this.inputFour=e["联系人/电话"]||"";const i=e.流量计类型[0];u.log(i);const n=this.optionsOne.find((t=>t.label==i));u.log("新的id为：",n),n&&(this.selectedValue=[n.value])}}},immediate:!0},methods:{getData(){this.optionsOne=[],(0,o.nx)().then((t=>{let e=Array.from(t.rows);this.optionsOne=e.map((function(t){return{value:t.id,label:t.type_name}})),this.flowmeter_type_encode=e.map((function(t){return{id:t.id,encode:t.encode}}))}))}},created(){this.$watch("flowmeter_type",(function(t,e){u.log(t),l.$.$emit("flowmeterTypeChanged",t),u.log(this.flowmeter_type_encode);var i=this.flowmeter_type_encode.find((e=>e.id===parseInt(t)));i?(this.flow_encoed=i.encode,u.log("encode 的值为",this.flow_encoed)):u.error("未找到与 id 对应的 encode 值"),l.$.$emit("flowmeterEncodeTypeChanged",this.flow_encoed)}))}},c=r,p=i(1001),m=(0,p.Z)(c,n,s,!1,null,"497c9cfe",null),d=m.exports},95966:function(t,e,i){"use strict";i.d(e,{Bh:function(){return a},HR:function(){return u},Ln:function(){return r},j8:function(){return l},lm:function(){return s},nx:function(){return o}});var n=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function s(t){return new Promise(((e,i)=>{n.transaction((function(n){n.executeSql("select id from mediutablestypes where type_name=?",[t.type_name],(function(t,n){if(n.rows.length>0){var s=n.rows.item(0).id;t.executeSql("select * from mediutables where mediutablestypes_id=?",[s],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}}),(function(t,e){i(e)}))}))}))}function a(t){return new Promise(((e,i)=>{n.transaction((function(n){n.executeSql("select id from mediutablestypes where type_name=?",[t.type_name],(function(t,n){if(n.rows.length>0){var s=n.rows.item(0).id;t.executeSql("select * from steammedius where mediutablestypes_id=?",[s],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}}),(function(t,e){i(e)}))}))}))}function o(){return new Promise(((t,e)=>{n.transaction((function(i){i.executeSql("select * from flowmeter_type",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}function l(t){return new Promise(((e,i)=>{n.transaction((function(n){n.executeSql("select id,type_name,encode from instrument_type where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function u(){return new Promise(((t,e)=>{n.transaction((function(i){i.executeSql("select * from connection_types",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}function r(){return new Promise(((t,e)=>{n.transaction((function(i){i.executeSql("select id,cstandard_name from connection_standard ",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}},21640:function(t,e,i){"use strict";i.d(e,{$:function(){return bn}});var n=i(67485),s=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"app"}},[e("my-header"),e("my-main"),e("my-footer")],1)},a=[],o=function(){var t=this;t._self._c;return t._m(0)},l=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"Content"},[e("div",{staticClass:"logo"},[e("img",{attrs:{src:i(66949),width:"230px",height:"auto"}})]),e("div",{staticClass:"title"},[e("div",{staticClass:"title1"},[t._v("流 量 计 选 型")]),e("div",{staticClass:"title2"},[t._v("Flowmeter Selection")]),e("div",{staticClass:"container"},[e("span",{staticClass:"container-title1"},[t._v(" 产品")]),e("span",{staticClass:"container-title2"},[t._v(" 帮助与支持")]),e("span",{staticClass:"container-title3"},[t._v(" 关于我们")])])])])}],u={name:"MyHeader"},r=u,c=i(1001),p=(0,c.Z)(r,o,l,!1,null,null,null),m=p.exports,d=i(57034),h=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"MyFooter"}},[e("div",[e("Db")],1),e("div",{staticClass:"re1"},[e("ExportWord2")],1),e("div",{staticClass:"re"},[e("input",{attrs:{type:"file"},on:{change:t.handleFileUpload}})]),e("div",{staticClass:"part1"},[e("selectType",{attrs:{projectData:t.projectData}})],1),e("div",{staticClass:"part2"},[e("fluid",{attrs:{processData:t.processData,outcmomeData:t.outcmomeData,fluidData:t.fluidData}}),e("size",{attrs:{sizeData:t.sizeData}})],1),e("div",{staticClass:"part3"},[e("chat",{attrs:{chartData:t.chartData}}),e("loss",{attrs:{measurementData:t.measurementData,lossImage:t.lossImage}})],1),e("div",{staticClass:"part4"},[e("specs",{attrs:{speciImage:t.speciImage,speciData:t.speciData,table8Data:t.table8Data,accessData:t.accessData}})],1),e("div",{staticClass:"part5"},[e("draw",{attrs:{dimensionalData:t.dimensionalData,dimenData:t.dimenData,materialData:t.materialData,drawImages:t.drawImages}})],1)])},_=[],f=(i(57658),i(6909)),v=i(85114),g=i.n(v),y=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Chat"}},[e("div",{staticClass:"container"},[t._v("流量计图表 Chart")]),t._m(0),e("div",{staticClass:"request"},[e("span",[t._v("可测量流量范围")]),t._v("     "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小流量"},model:{value:t.ChartData.inputOne,callback:function(e){t.$set(t.ChartData,"inputOne",e)},expression:"ChartData.inputOne"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大流量"},model:{value:t.ChartData.inputTwo,callback:function(e){t.$set(t.ChartData,"inputTwo",e)},expression:"ChartData.inputTwo"}}),e("common-select",{staticClass:"select",attrs:{value:t.ChartData.value,options:t.ChartData.optionsOne}})],1),e("div",{staticClass:"request"},[e("span",[t._v("线性流量范围 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小温度"},model:{value:t.ChartData.inputThree,callback:function(e){t.$set(t.ChartData,"inputThree",e)},expression:"ChartData.inputThree"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大温度"},model:{value:t.ChartData.inputFour,callback:function(e){t.$set(t.ChartData,"inputFour",e)},expression:"ChartData.inputFour"}}),e("common-select",{staticClass:"select",attrs:{value:t.ChartData.value,options:t.ChartData.optionsOne}})],1)])},b=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"request"},[e("span",[t._v("最小")]),e("span",{staticClass:"textOne"},[t._v("最大")])])}],w=i(71482),x=i(81273),C={name:"Chat",props:{chartData:{type:Array,default:()=>[]}},components:{CommonSelect:w.Z},data(){return{ChartData:{inputOne:"",inputTwo:"",inputThree:"",inputFour:"",optionsOne:[{value:"1",label:"m3/h"},{value:"2",label:"m3/min"},{value:"3",label:"m3/s"},{value:"4",label:"L/h"},{value:"5",label:"l/min"},{value:"6",label:"l/s"},{value:"7",label:"Nm3/h"},{value:"8",label:"Nm3/min"},{value:"9",label:"Nm3/s"},{value:"10",label:"kg/h"},{value:"11",label:"kg/min"},{value:"12",label:"kg/s"},{value:"13",label:"t/h"}],value:[]}}},methods:{updateChartData(){this.ChartData={inputOne:this.ChartData.inputOne,inputTwo:this.ChartData.inputTwo,inputThree:this.ChartData.inputThree,inputFour:this.ChartData.inputFour,value:this.ChartData.value,optionsOne:this.ChartData.optionsOne},x.log("chart更新的数据",this.ChartData),bn.$emit("chart-data-updated",this.ChartData)},handleSelectValueChanged(t){x.log("接收到的流量单位值:",t),this.ChartData.value=t,x.log("传递过来的流量单位值是：",this.ChartData.value);const e=this.ChartData.optionsOne.find((e=>e.value==t));this.ChartData.value=e?[e.value]:[]}},watch:{chartData:{handler(t,e){x.log("chart接受到了新的结果输出:",t),x.log("dayinl",t);const i=t["可测量流量范围"],n=t["线性流量范围"];this.ChartData.inputOne=i["最小"],this.ChartData.inputTwo=i["最大"],this.ChartData.inputThree=n["最小"],this.ChartData.inputFour=n["最大"]}},"ChartData.inputOne"(){this.updateChartData()},"ChartData.inputTwo"(){this.updateChartData()},"ChartData.inputThree"(){this.updateChartData()},"ChartData.inputFour"(){this.updateChartData()},"ChartData.value":{handler:function(t,e){JSON.stringify(t)!==JSON.stringify(e)&&this.updateChartData()},deep:!0},"ChartData.optionsOne":{handler:function(t,e){JSON.stringify(t)!==JSON.stringify(e)&&this.updateChartData()},deep:!0}},mounted(){bn.$on("select-value-changed",this.handleSelectValueChanged)}},F=C,S=(0,c.Z)(F,y,b,!1,null,"be28c7c0",null),T=S.exports,D=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Process"}},[t._m(0),e("div",{staticClass:"request"},[e("span",{staticClass:"span2"},[t._v("介质名称 ")]),t._v("                 "),e("div",{staticClass:"option-group"},[e("label",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.selectedOption,expression:"selectedOption"}],attrs:{type:"radio",value:"气体"},domProps:{checked:t._q(t.selectedOption,"气体")},on:{change:[function(e){t.selectedOption="气体"},function(e){return t.resetSelectedValues("气体")}]}}),t._v(" 气体 ")]),e("common-select",{staticClass:"select",attrs:{options:t.optionsOne1,"is-disabled":"气体"!==t.selectedOption},on:{input:t.handleChange1},model:{value:t.selected1,callback:function(e){t.selected1=e},expression:"selected1"}})],1),e("div",{staticClass:"option-group"},[e("label",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.selectedOption,expression:"selectedOption"}],attrs:{type:"radio",value:"液体"},domProps:{checked:t._q(t.selectedOption,"液体")},on:{change:[function(e){t.selectedOption="液体"},function(e){return t.resetSelectedValues("液体")}]}}),t._v(" 液体 ")]),e("common-select",{staticClass:"select",attrs:{options:t.optionsOne2,"is-disabled":"液体"!==t.selectedOption},on:{input:t.handleChange2},model:{value:t.selected2,callback:function(e){t.selected2=e},expression:"selected2"}})],1),e("div",{staticClass:"option-group"},[e("label",[e("input",{directives:[{name:"model",rawName:"v-model",value:t.selectedOption,expression:"selectedOption"}],attrs:{type:"radio",value:"蒸汽"},domProps:{checked:t._q(t.selectedOption,"蒸汽")},on:{change:[function(e){t.selectedOption="蒸汽"},function(e){return t.resetSelectedValues("蒸汽")}]}}),t._v(" 蒸汽 ")]),e("common-select",{staticClass:"select",attrs:{options:t.optionsOne3,"is-disabled":"蒸汽"!==t.selectedOption},on:{input:t.handleChange3},model:{value:t.selected3,callback:function(e){t.selected3=e},expression:"selected3"}})],1)]),e("div",{staticClass:"request"},[e("span",[t._v("管道材质 ")]),t._v("                 "),e("common-select",{staticClass:"select",attrs:{value:t.value,options:t.optionsTwo}})],1),e("div",{staticClass:"request"},[e("span",[t._v("压缩系数 ")]),t._v("                 "),e("el-input",{staticClass:"inputOne",attrs:{placeholder:"请输入压缩系数"},model:{value:t.compressConvenient,callback:function(e){t.compressConvenient=e},expression:"compressConvenient"}})],1),e("div",{staticClass:"request1"},[e("span",{staticClass:"span1"},[t._v("管道外/内径(mm)")]),t._v("            "),e("el-input",{staticClass:"input",attrs:{placeholder:"请输入管道外/内径"},on:{input:t.handleInputChange},model:{value:t.inputTwo,callback:function(e){t.inputTwo=e},expression:"inputTwo"}})],1)])},k=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"container"},[t._v("工艺参数 Proccess parameter")]),e("div",{staticClass:"sanjiao"})])}],q=i(95966),O=i(81273),N={props:{compressConvenient:{type:String},processData1:{type:Array,default:()=>[]}},name:"Process",components:{CommonSelect:w.Z},data(){return{mediutables_id:"",process_viscosity:[],processrealviscosity:"",process_density:[],processrealdensity:"",selectreal:"",selectedOption:[],inputOne:"",inputTwo:"",value:[],selected1:[],selected2:[],selected3:[],optionsOne1:[{value:"1",label:"空气"}],optionsOne2:[],optionsOne3:[],optionsTwo:[{value:"1",label:"法兰西"},{value:"2",label:"夹持"}],sselectreal:""}},mounted(){},created(){bn.$on("inputTwentyChanged",(t=>{O.log("Process接收到的介质值为:",t),this.sselectreal=t,O.log("Process接收到的介质值为:",this.sselectreal)}))},methods:{getMediusData(){(0,q.lm)({type_name:this.selectreal}).then((t=>{let e=Array.from(t.rows);O.log("接收到的介质信息是：",e);for(let i of e)"气体"==this.selectreal?(this.optionsOne1=e.map((function(t){return{value:t.id,label:t.media_name}})),this.process_density=e.map((function(t){return{value:t.id,label:t.standar_density}})),this.process_viscosity=e.map((function(t){return{value:t.id,label:t.viscosity}}))):"液体"==this.selectreal&&(this.optionsOne2=e.map((function(t){return{value:t.id,label:t.media_name}})),this.process_density=e.map((function(t){return{value:t.id,label:t.standar_density}})),this.process_viscosity=e.map((function(t){return{value:t.id,label:t.viscosity}})))})).catch((t=>{O.error(t)}))},getSteammediusData(){(0,q.Bh)({type_name:this.selectreal}).then((t=>{O.log("选择的真正介质是；",this.selectreal),bn.$emit("medium-change",this.selectreal);let e=Array.from(t.rows);this.optionsOne3=e.map((function(t){return{value:t.id,label:t.media_name}}))})).catch((t=>{O.error(t)}))},resetSelectedValues(t){"气体"!==t&&(this.selected1=[]),"液体"!==t&&(this.selected2=[]),"蒸汽"!==t&&(this.selected3=[])},sendDiameterToFluid(){bn.$emit("update-diameter",this.inputTwo)},handleInputChange(){O.log(this.inputTwo),this.sendDiameterToFluid()},handleChange1(){const t=this.selected1;O.log("当前选中的介质名称：",t);const e=this.optionsOne1.find((t=>t.value===this.selected1[0]));O.log(this.selected1[0]),bn.$emit("selected1-changed",this.selected1[0]),O.log("当前选中的介质名称：",e.label);const i=this.process_density.find((t=>t.value===this.selected1[0]));i?(this.processrealdensity=i.label,O.log("获得的密度:",this.processrealdensity)):(O.log("未找到与选中的介质名称匹配的密度"),this.processrealdensity=""),bn.$emit("density-change",this.processrealdensity);const n=this.process_viscosity.find((t=>t.value===this.selected1[0]));n?(this.processrealviscosity=n.label,O.log("获得的粘度:",this.processrealviscosity)):(O.log("未找到与选中的介质名称匹配的粘度"),this.processrealdensity=""),bn.$emit("viscosity-change",this.processrealviscosity)},handleChange2(){const t=this.selected2;O.log("当前选中的介质名称：",t),bn.$emit("selected2-changed",this.selected2[0]);const e=this.optionsOne2.find((t=>t.value===this.selected2[0]));O.log("当前选中的介质名称：",e.label);const i=this.process_density.find((t=>t.value===this.selected2[0]));i?(this.processrealdensity=i.label,O.log("获得的密度:",this.processrealdensity)):(O.log("未找到与选中的介质名称匹配的密度"),this.processrealdensity=""),bn.$emit("density-change",this.processrealdensity);const n=this.process_viscosity.find((t=>t.value===this.selected2[0]));n?(this.processrealviscosity=n.label,O.log("获得的粘度:",this.processrealviscosity)):(O.log("未找到与选中的介质名称匹配的粘度"),this.processrealdensity=""),bn.$emit("viscosity-change",this.processrealviscosity)},handleChange3(){const t=this.selected3;O.log("当前选中的介质名称：",t),bn.$emit("selected3-changed",this.selected3[0]);const e=this.optionsOne3.find((t=>t.value===this.selected3[0]));O.log("当前选中的介质名称：",e.label)}},watch:{selectedOption(t,e){this.selectreal=t,bn.$emit("selectnameChanged",this.selectreal),""!==t&&(this.resetSelectedValues(t),this.getMediusData(),this.getSteammediusData())},processData1:{handler(t,e){if(O.log("接受到了新的项目信息:",t),O.log("此时specs到测量介质是:",this.sselectreal),Object.keys(t).length>0){this.getMediusData();const e=t;this.compressConvenient=e.压缩系数,this.inputTwo=e["管道外/内径(mm)"];const i=e.管道材质[0];O.log(i);const n=this.optionsTwo.find((t=>t.label==i));O.log("管道材质是",n),n&&(this.value=[n.value]);const s=[this.optionsOne1,this.optionsOne2,this.optionsOne3],a=e.介质名称[0];O.log(a);const o=s[0].find((t=>t.label==a));O.log("process的介质名称是",o);const l=s[1].find((t=>t.label==a)),u=s[2].find((t=>t.label==a));o?this.selected1=[o.value]:l?this.selected2=[l.value]:u&&(this.selected3=[u.value])}}},compressConvenient:{handler(t,e){O.log("接受到了压缩系数:",t)}}}},$=N,P=(0,c.Z)($,D,k,!1,null,"1b49c6b4",null),E=P.exports,A=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Fluid"}},[t._m(0),t._m(1),e("div",{staticClass:"request"},[e("span",[t._v("流量 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小流量"},on:{input:function(e){return t.minFluidsion()}},model:{value:t.inputOne,callback:function(e){t.inputOne=e},expression:"inputOne"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常流量"},on:{input:function(e){return t.mediumFluidsion()}},model:{value:t.inputTwo,callback:function(e){t.inputTwo=e},expression:"inputTwo"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大流量"},on:{input:function(e){return t.maxFluidsion()}},model:{value:t.inputThree,callback:function(e){t.inputThree=e},expression:"inputThree"}}),e("common-select",{staticClass:"select",attrs:{options:t.optionsOne},model:{value:t.value1,callback:function(e){t.value1=e},expression:"value1"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("温度 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小温度"},model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常温度"},on:{input:t.compressionCoefficient},model:{value:t.inputFive,callback:function(e){t.inputFive=e},expression:"inputFive"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大温度"},model:{value:t.inputSix,callback:function(e){t.inputSix=e},expression:"inputSix"}}),e("common-select",{staticClass:"select",attrs:{value:t.value3,options:t.optionsOnes}})],1),e("div",{staticClass:"request"},[e("span",[t._v("压力 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小压力"},model:{value:t.inputSeven,callback:function(e){t.inputSeven=e},expression:"inputSeven"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常压力"},on:{input:t.compressionCoefficient},model:{value:t.inputEight,callback:function(e){t.inputEight=e},expression:"inputEight"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大压力"},model:{value:t.inputNine,callback:function(e){t.inputNine=e},expression:"inputNine"}}),e("common-select",{staticClass:"select",attrs:{options:t.optionsTwo},model:{value:t.value2,callback:function(e){t.value2=e},expression:"value2"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("密度 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小密度"},model:{value:t.inputTen,callback:function(e){t.inputTen=e},expression:"inputTen"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常密度"},model:{value:t.inputOnes,callback:function(e){t.inputOnes=e},expression:"inputOnes"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大密度"},model:{value:t.inputTwos,callback:function(e){t.inputTwos=e},expression:"inputTwos"}}),e("common-select",{staticClass:"select",attrs:{value:t.value5,options:t.optionsThress}})],1),e("div",{staticClass:"request"},[e("span",[t._v("粘度 ")]),t._v("        "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小粘度"},model:{value:t.inputFours,callback:function(e){t.inputFours=e},expression:"inputFours"}}),e("el-input",{staticClass:"input",attrs:{id:"viscosityInput",placeholder:"正常粘度"},model:{value:t.inputFives,callback:function(e){t.inputFives=e},expression:"inputFives"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大粘度"},model:{value:t.inputSixs,callback:function(e){t.inputSixs=e},expression:"inputSixs"}}),e("common-select",{staticClass:"select",attrs:{options:t.optionsFour},model:{value:t.value4,callback:function(e){t.value4=e},expression:"value4"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("量程范围 ")]),t._v("  "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小量程"},model:{value:t.inputSevens,callback:function(e){t.inputSevens=e},expression:"inputSevens"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常量程"},model:{value:t.inputEights,callback:function(e){t.inputEights=e},expression:"inputEights"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大量程"},model:{value:t.inputNines,callback:function(e){t.inputNines=e},expression:"inputNines"}}),e("common-select",{staticClass:"select",attrs:{options:t.optionsFive},model:{value:t.value7,callback:function(e){t.value7=e},expression:"value7"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("标况密度 ")]),t._v("                                                 "),e("el-input",{staticClass:"input",attrs:{placeholder:"标况密度"},model:{value:t.inputTens,callback:function(e){t.inputTens=e},expression:"inputTens"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"单位"},model:{value:t.inputTens1,callback:function(e){t.inputTens1=e},expression:"inputTens1"}})],1),e("div",{staticClass:"child1"},[e("Process",{attrs:{processData1:t.processData1,compressConvenient:t.compressConvenient}})],1),e("div",{staticClass:"child2"},[e("Outcome",{attrs:{outcmomeData1:t.outcmomeData1,maxFluid:t.maxFluid,mediumFluid:t.mediumFluid,minFluid:t.minFluid}})],1)])},z=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"container"},[t._v("介质参数 Fluid properties")]),e("div",{staticClass:"sanjiao"})])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"request1"},[e("span",[t._v("最小")]),e("span",{staticClass:"textOne"},[t._v("正常")]),t._v("      "),e("span",{staticClass:"textTwo"},[t._v("最大")])])}],j=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Outcome"}},[t._m(0),t._m(1),e("div",{staticClass:"request"},[e("span",[t._v("流量 ")]),t._v("         "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小流量",minFluid:t.minFluid},model:{value:t.minFluid,callback:function(e){t.minFluid=e},expression:"minFluid"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常流量",mediumFluid:t.mediumFluid},model:{value:t.mediumFluid,callback:function(e){t.mediumFluid=e},expression:"mediumFluid"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大流量",maxFluid:t.maxFluid},model:{value:t.maxFluid,callback:function(e){t.maxFluid=e},expression:"maxFluid"}}),e("common-select",{staticClass:"select",attrs:{value:t.value1,options:t.optionsOne}})],1),e("div",{staticClass:"request"},[e("span",[t._v("压力损失 ")]),t._v("  "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小损失"},model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常损失"},model:{value:t.inputFive,callback:function(e){t.inputFive=e},expression:"inputFive"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大损失"},model:{value:t.inputSix,callback:function(e){t.inputSix=e},expression:"inputSix"}}),e("common-select",{staticClass:"select",attrs:{value:t.value2,options:t.optionsOne1}})],1),e("div",{staticClass:"request"},[e("span",[t._v("测量精度 ")]),t._v("  "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小精度"},model:{value:t.inputSeven,callback:function(e){t.inputSeven=e},expression:"inputSeven"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常精度"},model:{value:t.inputEight,callback:function(e){t.inputEight=e},expression:"inputEight"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大精度"},model:{value:t.inputNine,callback:function(e){t.inputNine=e},expression:"inputNine"}}),e("common-select",{staticClass:"select",attrs:{value:t.value4,options:t.optionsOne2}})],1),e("div",{staticClass:"request"},[e("span",[t._v("雷诺数 ")]),t._v("      "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小雷诺"},model:{value:t.inputTen,callback:function(e){t.inputTen=e},expression:"inputTen"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常雷诺"},model:{value:t.inputOnes,callback:function(e){t.inputOnes=e},expression:"inputOnes"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大雷诺"},model:{value:t.inputTwos,callback:function(e){t.inputTwos=e},expression:"inputTwos"}}),e("common-select",{staticClass:"select",attrs:{value:t.value,options:t.optionsOne3}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流速 ")]),t._v("         "),e("el-input",{staticClass:"input",attrs:{placeholder:"最小流速"},model:{value:t.inputThrees,callback:function(e){t.inputThrees=e},expression:"inputThrees"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"正常流速"},model:{value:t.inputFours,callback:function(e){t.inputFours=e},expression:"inputFours"}}),e("el-input",{staticClass:"input",attrs:{placeholder:"最大流速"},model:{value:t.inputFives,callback:function(e){t.inputFives=e},expression:"inputFives"}}),e("common-select",{staticClass:"select",attrs:{value:t.value3,options:t.optionsOne4}})],1)])},L=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"container"},[t._v("计算结果 Calculated results")]),e("div",{staticClass:"sanjiao"})])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"request"},[e("span",[t._v("最小")]),t._v("   "),e("span",{staticClass:"textOne"},[t._v("正常")]),t._v("      "),e("span",{staticClass:"textTwo"},[t._v("最大")])])}],B=i(81273),I={props:{maxFluid:{type:String},mediumFluid:{type:String},minFluid:{type:String},outcmomeData1:{type:Array}},name:"Outcome",components:{CommonSelect:w.Z},data(){return{value4:[],value3:[],value2:[],value1:[],inputOne:"",inputTwo:"",inputThree:"",inputFour:"",inputFive:"",inputSix:"",inputSeven:"",inputEight:"",inputNine:"",inputTen:"",inputOnes:"",inputTwos:"",inputThrees:"",inputFours:"",inputFives:"",inputSixs:"",value:[],optionsOne4:[{value:"1",label:"m/s"}],optionsOne1:[{value:"1",label:"kPa(绝）"}],optionsOne2:[{value:"1",label:"%"}],optionsOne3:[],optionsOne:[{value:"1",label:"m3/h"}],dyviscosity:""}},watch:{maxFlowSpeed:{handler(t,e){B.log("接受到了最小:",t)}},outcmomeData1:{handler(t,e){B.log("接受到了新的结果输出:",t),B.log("dayinl",t);const i=t["流量"],n=t["压力损失"],s=t["测量精度"],a=t["雷诺数"],o=t["流速"];B.log("流量数组为：",i),this.minFluid=i["最小"],this.mediumFluid=i["正常"],this.maxFluid=i["最大"],this.inputFour=n["最小"],this.inputFive=n["正常"],this.inputSix=n["最大"],this.inputSeven=s["最小"],this.inputEight=s["正常"],this.inputNine=s["最大"],this.inputTen=a["最小"],this.inputOnes=a["正常"],this.inputTwos=a["最大"],this.inputThrees=o["最小"],this.inputFours=o["正常"],this.inputFives=o["最大"]}},minFluid:{handler(t,e){B.log("接受到了最小流量:",t),this.minFluids=t,B.log("接受到了最小流量:",this.minFluids)}}},mounted(){this.value2=[this.optionsOne1[0].value],this.value1=[this.optionsOne[0].value],this.value4=[this.optionsOne2[0].value],this.value3=[this.optionsOne4[0].value],bn.$on("dyviscosityChanged",(function(t){B.log("接收到的运动粘度值为:",t),this.dyviscosity=t})),bn.$on("fluid-speeds",(t=>{this.inputThrees=t.minFluidSpeed,this.inputFours=t.maxFluidSpeed,this.inputFives=t.mediumFluidSpeed,this.inputFive=t.ys,this.inputOnes=t.ln,this.inputSeven=t.minjd,this.inputNine=t.maxjd,this.inputEight=t.mediumjd,B.log(this.inputThrees),B.log(this.inputFours),B.log(this.inputFives)}))},methods:{}},M=I,H=(0,c.Z)(M,j,L,!1,null,"0211464e",null),Z=H.exports,V=i(81273),K={name:"Fluid",props:{fluidData:{type:Array,default:()=>[]},processData:{type:Array,default:()=>[]},outcmomeData:{type:Array,default:()=>[]}},components:{CommonSelect:w.Z,Process:E,Outcome:Z},data(){return{optionsOnes:[{value:"1",label:"°C"}],medium:"",value6:[],value5:[],value3:[],value2:[],value1:[],value4:[],value7:[],inputTens:"",inputOne:"",inputTwo:"",inputThree:"",inputFour:"",inputFive:"",inputSix:"",inputSeven:"",inputEight:"",inputNine:"",inputTen:"",inputOnes:"",inputTwos:"",inputThrees:"",inputFours:"",inputFives:"",inputSixs:"",inputSevens:"",inputEights:"",inputNines:"",value:[],inputTens1:"",optionsOne:[{value:"1",label:"m3/h"},{value:"2",label:"m3/min"},{value:"3",label:"m3/s"},{value:"4",label:"L/h"},{value:"5",label:"l/min"},{value:"6",label:"l/s"},{value:"7",label:"Nm3/h"},{value:"8",label:"Nm3/min"},{value:"9",label:"Nm3/s"},{value:"10",label:"kg/h"},{value:"11",label:"kg/min"},{value:"12",label:"kg/s"},{value:"13",label:"t/h"}],optionsTwo:[{value:"1",label:"kPa(绝）"},{value:"2",label:"kPa(表）"},{value:"3",label:"MPa(绝）"},{value:"4",label:"MPa(表）"},{value:"5",label:"bar(绝）"},{value:"6",label:"bar(表）"}],optionsThress:[{value:"1",label:"kg/m3"}],optionsFour:[{value:"1",label:"cP"},{value:"2",label:"mPa·s"},{value:"3",label:"kg/m·s"}],optionsFive:[{value:"1",label:"t/h"}],compressConvenient:"",maxFluid:"",mediumFluid:"",minFluid:"",outcmomeData1:[],processData1:[],diameterValue:"",viscosity:"",dyviscosity:""}},methods:{handleSelectChange2(){},handleDefaultSelection2(){this.value4=[this.optionsFour[0].value]},handleSelectChange1(){bn.$emit("select-value-changed1",this.value2)},handleDefaultSelection1(){this.value2=[this.optionsTwo[0].value],bn.$emit("select-value-changed1",this.value2)},handleSelectChange(){bn.$emit("select-value-changed",this.value1)},handleDefaultSelection(){this.value1=[this.optionsOne[0].value],bn.$emit("select-value-changed",this.value1)},maxFluidsion(){const t=parseFloat(this.inputTens),e=parseFloat(this.inputOnes);if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputThree);V.log("输入的最大流量是",this.inputThree);const n=this.value1[0];let s;if(!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.maxFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.maxFluid=(60*t).toString(),V.log("unit == '2'时",this.minFluid)}else if("3"==n){s=i;const t=s;this.maxFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.maxFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.maxFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.maxFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.maxFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.maxFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.maxFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.maxFluid=n.toString()}}else s="无法识别的单位";V.log(this.maxFluid),bn.$emit("maxFluidChanged",this.maxFluid)}}this.$watch("value1",((i,n)=>{if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputThree);V.log("输入的最大流量是",this.inputThree);const n=this.value1[0];let s;if(!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.maxFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.maxFluid=(60*t).toString(),V.log("unit == '2'时",this.minFluid)}else if("3"==n){s=i;const t=s;this.maxFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.maxFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.maxFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.maxFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.maxFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.maxFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.maxFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.maxFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.maxFluid=n.toString()}}else s="无法识别的单位";V.log(this.maxFluid),bn.$emit("maxFluidChanged",this.maxFluid)}}}))},minFluidsion(){const t=parseFloat(this.inputTens),e=parseFloat(this.inputOnes);if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputOne);V.log("输入的最小流量是",this.inputOne);const n=this.value1[0];let s;if(!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.minFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.minFluid=(60*t).toString(),V.log("unit == '2'时",this.minFluid)}else if("3"==n){s=i;const t=s;this.minFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.minFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.minFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.minFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.minFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.minFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.minFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.minFluid=n.toString()}}else s="无法识别的单位";V.log(this.minFluid),bn.$emit("minFluidChanged",this.minFluid)}}this.$watch("value1",((i,n)=>{if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputOne);V.log("输入的最小流量是",this.inputOne);const n=this.value1[0];let s;if(V.log("流量单位变化为：",n),V.log("工况密度是",e),V.log("标准密度是",t),!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.minFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.minFluid=(60*t).toString(),V.log("unit == '2'时",this.minFluid)}else if("3"==n){s=i;const t=s;this.minFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.minFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.minFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.minFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.minFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.minFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.minFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.minFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.minFluid=n.toString()}}else s="无法识别的单位";V.log(this.minFluid),bn.$emit("minFluidChanged",this.minFluid)}}}))},mediumFluidsion(){const t=parseFloat(this.inputTens),e=parseFloat(this.inputOnes);if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputTwo);V.log("输入的正常流量是",this.inputTwo);const n=this.value1[0];let s;if(!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.mediumFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.mediumFluid=(60*t).toString(),V.log("unit == '2'时",this.mediumFluid)}else if("3"==n){s=i;const t=s;this.mediumFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.mediumFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.mediumFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.mediumFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.mediumFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.mediumFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.mediumFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.mediumFluid=n.toString()}}else s="无法识别的单位";V.log(this.maxFluid),bn.$emit("mediumFluidChanged",this.mediumFluid)}}this.$watch("value1",((i,n)=>{if(!isNaN(e)&&!isNaN(t)){let i=parseFloat(this.inputTwo);V.log("输入的正常流量是",this.inputTwo);const n=this.value1[0];let s;if(!isNaN(n)){if("1"==n||"2"==n||"3"==n||"4"==n||"5"==n||"6"===n||"7"==n||"8"==n||"9"==n)if("1"==n){s=i;const t=s;this.mediumFluid=t.toFixed(2)}else if("2"==n){s=i;const t=s;this.mediumFluid=(60*t).toString(),V.log("unit == '2'时",this.mediumFluid)}else if("3"==n){s=i;const t=s;this.mediumFluid=(3600*t).toString()}else if("4"==n){s=i;const t=s;this.mediumFluid=(.001*t).toString()}else if("5"==n){s=i;const t=s;this.mediumFluid=(.06*t).toString()}else if("6"==n){s=i;const t=s;this.mediumFluid=(3.6*t).toString()}else if("7"==n){const n=t/e;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else if("8"==n){const n=t/e*60;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else if("9"==n){const n=t/e*3600;s=i*n;const a=s,o=a;this.mediumFluid=o.toString()}else s="无法识别的单位";else if("10"==n||"11"==n||"12"==n||"13"==n){if("10"==n){s=i;const t=s/e,n=t;this.mediumFluid=n.toString()}else if("11"==n){s=i;const t=s/e*60,n=t;this.mediumFluid=n.toString()}else if("12"==n){s=i;const t=s/e*3600,n=t;this.mediumFluid=n.toString()}else if("13"==n){s=i;const t=1e3*s/e,n=t;this.mediumFluid=n.toString()}}else s="无法识别的单位";V.log(this.mediumFluid),bn.$emit("mediumFluidChanged",this.mediumFluid)}}}))},compressionCoefficient(){if("气体"==this.medium){const t=parseFloat(this.inputFive);if(isNaN(t))return;let e=parseFloat(this.inputEight);if(isNaN(e))return;let i=parseInt(this.value2);const n=()=>{let n=e;switch(i){case 2:n+=101.325;break;case 3:n*=1e3;break;case 4:n=1e3*e+101.325;break;case 5:n*=101.325;break;case 6:n=101.325*e+101.325;break;default:break}const s=n/101.325*273/(273+t);this.compressConvenient=s.toString()};n(),this.$watch("value2",((t,s)=>{t!=s&&(V.log(`压力选项值从 ${s} 变为 ${t}`),i=parseInt(t),e=parseFloat(this.inputEight),n())}))}},calculateViscosity(){this.dyviscosity=Number(this.viscosity)/Number(this.inputOnes),V.log("运动粘度为：",this.dyviscosity)},updateViscosity(t,e){if(t&&e){if("kg/m·s"==e)this.viscosity=parseFloat(t);else if("mPa·s"==e)this.viscosity=.001*parseFloat(t);else{if("cP"!=e)return void V.log("不支持的单位");this.viscosity=.001*parseFloat(t)}V.log("统一化为单位是kg/m·s后的粘度值为：",this.viscosity),this.calculateViscosity(),V.log("运动粘度为；",this.dyviscosity)}}},mounted(){this.$watch("value4",((t,e)=>{if(V.log("下拉框数值变化：",t),t&&t.length>0){const e=this.optionsFour.find((e=>e.value===t[0])).label;this.updateViscosity(this.inputFives,e)}})),this.$watch("inputOnes",((t,e)=>{this.calculateViscosity(),bn.$emit("inputOnes",t)})),this.$watch("inputFives",((t,e)=>{(t||0===t)&&this.updateViscosity(t,this.value4[0]?this.optionsFour.find((t=>t.value===this.value4[0])).label:"")})),this.value5=[this.optionsThress[0].value],this.value3=[this.optionsOnes[0].value],this.value7=[this.optionsFive[0].value],this.handleDefaultSelection2(),this.handleDefaultSelection1(),this.handleDefaultSelection(),bn.$on("density-change",(t=>{V.log("收到的密度值:",t),V.log(typeof t),V.log(typeof this.compressConvenient),V.log("density:",t),V.log("compressConvenient:",this.compressConvenient),"气体"==this.medium?(this.inputOnes=Number(t)*Number(this.compressConvenient),this.$watch("compressConvenient",((e,i)=>{this.inputOnes=Number(t)*Number(e)}))):"液体"==this.medium&&(this.inputOnes=t),this.inputTens=t,V.log(typeof this.inputOnes),V.log(this.inputOnes)})),bn.$on("viscosity-change",(t=>{V.log("收到的粘度值:",t),(0!=t||"气体"!=this.medium&&"液体"!=this.medium)&&(this.inputFives=.001*t,this.viscosity=t,V.log("已设置this.inputFives为计算结果：",this.inputFives)),V.log("最终的标准动力粘度值是：",this.viscosity),this.calculateViscosity()})),bn.$on("medium-change",(t=>{this.medium=t,V.log("接收到选择的具体介质名称后判断是否计算压缩系数",t),"气体"===t?this.inputTens1="kg/m3":"液体"===t?(this.compressConvenient="无",this.inputTens1="kg/m3"):"蒸汽"===t&&(this.compressConvenient="无")}))},watch:{dyviscosity(t){bn.$emit("dyviscosityChanged",t),V.log("监听到的运动粘度值为：",t)},value4(t,e){this.handleSelectChange2()},value1(t,e){this.handleSelectChange()},value2(t,e){this.handleSelectChange1()},processData:{handler(t,e){this.processData1=t,V.log("接受到了项目信息:",this.processData1)}},outcmomeData:{handler(t,e){this.outcmomeData1=t,V.log("接受到了输出结果信息:",this.outcmomeData1)}},fluidData:{handler(t,e){V.log("接受到了",t);const i=t["流量"],n=t["温度"],s=t["压力"],a=t["密度"],o=t["粘度"],l=t["量程范围"];this.inputOne=i["最小"],this.inputTwo=i["正常"],this.inputThree=i["最大"],this.inputFour=n["最小"],this.inputFive=n["正常"],this.inputSix=n["最大"],this.inputSeven=s["最小"],this.inputEight=s["正常"],this.inputNine=s["最大"],this.inputTen=a["最小"],this.inputOnes=a["正常"],this.inputTwos=a["最大"],this.inputFours=o["最小"],this.inputFives=o["正常"],this.inputSixs=o["最大"],this.inputSevens=l["最小"],this.inputEights=l["正常"],this.inputNines=l["最大"]}}},computed:{}},R=K,U=(0,c.Z)(R,A,z,!1,null,"07acd87c",null),W=U.exports,G=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Size"}},[t._m(0),t._m(1),e("div",{staticClass:"request"},[e("span",[t._v("仪表尺寸 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputOne,callback:function(e){t.inputOne=e},expression:"inputOne"}}),e("common-select",{staticClass:"select2",attrs:{options:t.inputTwo},model:{value:t.name,callback:function(e){t.name=e},expression:"name"}}),e("el-input",{staticClass:"input",model:{value:t.inputThree,callback:function(e){t.inputThree=e},expression:"inputThree"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最小可测量流量 ")]),t._v("               "),e("el-input",{staticClass:"input",model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}}),e("el-input",{staticClass:"input",model:{value:t.inputFive,callback:function(e){t.inputFive=e},expression:"inputFive"}}),e("el-input",{staticClass:"input",model:{value:t.inputSix,callback:function(e){t.inputSix=e},expression:"inputSix"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最大可测量流量 ")]),t._v("               "),e("el-input",{staticClass:"input",model:{value:t.inputSeven,callback:function(e){t.inputSeven=e},expression:"inputSeven"}}),e("el-input",{staticClass:"input",model:{value:t.inputEight,callback:function(e){t.inputEight=e},expression:"inputEight"}}),e("el-input",{staticClass:"input",model:{value:t.inputNine,callback:function(e){t.inputNine=e},expression:"inputNine"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最小可测量流量的流速")]),t._v("      "),e("el-input",{staticClass:"input",model:{value:t.inputTen,callback:function(e){t.inputTen=e},expression:"inputTen"}}),e("el-input",{staticClass:"input",model:{value:t.inputOnes,callback:function(e){t.inputOnes=e},expression:"inputOnes"}}),e("el-input",{staticClass:"input",model:{value:t.inputTwos,callback:function(e){t.inputTwos=e},expression:"inputTwos"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最大可测量流量的流速")]),t._v("      "),e("el-input",{staticClass:"input",model:{value:t.inputThrees,callback:function(e){t.inputThrees=e},expression:"inputThrees"}}),e("el-input",{staticClass:"input",model:{value:t.inputFours,callback:function(e){t.inputFours=e},expression:"inputFours"}}),e("el-input",{staticClass:"input",model:{value:t.inputFives,callback:function(e){t.inputFives=e},expression:"inputFives"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最小设计流量的压损 ")]),t._v("         "),e("el-input",{staticClass:"input",model:{value:t.inputSixs,callback:function(e){t.inputSixs=e},expression:"inputSixs"}}),e("el-input",{staticClass:"input",model:{value:t.inputSevens,callback:function(e){t.inputSevens=e},expression:"inputSevens"}}),e("el-input",{staticClass:"input",model:{value:t.inputEights,callback:function(e){t.inputEights=e},expression:"inputEights"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最大设计流量的压损 ")]),t._v("         "),e("el-input",{staticClass:"input",model:{value:t.inputNines,callback:function(e){t.inputNines=e},expression:"inputNines"}}),e("el-input",{staticClass:"input",model:{value:t.inputTens,callback:function(e){t.inputTens=e},expression:"inputTens"}}),e("el-input",{staticClass:"input",model:{value:t.inputEleven,callback:function(e){t.inputEleven=e},expression:"inputEleven"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最小设计流量的精度 ")]),t._v("         "),e("el-input",{staticClass:"input",model:{value:t.inputTwelve,callback:function(e){t.inputTwelve=e},expression:"inputTwelve"}}),e("el-input",{staticClass:"input",model:{value:t.inputThirteen,callback:function(e){t.inputThirteen=e},expression:"inputThirteen"}}),e("el-input",{staticClass:"input",model:{value:t.inputFourteen,callback:function(e){t.inputFourteen=e},expression:"inputFourteen"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最大设计流量的精度 ")]),t._v("         "),e("el-input",{staticClass:"input",model:{value:t.inputFifteen,callback:function(e){t.inputFifteen=e},expression:"inputFifteen"}}),e("el-input",{staticClass:"input",model:{value:t.inputSixteen,callback:function(e){t.inputSixteen=e},expression:"inputSixteen"}}),e("el-input",{staticClass:"input",model:{value:t.inputSeventeen,callback:function(e){t.inputSeventeen=e},expression:"inputSeventeen"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("正常流量的雷诺数 ")]),t._v("           "),e("el-input",{staticClass:"input",model:{value:t.inputEighteen,callback:function(e){t.inputEighteen=e},expression:"inputEighteen"}}),e("el-input",{staticClass:"input",model:{value:t.inputNineteen,callback:function(e){t.inputNineteen=e},expression:"inputNineteen"}}),e("el-input",{staticClass:"input",model:{value:t.inputTwenty,callback:function(e){t.inputTwenty=e},expression:"inputTwenty"}})],1),e("div",{staticClass:"recommend-button"},[e("el-button",{attrs:{type:"primary"},on:{click:t.recommend}},[t._v("推荐")])],1)])},J=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"container"},[t._v("多口径比对 Compare sizes")]),e("div",{staticClass:"sanjiao"})])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"request"},[e("span",{staticClass:"textOne"},[t._v("小一尺寸")]),t._v("   "),e("span",{staticClass:"textTwo"},[t._v("当前尺寸")]),t._v("  "),e("span",[t._v("大一尺寸")])])}],Q=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function X(t){return new Promise(((e,i)=>{Q.transaction((function(n){n.executeSql("select id,size from bore_informations where instrument_type_id=?",[t.instrument_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Y(t){return new Promise(((e,i)=>{Q.transaction((function(n){n.executeSql("select gmin_standardflow,gmax_standardflow,gmin_select,gmax_select from gflowtables where bore_informations_id=? and instrument_type_id=? and mediutables_id=?",[t.bore_informations_id,t.instrument_type_id,t.mediutables_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function tt(t){return new Promise(((e,i)=>{Q.transaction((function(n){n.executeSql("select lmin_standardflow,lmax_standardflow,lmin_select,lmax_select from lflowtables where bore_informations_id=? and instrument_type_id=? and mediutables_id=?",[t.bore_informations_id,t.instrument_type_id,t.mediutables_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function et(t){return new Promise(((e,i)=>{Q.transaction((function(n){n.executeSql("select size,stflow_upperlimit,stflow_lowlimit,expandflow_upperlimit from steamstable where bore_informations_id=? and instrument_type_id=? and mediutables_id=?",[t.bore_informations_id,t.instrument_type_id,t.mediutables_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}var it=i(81273),nt={name:"Size",components:{CommonSelect:w.Z},props:{sizeData:{type:Array,default:()=>[]}},data(){return{minFluid:"",maxFluid:"",mediumFluid:"",value:"",name:[],inputOne:"",inputTwo:[],inputThree:"",inputFour:"",inputFive:"",inputSix:"",inputSeven:"",inputEight:"",inputNine:"",inputTen:"",inputOnes:"",inputTwos:"",inputThrees:"",inputFours:"",inputFives:"",inputSixs:"",inputSevens:"",inputEights:"",inputNines:"",inputTens:"",inputEleven:"",inputTwelve:"",inputThirteen:"",inputFourteen:"",inputFifteen:"",inputSixteen:"",inputSeventeen:"",inputEighteen:"",inputNineteen:"",inputTwenty:"",instrument_id:"",bore_id:"",selectname:"",bore_size:"",viscosity:"",density:"",dyviscosity:"",fmediutables_id:"",lmediutables_id:"",smediutables_id:"",wdensity:"",maxFluidSpeed:"",minFluidSpeed:"",mediumFluidSpeed:"",ys:"",ln:"",minjd:"",maxjd:"",mediumjd:"",rebore_id:""}},watch:{name(t){t.length>0&&(it.log(t),this.bore_id=t[0],this.bore_size=t.label,it.log("用户选择的口径id是：",this.bore_id),this.getBoreData())},sizeData:{handler(t,e){it.log("接收到的sizeData数据：",t);const i=t["仪表尺寸"],n=t["最小可测量流量"],s=t["最大可测量流量"],a=t["最小可测量流量的流速"],o=t["最大可测量流量的流速"],l=t["最小设计流量的压损"],u=t["最大设计流量的压损"],r=t["最小设计流量的精度"],c=t["最大设计流量的精度"],p=t["正常流量的雷诺数"];it.log(n),it.log(s),this.inputOne=i["小一尺寸"],this.inputTwo=i["当前尺寸"],this.inputThree=i["大一尺寸"],this.inputFour=n["小一尺寸"],this.inputFive=n["当前尺寸"],this.inputSix=n["大一尺寸"],this.inputSeven=s["小一尺寸"],this.inputEight=s["当前尺寸"],this.inputNine=s["大一尺寸"],this.inputTen=a["小一尺寸"],this.inputOnes=a["当前尺寸"],this.inputTwos=a["大一尺寸"],this.inputThrees=o["小一尺寸"],this.inputFours=o["当前尺寸"],this.inputFives=o["大一尺寸"],this.inputSixs=l["小一尺寸"],this.inputSevens=l["当前尺寸"],this.inputEights=l["大一尺寸"],this.inputNines=u["小一尺寸"],this.inputTens=u["当前尺寸"],this.inputEleven=u["大一尺寸"],this.inputTwelve=r["小一尺寸"],this.inputThirteen=r["当前尺寸"],this.inputFourteen=r["大一尺寸"],this.inputFifteen=c["小一尺寸"],this.inputSixteen=c["当前尺寸"],this.inputSeventeen=c["大一尺寸"],this.inputEighteen=p["小一尺寸"],this.inputNineteen=p["当前尺寸"],this.inputTwenty=p["大一尺寸"]},deep:!0}},created(){bn.$on("mediumFluidChanged",(t=>{this.mediumFluid=t,it.log("Size接受到了正常流量",this.mediumFluid),this.getBoreData(),this.getrecommedData()})),bn.$on("minFluidChanged",(t=>{this.minFluid=t,it.log("Size接受到了最小流量",this.minFluid),this.getBoreData(),this.getrecommedData()})),bn.$on("maxFluidChanged",(t=>{this.maxFluid=t,it.log("Size接受到了最大流量",this.maxFluid),this.getBoreData(),this.getrecommedData()})),bn.$on("instrumentChanged",(t=>{this.instrument_id=t,it.log("接收到的 仪表类型 数据:",this.instrument_id),this.getBore_informations_OneData(),this.getBoreData(),this.getrecommedData()})),bn.$on("selectnameChanged",(t=>{this.selectname=t,it.log("接收到的 介质名称 数据:",this.selectname),this.getBoreData(),this.getrecommedData()})),bn.$on("selected2-changed",(t=>{it.log("Size收到的具体介质id:",t),this.lmediutables_id=t,this.getBoreData(),this.getrecommedData()})),bn.$on("selected1-changed",(t=>{it.log("Size收到的具体介质id:",t),this.fmediutables_id=t,this.getBoreData(),this.getrecommedData()})),bn.$on("selected3-changed",(t=>{it.log("Size收到的具体介质id:",t),this.smediutables_id=t,this.getBoreData(),this.getrecommedData()})),bn.$on("dyviscosityChanged",(t=>{it.log("Size接收到的运动粘度值为:",t),this.dyviscosity=t,this.getBoreData(),this.getrecommedData()})),bn.$on("inputOnes",(t=>{it.log("Size接收到的工况密度值为:",t),this.wdensity=t,this.getBoreData(),this.getrecommedData()}))},methods:{getBoreData(){"气体"==this.selectname?this.bore_id&&this.instrument_id&&this.fmediutables_id&&this.wdensity&&this.dyviscosity&&Y({bore_informations_id:this.bore_id,instrument_type_id:this.instrument_id,mediutables_id:this.fmediutables_id}).then((t=>{it.log("方法要用到的参数",this.bore_id);let e=Array.from(t.rows);it.log(e);const i=e[0].gmin_standardflow;it.log(i),it.log("1接收到的工况密度为：",this.wdensity);const n=Number(i)*Math.sqrt(1.205/Number(this.wdensity));it.log("第一个公式算出来的值为：",n),it.log("1接收到的运动粘度是：",this.dyviscosity);const s=Number(i)*Math.sqrt(15e-6/Number(this.dyviscosity));it.log("第二个公式算出来的值为：",s),this.inputFive=n>s?n:s,this.inputEight=e[0].gmax_standardflow,it.log(this.maxFluid),it.log(this.minFluid),this.minFluid>=this.inputFive&&this.minFluid<=this.inputEight&&this.maxFluid>=this.inputFive&&this.maxFluid<=this.inputEight?v.MessageBox.confirm("流量在可测范围内","提示",{confirmButtonText:"确定",type:"success"}).then((()=>{const t=this.inputTwo.find((t=>t.value===this.name[0]));t?(this.bore_size=t.label,it.log("获得的口径大小:",this.bore_size)):(it.log("未找到与选中的口径id相匹配的口径大小"),this.bore_size=""),it.log(typeof this.inputFive),it.log(typeof this.bore_size),this.inputOnes=Number(this.inputFive)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.inputFours=Number(this.inputEight)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,it.log(this.inputOnes),this.inputThirteen="1",this.inputSixteen="1",this.minFluidSpeed=Number(this.minFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,it.log("最小流速为：",this.minFluidSpeed),this.maxFluidSpeed=Number(this.maxFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.mediumFluidSpeed=Number(this.mediumFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.ys=1.2*Number(this.wdensity)*Number(this.mediumFluidSpeed)*Number(this.mediumFluidSpeed),it.log("压损的大小为：",this.ys),this.ln=this.mediumFluidSpeed*(this.bore_size/1e3)/Number(this.dyviscosity),this.inputNineteen=this.ln,this.inputSevens=Number(this.wdensity)*Number(this.minFluidSpeed)*Number(this.minFluidSpeed)*2.4*.5,this.inputTens=Number(this.wdensity)*Number(this.maxFluidSpeed)*Number(this.maxFluidSpeed)*2.4*.5,this.minjd="1",this.maxjd="1",this.mediumjd="1",bn.$emit("fluid-speeds",{minFluidSpeed:this.minFluidSpeed,maxFluidSpeed:this.maxFluidSpeed,mediumFluidSpeed:this.mediumFluidSpeed,ys:this.ys,ln:this.ln,minjd:this.minjd,maxjd:this.maxjd,mediumjd:this.mediumjd})})).catch((()=>{})):v.MessageBox.confirm("流量不在范围内，请重新选择口径大小","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((()=>{})).catch((()=>{}))})).catch((t=>{it.error("查询失败:",t)})):"液体"==this.selectname?this.bore_id&&this.instrument_id&&this.lmediutables_id&&this.wdensity&&this.dyviscosity&&tt({bore_informations_id:this.bore_id,instrument_type_id:this.instrument_id,mediutables_id:this.lmediutables_id}).then((t=>{it.log(t),it.log("方法要用到的参数",this.bore_id);let e=Array.from(t.rows);const i=e[0].lmin_standardflow;it.log("1接收到的工况密度为：",this.wdensity);const n=Number(i)*Math.sqrt(1.205/Number(this.wdensity));it.log("第一个公式算出来的值为：",n),it.log("1接收到的运动粘度是：",this.dyviscosity);const s=Number(i)*Math.sqrt(15e-6/Number(this.dyviscosity));it.log("第二个公式算出来的值为：",s),this.inputFive=n>s?n:s,this.inputEight=e[0].lmax_standardflow,this.minFluid>=this.inputFive&&this.minFluid<=this.inputEight&&this.maxFluid>=this.inputFive&&this.maxFluid<=this.inputEight?v.MessageBox.confirm("流量在可测范围内","提示",{confirmButtonText:"确定",type:"success"}).then((()=>{const t=this.inputTwo.find((t=>t.value===this.name[0]));t?(this.bore_size=t.label,it.log("获得的口径大小:",this.bore_size)):(it.log("未找到与选中的口径id相匹配的口径大小"),this.bore_size=""),it.log(typeof this.inputFive),it.log(typeof this.bore_size),this.inputOnes=Number(this.inputFive)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.inputFours=Number(this.inputEight)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,it.log(this.inputOnes),this.inputThirteen="1",this.inputSixteen="1",this.minFluidSpeed=Number(this.minFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,it.log("最小流速为：",this.minFluidSpeed),this.maxFluidSpeed=Number(this.maxFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.mediumFluidSpeed=Number(this.mediumFluid)/(this.bore_size/1e3*3.14*(this.bore_size/1e3)/4)/3600,this.ys=1.2*Number(this.wdensity)*Number(this.mediumFluidSpeed)*Number(this.mediumFluidSpeed),it.log("压损的大小为：",this.ys),this.ln=this.mediumFluidSpeed*(this.bore_size/1e3)/Number(this.dyviscosity),this.inputNineteen=this.ln,this.inputSevens=Number(this.wdensity)*Number(this.minFluidSpeed)*Number(this.minFluidSpeed)*2.4*.5,this.inputTens=Number(this.wdensity)*Number(this.maxFluidSpeed)*Number(this.maxFluidSpeed)*2.4*.5,this.minjd="1",this.maxjd="1",this.mediumjd="1",bn.$emit("fluid-speeds",{minFluidSpeed:this.minFluidSpeed,maxFluidSpeed:this.maxFluidSpeed,mediumFluidSpeed:this.mediumFluidSpeed,ys:this.ys,ln:this.ln,minjd:this.minjd,maxjd:this.maxjd,mediumjd:this.mediumjd})})).catch((()=>{})):v.MessageBox.confirm("流量不在范围内，请重新选择口径大小","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((()=>{})).catch((()=>{}))})).catch((t=>{it.error("查询失败:",t)})):"蒸汽"==this.selectname&&et({bore_informations_id:this.bore_id,instrument_type_id:this.instrument_id}).then((t=>{it.log(t),it.log("方法要用到的参数",this.bore_id);let e=Array.from(t.rows);it.log(e)})).catch((t=>{it.error("查询失败:",t)}))},getBore_informations_OneData(){return new Promise(((t,e)=>{this.instrument_id?(this.inputTwo=[],X({instrument_type_id:this.instrument_id}).then((e=>{let i=Array.from(e.rows);this.inputTwo=i.map((function(t){return{value:t.id,label:t.size}})),t()})).catch((t=>{it.error("查询失败:",t),e(t)}))):(it.error("flowmeter_type_id 无效或不存在"),e("flowmeter_type_id 无效或不存在"))}))},getrecommedData(){return new Promise(((t,e)=>{"气体"==this.selectname?this.rebore_id&&this.instrument_id&&this.fmediutables_id&&this.wdensity&&this.dyviscosity&&Y({bore_informations_id:this.rebore_id,instrument_type_id:this.instrument_id,mediutables_id:this.fmediutables_id}).then((e=>{it.log("方法要用到的参数",this.rebore_id);let i=Array.from(e.rows);it.log(i);const n=i[0].gmin_standardflow;it.log("1接收到的工况密度为：",this.wdensity);const s=Number(n)*Math.sqrt(1.205/Number(this.wdensity));it.log("第一个公式算出来的值为：",s),it.log("1接收到的运动粘度是：",this.dyviscosity);const a=Number(n)*Math.sqrt(15/Number(this.dyviscosity));it.log("第二个公式算出来的值为：",a),this.inputFive=s>a?s:a,this.inputEight=i[0].gmax_standardflow,it.log(this.maxFluid),it.log(this.minFluid),t()})).catch((t=>{it.error("查询失败:",t),e(t)})):"液体"==this.selectname?this.rebore_id&&this.instrument_id&&this.lmediutables_id&&this.wdensity&&this.dyviscosity&&tt({bore_informations_id:this.rebore_id,instrument_type_id:this.instrument_id,mediutables_id:this.lmediutables_id}).then((e=>{it.log(e),it.log("方法要用到的参数",this.rebore_id);let i=Array.from(e.rows);const n=i[0].lmin_standardflow;it.log("1接收到的工况密度为：",this.wdensity);const s=Number(n)*Math.sqrt(1.205/Number(this.wdensity));it.log("第一个公式算出来的值为：",s),it.log("1接收到的运动粘度是：",this.dyviscosity);const a=Number(n)*Math.sqrt(15/Number(this.dyviscosity));it.log("第二个公式算出来的值为：",a),this.inputFive=s>a?s:a,this.inputEight=i[0].lmax_standardflow,t()})).catch((t=>{it.error("查询失败:",t),e(t)})):"蒸汽"==this.selectname?et({bore_informations_id:this.rebore_id,instrument_type_id:this.instrument_id}).then((e=>{it.log(e),it.log("方法要用到的参数",this.rebore_id);let i=Array.from(e.rows);it.log(i),t()})).catch((t=>{it.error("查询失败:",t),e(t)})):t()}))},recommend(){return new Promise(((t,e)=>{this.getBore_informations_OneData().then((()=>{it.log("打印出口径id数组",this.inputTwo);const i=[],n=[],s=[],a=[];for(let t=0;t<this.inputTwo.length;t++){const e=this.inputTwo[t].value,o=this.inputTwo[t].label;this.rebore_id=e,i.push(this.getrecommedData().then((()=>{n.push(this.inputFive),s.push(this.inputEight),it.log(`rebore_id: ${e}, inputFive: ${this.inputFive}, inputEight: ${this.inputEight}`),(this.minFluid>=this.inputFive&&this.minFluid<=this.inputEight&&this.maxFluid>=this.inputFive&&this.maxFluid<=this.inputEight||this.mediumFluid>=this.inputFive&&this.mediumFluid<=this.inputEight&&this.maxFluid>=this.inputFive&&this.maxFluid<=this.inputEight)&&a.push({value:e,label:o,inputFive:this.inputFive,inputEight:this.inputEight})})))}Promise.all(i).then((()=>{it.log("符合条件的口径大小：",a),a.sort(((t,e)=>t.label-e.label));const e=a[0];this.name=[e.value],this.inputFive=e.inputFive,this.inputEight=e.inputEight,it.log("口径最小的是：",e),t({inputFive:e.inputFive,inputEight:e.inputEight,selectedCaliber:e.label})})).catch((t=>{e(t)}))})).catch((t=>{e(t)}))}))}},mounted(){bn.$on("density-change",(t=>{it.log("Size收到的密度值:",t),this.density=t}))}},st=nt,at=(0,c.Z)(st,G,J,!1,null,"0119b836",null),ot=at.exports,lt=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Loss"}},[e("div",{staticClass:"container"},[t._v("测量误差及压力损失 Measurement error & Pressure loss")]),t._m(0),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][0],callback:function(e){t.$set(t.inputs[0],0,e)},expression:"inputs[0][0]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][0],callback:function(e){t.$set(t.inputs[1],0,e)},expression:"inputs[1][0]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][0],callback:function(e){t.$set(t.inputs[2],0,e)},expression:"inputs[2][0]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][0],callback:function(e){t.$set(t.inputs[3],0,e)},expression:"inputs[3][0]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][1],callback:function(e){t.$set(t.inputs[0],1,e)},expression:"inputs[0][1]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][1],callback:function(e){t.$set(t.inputs[1],1,e)},expression:"inputs[1][1]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][1],callback:function(e){t.$set(t.inputs[2],1,e)},expression:"inputs[2][1]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][1],callback:function(e){t.$set(t.inputs[3],1,e)},expression:"inputs[3][1]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][2],callback:function(e){t.$set(t.inputs[0],2,e)},expression:"inputs[0][2]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][2],callback:function(e){t.$set(t.inputs[1],2,e)},expression:"inputs[1][2]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][2],callback:function(e){t.$set(t.inputs[2],2,e)},expression:"inputs[2][2]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][2],callback:function(e){t.$set(t.inputs[3],2,e)},expression:"inputs[3][2]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][3],callback:function(e){t.$set(t.inputs[0],3,e)},expression:"inputs[0][3]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][3],callback:function(e){t.$set(t.inputs[1],3,e)},expression:"inputs[1][3]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][3],callback:function(e){t.$set(t.inputs[2],3,e)},expression:"inputs[2][3]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][3],callback:function(e){t.$set(t.inputs[3],3,e)},expression:"inputs[3][3]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][4],callback:function(e){t.$set(t.inputs[0],4,e)},expression:"inputs[0][4]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][4],callback:function(e){t.$set(t.inputs[1],4,e)},expression:"inputs[1][4]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][4],callback:function(e){t.$set(t.inputs[2],4,e)},expression:"inputs[2][4]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][4],callback:function(e){t.$set(t.inputs[3],4,e)},expression:"inputs[3][4]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][5],callback:function(e){t.$set(t.inputs[0],5,e)},expression:"inputs[0][5]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][5],callback:function(e){t.$set(t.inputs[1],5,e)},expression:"inputs[1][5]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][5],callback:function(e){t.$set(t.inputs[2],5,e)},expression:"inputs[2][5]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][5],callback:function(e){t.$set(t.inputs[3],5,e)},expression:"inputs[3][5]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][6],callback:function(e){t.$set(t.inputs[0],6,e)},expression:"inputs[0][6]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][6],callback:function(e){t.$set(t.inputs[1],6,e)},expression:"inputs[1][6]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][6],callback:function(e){t.$set(t.inputs[2],6,e)},expression:"inputs[2][6]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][6],callback:function(e){t.$set(t.inputs[3],6,e)},expression:"inputs[3][6]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][7],callback:function(e){t.$set(t.inputs[0],7,e)},expression:"inputs[0][7]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][7],callback:function(e){t.$set(t.inputs[1],7,e)},expression:"inputs[1][7]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][7],callback:function(e){t.$set(t.inputs[2],7,e)},expression:"inputs[2][7]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][7],callback:function(e){t.$set(t.inputs[3],7,e)},expression:"inputs[3][7]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][8],callback:function(e){t.$set(t.inputs[0],8,e)},expression:"inputs[0][8]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][8],callback:function(e){t.$set(t.inputs[1],8,e)},expression:"inputs[1][8]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][8],callback:function(e){t.$set(t.inputs[2],8,e)},expression:"inputs[2][8]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][8],callback:function(e){t.$set(t.inputs[3],8,e)},expression:"inputs[3][8]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][9],callback:function(e){t.$set(t.inputs[0],9,e)},expression:"inputs[0][9]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][9],callback:function(e){t.$set(t.inputs[1],9,e)},expression:"inputs[1][9]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][9],callback:function(e){t.$set(t.inputs[2],9,e)},expression:"inputs[2][9]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][9],callback:function(e){t.$set(t.inputs[3],9,e)},expression:"inputs[3][9]"}})],1),e("div",{staticClass:"request"},[e("el-input",{staticClass:"input",model:{value:t.inputs[0][10],callback:function(e){t.$set(t.inputs[0],10,e)},expression:"inputs[0][10]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[1][10],callback:function(e){t.$set(t.inputs[1],10,e)},expression:"inputs[1][10]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[2][10],callback:function(e){t.$set(t.inputs[2],10,e)},expression:"inputs[2][10]"}}),e("el-input",{staticClass:"input",model:{value:t.inputs[3][10],callback:function(e){t.$set(t.inputs[3],10,e)},expression:"inputs[3][10]"}})],1),e("div",[e("div",[e("div",{staticClass:"image-container"},[e("div",{ref:"chart",staticClass:"echart"},[e("el-image",{staticStyle:{"max-width":"100%"},attrs:{src:t.chartImageUrl[0]}})],1)]),e("div",{staticClass:"update-button"},[e("el-button",{on:{click:t.validateInputs}},[t._v("绘制图表")])],1)])])])},ut=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"request1"},[e("span",[t._v("流量（%）")]),e("span",[t._v("流量（kg/h）")]),e("span",[t._v("测量误差（%）")]),e("span",[t._v("压力损失（KPa）")])])}],rt=i(93165),ct=i(81273),pt={name:"Loss",props:{measurementData:{type:Array,default:()=>[]},lossImage:{type:Array,default:()=>[]}},data(){return{inputs:[[null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null]],chartImageUrl:[""]}},methods:{validateInputs(){this.drawChart()},async drawChart(){const t=rt.S1(this.$refs.chart),e=(this.inputs[0],this.inputs[1]),i=this.inputs[2],n=this.inputs[3],s={tooltip:{trigger:"axis",axisPointer:{type:"cross"},formatter:"{b}: {c}"},xAxis:{type:"category",data:e,name:"流量(kg/h)",axisLabel:{fontSize:9}},yAxis:[{type:"value",name:"测量误差(%)",min:0,max:2,interval:.2},{type:"value",name:"压损(KPa)",min:0,max:120,interval:20}],legend:{data:["测量误差","压损"],bottom:10,formatter:function(t){return"测量误差"==t?"blue":"压损"==t&&"orange",t}},series:[{name:"测量误差",type:"line",data:i,itemStyle:{normal:{color:"blue"}}},{name:"压损",type:"line",yAxisIndex:1,data:n,itemStyle:{normal:{color:"orange"}}}]};t.setOption(s)}},watch:{inputs:{handler(){this.validateInputs()},deep:!0},measurementData:{handler(t,e){for(const i in t)if(t.hasOwnProperty(i)){const e=t[i];for(let t=0;t<e.length;t++){const n=e[t];"流量（%）"===i?this.$set(this.inputs[0],t,n):"流量（kg/h）"===i?this.$set(this.inputs[1],t,n):"测量误差（%）"===i?this.$set(this.inputs[2],t,n):"压力损失(KPa)"===i&&this.$set(this.inputs[3],t,n)}}ct.log("inputs:",this.inputs),this.validateInputs()},deep:!0},lossImage:{handler(t,e){ct.log("接受到了loss图片",t);const i=t;this.chartImageUrl[0]=i[0].src}}}},mt=pt,dt=(0,c.Z)(mt,lt,ut,!1,null,"f7a1f6fa",null),ht=dt.exports,_t=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Specs"}},[e("img",{staticClass:"image",attrs:{src:t.speciImageData[0],alt:""}}),e("div",{staticClass:"part1"},[e("div",{staticClass:"container"},[t._v("流量计规格 Specifications")]),e("div",{staticClass:"request"},[e("span",[t._v("流量计口径（mm） ")]),t._v("      "),e("el-input",{staticClass:"input",model:{value:t.inputOne,callback:function(e){t.inputOne=e},expression:"inputOne"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最高使用温度（℃） ")]),t._v("      "),e("common-select",{staticClass:"select2",attrs:{value:t.value1,options:t.options1}})],1),e("div",{staticClass:"request"},[e("span",[t._v("满刻度流量（4-20mA）")]),e("el-input",{staticClass:"input",model:{value:t.inputThree,callback:function(e){t.inputThree=e},expression:"inputThree"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("输出方式 ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("防爆方式 ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputFive,callback:function(e){t.inputFive=e},expression:"inputFive"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("本体材质 ")]),t._v("                    "),e("common-select",{staticClass:"select2",attrs:{value:t.value2,options:t.inputSix}})],1),e("div",{staticClass:"request"},[e("span",[t._v("检测体材质 ")]),t._v("                  "),e("common-select",{staticClass:"select2",attrs:{value:t.value3,options:t.inputSeven}})],1),e("div",{staticClass:"request"},[e("span",[t._v("变送器壳体材质 ")]),t._v("            "),e("el-input",{staticClass:"input",model:{value:t.inputEight,callback:function(e){t.inputEight=e},expression:"inputEight"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("连接方式 ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputNine,callback:function(e){t.inputNine=e},expression:"inputNine"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("安装方式 ")]),t._v("                     "),e("common-select",{staticClass:"select2",attrs:{value:t.value4,options:t.options2}})],1),e("div",{staticClass:"request"},[e("span",[t._v("温压补偿方式 ")]),t._v("               "),e("common-select",{staticClass:"select2",attrs:{value:t.value5,options:t.options3}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流量计防护等级 ")]),t._v("            "),e("common-select",{staticClass:"select2",attrs:{value:t.value6,options:t.options4}})],1),e("div",{staticClass:"request"},[e("span",[t._v("准确度等级 ")]),t._v("                   "),e("common-select",{staticClass:"select2",attrs:{value:t.value7,options:t.options5}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最高使用压力（Mpa） ")]),t._v("    "),e("common-select",{staticClass:"select2",attrs:{value:t.value8,options:t.options6}})],1),e("div",{staticClass:"request"},[e("span",[t._v("最大压力损失（Kpa） ")]),t._v("     "),e("el-input",{staticClass:"input",model:{value:t.inputSixs,callback:function(e){t.inputSixs=e},expression:"inputSixs"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("现场显示 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputSevens,callback:function(e){t.inputSevens=e},expression:"inputSevens"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("防爆标志 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputEights,callback:function(e){t.inputEights=e},expression:"inputEights"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("发生体（起旋器）材质 ")]),t._v("     "),e("common-select",{staticClass:"select2",attrs:{value:t.value9,options:t.options7}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流量计法兰材质 ")]),t._v("              "),e("common-select",{staticClass:"select2",attrs:{value:t.value10,options:t.options8}})],1),e("div",{staticClass:"request"},[e("span",[t._v("电器接口形式 ")]),t._v("                 "),e("common-select",{staticClass:"select2",attrs:{value:t.value11,options:t.options9}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流量计连接标准 ")]),t._v("              "),e("common-select",{staticClass:"select2",attrs:{value:t.value12,options:t.options10}})],1),e("div",{staticClass:"request"},[e("span",[t._v("分体电缆长度 ")]),t._v("                 "),e("common-select",{staticClass:"select2",attrs:{value:t.value131,options:t.options11}})],1),e("div",{staticClass:"request"},[e("span",[t._v("插入式连接形式 ")]),t._v("              "),e("common-select",{staticClass:"select2",attrs:{value:t.value141,options:t.options12}})],1),e("div",{staticClass:"request"},[e("span",[t._v("供电电源 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputFourteen,callback:function(e){t.inputFourteen=e},expression:"inputFourteen"}})],1)]),e("div",{staticClass:"partTwo"},[e("div",{staticClass:"containerOne"},[t._v("流量计附件 Accessories")]),e("div",{staticClass:"request"},[e("span",[t._v("流量配套法兰螺栓 ")]),t._v("          "),e("common-select",{staticClass:"select2",attrs:{value:t.value13,options:t.options13}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流量配套密封垫片 ")]),t._v("          "),e("common-select",{staticClass:"select2",attrs:{value:t.value14,options:t.options14}})],1),e("div",{staticClass:"request"},[e("span",[t._v("分体支架 ")]),t._v("                      "),e("common-select",{staticClass:"select2",attrs:{value:t.value15,options:t.options15}})],1),e("div",{staticClass:"request"},[e("span",[t._v("法兰螺栓材质 ")]),t._v("                "),e("common-select",{staticClass:"select2",attrs:{value:t.value16,options:t.options16}})],1),e("div",{staticClass:"request"},[e("span",[t._v("垫片材质 ")]),t._v("                      "),e("common-select",{staticClass:"select2",attrs:{value:t.value17,options:t.options17}})],1),e("div",{staticClass:"request"},[e("span",[t._v("分体支架材质与规格 ")]),t._v("      "),e("common-select",{staticClass:"select2",attrs:{value:t.value18,options:t.options18}})],1)]),e("div",{staticClass:"access"},[e("div",{staticClass:"container1"},[t._v("标准型涡街流量计")]),e("div",{staticClass:"model"},[t._v(t._s(t.resultString))]),e("div",{staticClass:"request1"},[e("span",[t._v("订货型号："+t._s(t.inputFifteen)+" ")]),t._v("                   "),e("el-input",{staticClass:"input",model:{value:t.inputFifteen,callback:function(e){t.inputFifteen=e},expression:"inputFifteen"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("输出方式："+t._s(t.outputType1)+" ")]),t._v("                     "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsOne1},model:{value:t.name1,callback:function(e){t.name1=e},expression:"name1"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("仪表类型："+t._s(t.outputType2)+" ")]),t._v("                      "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsTwo},model:{value:t.name2,callback:function(e){t.name2=e},expression:"name2"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("功能类型："+t._s(t.outputType3)+" ")]),t._v("                      "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsThress},model:{value:t.name3,callback:function(e){t.name3=e},expression:"name3"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("连接方式："+t._s(t.outputType4)+" ")]),t._v("                      "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsFour},model:{value:t.name4,callback:function(e){t.name4=e},expression:"name4"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("测量介质："+t._s(t.outputType5)+" ")]),t._v("                    "),e("el-input",{staticClass:"input",model:{value:t.inputTwenty,callback:function(e){t.inputTwenty=e},expression:"inputTwenty"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("表体材质："+t._s(t.outputType6)+" ")]),t._v("                     "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsSix},model:{value:t.name6,callback:function(e){t.name6=e},expression:"name6"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("公称口径："+t._s(t.outputType7)+" ")]),t._v("                      "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsSeven},model:{value:t.name7,callback:function(e){t.name7=e},expression:"name7"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("公称压力："+t._s(t.outputType8)+" ")]),t._v("                     "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsEight},model:{value:t.name8,callback:function(e){t.name8=e},expression:"name8"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("探头材质："+t._s(t.outputType9)+" ")]),t._v("                     "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsNine},model:{value:t.name9,callback:function(e){t.name9=e},expression:"name9"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("防 爆："+t._s(t.outputType10)+" ")]),t._v("                          "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsTen},model:{value:t.name10,callback:function(e){t.name10=e},expression:"name10"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("供电电源："+t._s(t.outputType11)+" ")]),t._v("                     "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsElvent},model:{value:t.name11,callback:function(e){t.name11=e},expression:"name11"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("通讯功能："+t._s(t.outputType12)+" ")]),t._v("                    "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsSecond},model:{value:t.name12,callback:function(e){t.name12=e},expression:"name12"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("通讯接口："+t._s(t.outputType13)+" ")]),t._v("                    "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsThirdteen},model:{value:t.name13,callback:function(e){t.name13=e},expression:"name13"}})],1),e("div",{staticClass:"request1"},[e("span",[t._v("仪表结构："+t._s(t.outputType14)+" ")]),t._v("                    "),e("common-select",{staticClass:"select1",attrs:{value:t.value,options:t.optionsFourteen},model:{value:t.name14,callback:function(e){t.name14=e},expression:"name14"}})],1)])])},ft=[],vt=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function gt(){return new Promise(((t,e)=>{vt.transaction((function(i){i.executeSql("select * from type_of_output",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}function yt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select id,type_name,encode from function_type where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function bt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select id,type_name,encode from body_materials where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function wt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select id,type_name from checkbody_materials where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function xt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select id,type_name,encode from nomial_diameter where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ct(){return new Promise(((t,e)=>{vt.transaction((function(i){i.executeSql("select * from nominal_pressures",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}function Ft(){return new Promise(((t,e)=>{vt.transaction((function(i){i.executeSql("select * from body_materialtable ",[],(function(e,i){t(i)}),(function(t,i){e(i.message)}))}))}))}function St(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from generating_bodytable where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Tt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from probe_material where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Dt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from explosion_proof_designs where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function kt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from power_supplys where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function qt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from communications where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ot(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from communications_interfaces where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Nt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from instruments where instrument_type_id=? and flowmeter_type_id=?",[t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function $t(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from  protections where instrument_type_id=? and flowmeter_type_id=?",[t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Pt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from accurategrades where instrument_type_id=? and flowmeter_type_id=?",[t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Et(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from FLmaterials where flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function At(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from slipcables where  flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function zt(t){return new Promise(((e,i)=>{vt.transaction((function(n){n.executeSql("select * from eleinfterfaces where  flowmeter_type_id=?",[t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}var jt=i(81273),Lt={name:"Specs",props:{speciImage:{type:Array,default:()=>[]},table8Data:{type:Array,default:()=>[]},speciData:{type:Array,default:()=>[]},accessData:{type:Array,default:()=>[]}},components:{CommonSelect:w.Z},data(){return{speciImageData:[],instrument_type:"",flowmeter_type_id:"",inputOne:"",inputTwo:"",inputThree:"",inputFour:"",inputFive:"",inputSix:[],inputSeven:[],inputEight:"铝合金",inputNine:"",inputTen:"",inputOnes:"",inputTwos:"",inputThrees:"",inputFours:"",inputFives:"",inputSixs:"",inputSevens:"",inputEights:"",inputNines:"",inputTens:"",inputEleven:"",inputTwelve:"",inputThirteen:"",inputFourteen:"",inputFifteen:"",inputSixteen:"",inputSeventeen:"",inputEighteen:"",inputNineteen:"",inputTwenty:"",inputElevens:"",inputTwelves:"",inputThirteens:"",inputFourteens:"",inputFifteens:"",inputSixteens:"",inputSeventeens:"",inputEighteens:"",inputNineteens:"",inputTwentys:"",input1:"",input2:"",input3:"",input4:"",input5:"",optionsOne1:[],name1:[],outputType1:"",optionsTwo:[],name2:[],outputType2:"",optionsThress:[],name3:[],outputType3:"",optionsFour:[],name4:[],outputType4:"",optionsFive:[],name5:[],outputType5:"",optionsSix:[],name6:[],outputType6:"",optionsSeven:[],name7:[],outputType7:"",optionsEight:[],name8:[],outputType8:"",optionsNine:[],name9:[],outputType9:"",optionsTen:[],name10:[],outputType10:"",optionsElvent:[],name11:[],outputType11:"",optionsSecond:[],name12:[],outputType12:"",optionsThirdteen:[],name13:[],outputType13:"",optionsFourteen:[],name14:[],outputType14:"",options1:[{value:"1",label:"无"},{value:"2",label:"70"},{value:"3",label:"100"},{value:"4",label:"150"},{value:"5",label:"260"},{value:"6",label:"300"},{value:"7",label:"350"}],options2:[{value:"1",label:"无"},{value:"2",label:"一体"},{value:"3",label:"分体"}],options3:[{value:"1",label:"无"},{value:"2",label:"一体"},{value:"3",label:"分体"}],options4:[],options5:[],options6:[{value:"1",label:"无"},{value:"2",label:"1.0Mpa"},{value:"3",label:"1.6Mpa"},{value:"4",label:"2.0Mpa"},{value:"5",label:"2.5Mpa"},{value:"6",label:"4.0Mpa"}],options7:[],options8:[],options9:[],options10:[],options11:[],options12:[{value:"1",label:"无"},{value:"2",label:"断流安装"},{value:"3",label:"不断流安装"}],options13:[{value:"1",label:"有"},{value:"2",label:"无"}],options14:[{value:"1",label:"有"},{value:"2",label:"无"}],options15:[{value:"1",label:"有"},{value:"2",label:"无"}],options16:[{value:"1",label:"无"},{value:"2",label:"碳钢"},{value:"3",label:"不锈钢"}],options17:[{value:"1",label:"金属缠绕垫"},{value:"2",label:"石棉垫"}],options18:[{value:"1",label:"有"},{value:"2",label:"无"}],value:[],model:"",value13:[],value14:[],value15:[],value16:[],value17:[],value18:[],value1:[],value2:[],value3:[],value4:[],value5:[],value6:[],value7:[],value8:[],value9:[],value10:[],value11:[],value12:[],value131:[],value141:[]}},watch:{inputFifteen(t,e){jt.log("监听到了变化",t,e)},name1(t){"1"==t?this.outputType1="ME":"2"==t?this.outputType1="TE":"3"==t?this.outputType1="TS":"4"==t&&(this.outputType1="TW")},name2(t){t.length>0&&(this.instrument_type=t[0],jt.log("用户选择的仪表类型是：",this.instrument_type),bn.$emit("instrumentChanged",this.instrument_type),this.getInstrumentData(),this.getProtectionsData(),this.getAccurategradesData()),this.outputType2="1"==t?"A":"2"==t?"B":"3"==t?"K":"4"==t?"F":""},name3(t){"1"==t?this.outputType3="A":"2"==t?this.outputType3="B":"3"==t&&(this.outputType3="D")},name4(t){"1"==t?this.outputType4="1":"2"==t?this.outputType4="2":"3"==t?this.outputType4="3":"4"==t&&(this.outputType4="4")},name5(t){"1"==t?this.outputType5="1":"2"==t?this.outputType5="2":"3"==t?this.outputType5="3":"4"==t&&(this.outputType5="4")},name6(t){"1"==t?this.outputType6="A":"2"==t?this.outputType6="B":"3"==t?this.outputType6="C":"4"==t?this.outputType6="D":"5"==t&&(this.outputType6="E")},name7(t){"1"==t?this.outputType7="080":"2"==t?this.outputType7="090":"3"==t?this.outputType7="085":"4"==t&&(this.outputType7="095")},name8(t){"1"==t?this.outputType8="A":"2"==t?this.outputType8="B":"3"==t?this.outputType8="C":"4"==t&&(this.outputType8="D")},name9(t){"1"==t?this.outputType9="1":"2"==t?this.outputType9="2":"3"==t?this.outputType9="3":"4"==t&&(this.outputType9="4")},name10(t){"1"==t?this.outputType10="A":"2"==t?this.outputType10="B":"3"==t?this.outputType10="C":"4"==t&&(this.outputType10="D")},name11(t){"1"==t?this.outputType11="1":"2"==t?this.outputType11="2":"3"==t?this.outputType11="3":"4"==t&&(this.outputType11="4")},name12(t){"1"==t?this.outputType12="A":"2"==t?this.outputType12="B":"3"==t?this.outputType12="C":"4"==t&&(this.outputType12="D")},name13(t){"1"==t?this.outputType13="1":"2"==t?this.outputType13="2":"3"==t?this.outputType13="3":"4"==t&&(this.outputType13="4")},name14(t){"1"==t?this.outputType14="A":"2"==t?this.outputType14="B":"3"==t?this.outputType14="C":"4"==t&&(this.outputType14="D")},speciImage:{handler(t,e){jt.log("接受到了speci图片",t);const i=t;this.speciImageData[0]=i[0].src}},table8Data:{handler(t,e){jt.log("接收到了table8Data数据",t),Ot({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsThirdteen=i.map((function(t){return{value:t.id,label:t.interface_name}})),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("通讯接口")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsThirdteen);const n=this.$data.optionsThirdteen.find((t=>t.label==i));jt.log(n),n&&(this.name13=[n.value])}else if(t.includes("测量介质")){const i=e[t];this.inputTwenty=i}else if(t.includes("输出方式")){const i=e[t];jt.log(this.$data.optionsOne1);let n=i;Array.isArray(i)&&(n=i[0]),n=n.replace(/（/g,"(").replace(/）/g,")"),jt.log("匹配之前：",n,this.$data.optionsOne1),jt.log(typeof this.$data.optionsOne1[0].label),jt.log(typeof n);const s=this.$data.optionsOne1.find((t=>t.label==n));jt.log("匹配结果：",s),s&&(jt.log("赋值给 this.name1:",s.value),this.name1=[s.value])}else if(t.includes("连接方式")){const i=e[t];jt.log(this.$data.optionsFour);let n=i;Array.isArray(i)&&(n=i[0]),n=n.replace(/（/g,"(").replace(/）/g,")"),jt.log("匹配之前：",n,this.$data.optionsOne1),jt.log(typeof this.$data.optionsFour[0].label),jt.log(typeof n);const s=this.$data.optionsFour.find((t=>t.label==n));jt.log("匹配结果：",s),s&&(jt.log("赋值给 this.name1:",s.value),this.name4=[s.value])}else if(t.includes("公称压力")){const i=e[t];jt.log(this.$data.optionsEight);let n=i;Array.isArray(i)&&(n=i[0]),n=n.replace(/（/g,"(").replace(/）/g,")"),jt.log("匹配之前：",n,this.$data.optionsEight),jt.log(typeof this.$data.optionsEight[0].label),jt.log(typeof n);const s=this.$data.optionsEight.find((t=>t.label==n));jt.log("匹配结果：",s),s&&(jt.log("赋值给 this.name1:",s.value),this.name8=[s.value])}}})).catch((t=>{jt.error("查询失败:",t)})),(0,q.j8)({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsTwo=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTwo),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("仪表类型")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsTwo);const n=this.$data.optionsTwo.find((t=>t.label==i));jt.log(n),n&&(this.name2=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),yt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsThress=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsThress),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("功能类型")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsThress);const n=this.$data.optionsThress.find((t=>t.label==i));jt.log(n),n&&(this.name3=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),bt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsSix=i.map((function(t){return{value:t.id,label:t.type_name}})),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("表体材质")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsSix);const n=this.$data.optionsSix.find((t=>t.label==i));jt.log(n),n&&(this.name6=[n.value])}}jt.log(this.optionsSix)})).catch((t=>{jt.error("查询失败:",t)})),xt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsSeven=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsSeven),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("公称口径")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsSeven);const n=this.$data.optionsSeven.find((t=>t.label==i));jt.log(n),n&&(this.name7=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),Tt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsNine=i.map((function(t){return{value:t.id,label:t.type_name}})),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("探头材质")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsNine);const n=this.$data.optionsNine.find((t=>t.label==i));jt.log(n),n&&(this.name9=[n.value])}}jt.log(this.optionsNine)})).catch((t=>{jt.error("查询失败:",t)})),Dt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsTen=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTen),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("防")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsTen);const n=this.$data.optionsTen.find((t=>t.label==i));jt.log(n),n&&(this.name10=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),kt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsElvent=i.map((function(t){return{value:t.id,label:t.electric_name}})),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("供电电源")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsElvent);const n=this.$data.optionsElvent.find((t=>t.label==i));jt.log(n),n&&(this.name11=[n.value])}}jt.log(this.optionsElvent)})).catch((t=>{jt.error("查询失败:",t)})),qt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.optionsSecond=i.map((function(t){return{value:t.id,label:t.communication_name}})),jt.log(this.optionsSecond),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("通讯功能")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsSecond);const n=this.$data.optionsSecond.find((t=>t.label==i));jt.log(n),n&&(this.name12=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),(0,q.j8)({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);jt.log(i),this.optionsTwo=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTwo),jt.log("仪表类型id为",this.instrument_type),jt.log("flid为:",this.flowmeter_type_id),Nt({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((e=>{jt.log("这是res",e);let i=Array.from(e.rows);if(jt.log("这是获得到仪表结构",i),this.optionsFourteen=i.map((function(t){return{value:t.id,label:t.instrument_name}})),jt.log("这是仪表结构数据",this.optionsFourteen),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("仪表结构")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.optionsFourteen);const n=this.$data.optionsFourteen.find((t=>t.label==i));jt.log(n),n&&(this.name14=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)}))})).catch((t=>{jt.error("查询失败:",t)}))}},speciData:{handler(t,e){if(jt.log("接受到了speciData数据",t),Object.keys(t).length>0){const e=t;this.inputOne=e["流量计口径（mm）"],this.inputThree=e["满刻度流量（4-20mA）"],this.inputFour=e.输出方式,this.inputFive=e.防爆方式,this.inputEight=e.变送器壳体材质,this.inputNine=e.连接方式,this.inputSixs=e["最大压力损失（Kpa）"],this.inputSevens=e.现场显示,this.inputEights=e.防爆标志,this.inputFourteen=e.供电电源;const i=e["最高使用温度（℃）"][0];jt.log("最高温度是",i);const n=this.options1.find((t=>t.label==i));jt.log("管道材质是",n),n&&(this.value1=[n.value]);const s=e.本体材质[0],a=this.inputSix.find((t=>t.label==s));a&&(this.value2=[a.value]);const o=e.安装方式[0];jt.log(o);const l=this.options2.find((t=>t.label==o));jt.log("检测体材质是",l),l&&(this.value4=[l.value]);const u=e.温压补偿方式[0];jt.log(u);const r=this.options3.find((t=>t.label==u));jt.log("温压补偿方式是",r),r&&(this.value5=[r.value]);const c=e["最高使用压力（Mpa）"][0];jt.log(u);const p=this.options6.find((t=>t.label==c));jt.log("检测体材质是",p),p&&(this.value8=[p.value]);const m=e.流量计连接标准[0];jt.log(u);const d=this.options10.find((t=>t.label==m));jt.log("检测体材质是",r),d&&(this.value12=[d.value]);const h=e.插入式连接形式[0];jt.log(u);const _=this.options12.find((t=>t.label==h));jt.log("检测体材质是",r),_&&(this.value141=[_.value])}(0,q.j8)({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);jt.log(i),this.optionsTwo=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTwo),jt.log("仪表类型id为",this.instrument_type),jt.log("flid为:",this.flowmeter_type_id),$t({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((e=>{let i=Array.from(e.rows);if(this.options4=i.map((function(t){return{value:t.id,label:t.protection_name}})),jt.log(this.options4),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("准确度等级")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options5);const n=this.$data.options5.find((t=>t.label==i));jt.log(n),n&&(this.value7=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),Pt({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((e=>{let i=Array.from(e.rows);if(this.options5=i.map((function(t){return{value:t.id,label:t.accurategrade_name}})),jt.log(this.options5),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("流量计防护等级")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options4);const n=this.$data.options4.find((t=>t.label==i));jt.log(n),n&&(this.value6=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)}))})).catch((t=>{jt.error("查询失败:",t)})),wt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.inputSeven=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.inputSeven),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("检测体")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.inputSeven);const n=this.$data.inputSeven.find((t=>t.label==i));jt.log(n),n&&(this.value3=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),St({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{jt.log(e);let i=Array.from(e.rows);if(jt.log(i),this.options7=i.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.options7),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("发生体")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options7);const n=this.$data.options7.find((t=>t.label==i));jt.log(n),n&&(this.value9=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),Et({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{let i=Array.from(e.rows);if(this.options8=i.map((function(t){return{value:t.id,label:t.FLmaterial_name}})),jt.log(this.options8),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("流量计法兰材质")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options8);const n=this.$data.options8.find((t=>t.label==i));jt.log(n),n&&(this.value10=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),zt({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{let i=Array.from(e.rows);if(this.options9=i.map((function(t){return{value:t.id,label:t.eleinfterface_name}})),jt.log(this.options9),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("电器接口形式")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options9);const n=this.$data.options9.find((t=>t.label==i));jt.log(n),n&&(this.value11=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)})),At({flowmeter_type_id:this.flowmeter_type_id}).then((e=>{let i=Array.from(e.rows);if(this.options11=i.map((function(t){return{value:t.id,label:t.slipcable_name}})),jt.log(this.options11),Object.keys(t).length>0){const e=t;for(let t in e)if(t.includes("分体电缆长度")){jt.log(t+":",e[t]);const i=e[t][0];jt.log(i),jt.log(this.$data.options11);const n=this.$data.options11.find((t=>t.label==i));jt.log(n),n&&(this.value131=[n.value])}}})).catch((t=>{jt.error("查询失败:",t)}))}},accessData:{handler(t,e){if(jt.log("接受到了accessData数据",t),Object.keys(t).length>0){const e=t,i=e.流量配套法兰螺栓[0];jt.log(i);const n=this.options13.find((t=>t.label==i));jt.log("流量配套法兰螺栓是",n),n&&(this.value13=[n.value]);const s=e.流量配套密封垫片[0];jt.log(s);const a=this.options14.find((t=>t.label==s));jt.log("流量配套法兰螺栓是",a),a&&(this.value14=[a.value]);const o=e.分体支架[0];jt.log(o);const l=this.options15.find((t=>t.label==o));jt.log("流量配套法兰螺栓是",l),l&&(this.value15=[l.value]);const u=e.法兰螺栓材质[0];jt.log(u);const r=this.options16.find((t=>t.label==u));jt.log("法兰螺栓材质是",r),r&&(this.value16=[r.value]);const c=e.垫片材质[0];jt.log(c);const p=this.options17.find((t=>t.label==c));p&&(this.value17=[p.value])}}}},computed:{resultString(){return`${this.inputFifteen}${this.outputType1}${this.outputType2}${this.outputType3}${this.outputType4}${this.outputType5}${this.outputType6}${this.outputType7}${this.outputType8}${this.outputType9}${this.outputType10}${this.outputType11}${this.outputType12}${this.outputType13}${this.outputType14}`}},methods:{getType_of_outputData(){this.optionsOne1=[],gt().then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsOne1=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsOne1)}))},getBdy_materialtableData(){this.inputSix=[],Ft().then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.inputSix=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.inputSix)}))},getConnection_typesData(){this.optionsFour=[],(0,q.HR)().then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsFour=e.map((function(t){return{value:t.id,label:t.connection_name}})),jt.log(this.optionsFour)}))},getInstrument_typeData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsTwo=[],(0,q.j8)({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsTwo=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTwo)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getCheckbody_materialsData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.inputSeven=[],wt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.inputSeven=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.inputSeven)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getPower_supplysData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsElvent=[],kt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsElvent=e.map((function(t){return{value:t.id,label:t.electric_name}})),jt.log(this.optionsElvent)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getCommunicationsData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsSecond=[],qt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsSecond=e.map((function(t){return{value:t.id,label:t.communication_name}})),jt.log(this.optionsSecond)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getCommunications_interfacesData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsThirdteen=[],Ot({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsThirdteen=e.map((function(t){return{value:t.id,label:t.interface_name}})),jt.log("再次获得下拉框的值",this.optionsThirdteen)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getFunction_typeData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsThress=[],yt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsThress=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsThress)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getConnection_standardData(){this.options10=[],(0,q.Ln)().then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.options10=e.map((function(t){return{value:t.id,label:t.cstandard_name}})),jt.log(this.options10)}))},getInstrumentData(){this.flowmeter_type_id&&this.instrument_type?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.optionsFourteen=[],Nt({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((t=>{let e=Array.from(t.rows);this.optionsFourteen=e.map((function(t){return{value:t.id,label:t.instrument_name}})),jt.log(this.optionsFourteen)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getProtectionsData(){this.flowmeter_type_id&&this.instrument_type?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.options4=[],$t({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((t=>{let e=Array.from(t.rows);this.options4=e.map((function(t){return{value:t.id,label:t.protection_name}})),jt.log(this.options4)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getAccurategradesData(){this.flowmeter_type_id&&this.instrument_type?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.options5=[],Pt({flowmeter_type_id:this.flowmeter_type_id,instrument_type_id:this.instrument_type}).then((t=>{let e=Array.from(t.rows);this.options5=e.map((function(t){return{value:t.id,label:t.accurategrade_name}})),jt.log(this.options5)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getFLmaterialsData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.options8=[],Et({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{let e=Array.from(t.rows);this.options8=e.map((function(t){return{value:t.id,label:t.FLmaterial_name}})),jt.log(this.options8)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getSlipcablesData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.options11=[],At({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{let e=Array.from(t.rows);this.options11=e.map((function(t){return{value:t.id,label:t.slipcable_name}})),jt.log(this.options11)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getEleinfterfacesData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),jt.log(this.instrument_type),this.options9=[],zt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{let e=Array.from(t.rows);this.options9=e.map((function(t){return{value:t.id,label:t.eleinfterface_name}})),jt.log(this.options9)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getBody_materialsData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsSix=[],bt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsSix=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsSix)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getNomial_diameteData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsSeven=[],xt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsSeven=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsSeven)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getNominal_pressuresData(){this.optionsEight=[],Ct().then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsEight=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsEight)}))},getProbe_materialData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsNine=[],Tt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsNine=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsNine)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getExplosion_proof_designsData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.optionsTen=[],Dt({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.optionsTen=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.optionsTen)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")},getGenerating_bodytableData(){this.flowmeter_type_id?(jt.log(this.flowmeter_type_id),this.options7=[],St({flowmeter_type_id:this.flowmeter_type_id}).then((t=>{jt.log(t);let e=Array.from(t.rows);jt.log(e),this.options7=e.map((function(t){return{value:t.id,label:t.type_name}})),jt.log(this.options7)})).catch((t=>{jt.error("查询失败:",t)}))):jt.error("flowmeter_type_id 无效或不存在")}},mounted(){this.getType_of_outputData(),this.getNominal_pressuresData(),this.getConnection_typesData(),this.getBdy_materialtableData(),this.getConnection_standardData(),bn.$on("selectnameChanged",(t=>{jt.log("接收到的介质为:",t),this.inputTwenty=t,jt.log("测量介质值变为：",this.inputTwenty),bn.$emit("inputTwentyChanged",this.inputTwenty)}))},created(){bn.$on("flowmeterTypeChanged",(t=>{this.flowmeter_type_id=t,jt.log("接收到的 flowmeter_type 数据:",this.flowmeter_type_id),this.getInstrument_typeData(),this.getFunction_typeData(),this.getBody_materialsData(),this.getNomial_diameteData(),this.getProbe_materialData(),this.getExplosion_proof_designsData(),this.getGenerating_bodytableData(),this.getCheckbody_materialsData(),this.getPower_supplysData(),this.getCommunicationsData(),this.getCommunications_interfacesData(),this.getFLmaterialsData(),this.getSlipcablesData(),this.getEleinfterfacesData()})),bn.$on("flowmeterEncodeTypeChanged",(t=>{this.inputFifteen=t,jt.log("接收到的 encode 数据:",this.inputFifteen)}))}},Bt=Lt,It=(0,c.Z)(Bt,_t,ft,!1,null,"656a15fc",null),Mt=It.exports,Ht=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"Draw"}},[e("img",{staticClass:"image",attrs:{src:t.imageData[0],alt:"",id:"image"}}),e("img",{staticClass:"images",attrs:{src:t.imageData[1],alt:"",id:"images"}}),e("div",{staticClass:"divery1"},[t._m(0),e("div",{staticClass:"request"},[e("span",[t._v("安装位号 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputOne,callback:function(e){t.inputOne=e},expression:"inputOne"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("流量计口径（mm） ")]),t._v("          "),e("el-input",{staticClass:"input",model:{value:t.inputTwo,callback:function(e){t.inputTwo=e},expression:"inputTwo"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("仪表类型 ")]),t._v("                        "),e("el-input",{staticClass:"input",model:{value:t.inputThree,callback:function(e){t.inputThree=e},expression:"inputThree"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("仪表结构 ")]),t._v("                        "),e("el-input",{staticClass:"input",model:{value:t.inputFour,callback:function(e){t.inputFour=e},expression:"inputFour"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("连接方式 ")]),t._v("                        "),e("el-input",{staticClass:"input",model:{value:t.inputFive,callback:function(e){t.inputFive=e},expression:"inputFive"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("压力等级 ")]),t._v("                        "),e("el-input",{staticClass:"input",model:{value:t.inputSix,callback:function(e){t.inputSix=e},expression:"inputSix"}})],1)]),e("div",{staticClass:"divery2"},[t._m(1),e("div",{staticClass:"request"},[e("span",[t._v("公称口径 ")]),t._v("                       "),e("el-input",{staticClass:"input",model:{value:t.inputSeven,callback:function(e){t.inputSeven=e},expression:"inputSeven"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("表体内径 D ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputEight,callback:function(e){t.inputEight=e},expression:"inputEight"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("标准型长度 L1 ")]),t._v("                "),e("el-input",{staticClass:"input",model:{value:t.inputNine,callback:function(e){t.inputNine=e},expression:"inputNine"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("法兰外径 D1 ")]),t._v("                    "),e("el-input",{staticClass:"input",model:{value:t.inputTen,callback:function(e){t.inputTen=e},expression:"inputTen"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("中心螺距 K ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputOnes,callback:function(e){t.inputOnes=e},expression:"inputOnes"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("法兰厚度 C ")]),t._v("                     "),e("el-input",{staticClass:"input",model:{value:t.inputTwos,callback:function(e){t.inputTwos=e},expression:"inputTwos"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("螺栓孔径 d ")]),t._v("                      "),e("el-input",{staticClass:"input",model:{value:t.inputThrees,callback:function(e){t.inputThrees=e},expression:"inputThrees"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("螺栓数量 n ")]),t._v("                      "),e("el-input",{staticClass:"input",model:{value:t.inputFours,callback:function(e){t.inputFours=e},expression:"inputFours"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("总高 H ")]),t._v("                           "),e("el-input",{staticClass:"input",model:{value:t.inputFives,callback:function(e){t.inputFives=e},expression:"inputFives"}})],1)]),e("div",{staticClass:"divery3"},[t._m(2),e("div",{staticClass:"request"},[e("span",[t._v("表体 ")]),t._v("                               "),e("el-input",{staticClass:"input",model:{value:t.inputSixs,callback:function(e){t.inputSixs=e},expression:"inputSixs"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("法兰 ")]),t._v("                                "),e("el-input",{staticClass:"input",model:{value:t.inputSevens,callback:function(e){t.inputSevens=e},expression:"inputSevens"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("发生体 ")]),t._v("                             "),e("el-input",{staticClass:"input",model:{value:t.inputEights,callback:function(e){t.inputEights=e},expression:"inputEights"}})],1),e("div",{staticClass:"request"},[e("span",[t._v("检测体 ")]),t._v("                            "),e("el-input",{staticClass:"input",model:{value:t.inputNines,callback:function(e){t.inputNines=e},expression:"inputNines"}})],1)])])},Zt=[function(){var t=this,e=t._self._c;return e("div",{staticClass:"biantilan"},[e("div",{staticClass:"container"},[t._v("结构尺寸图 Dimensional drawing")]),e("div",{staticClass:"sanjiao1"})])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"containerOne"},[t._v("流量计安装尺寸 Dimensions")]),e("div",{staticClass:"sanjiao2"})])},function(){var t=this,e=t._self._c;return e("div",{staticClass:"biaotilan"},[e("div",{staticClass:"containerOne"},[t._v("流量计材质 Material")]),e("div",{staticClass:"sanjiao3"})])}],Vt=i(81273),Kt={name:"Draw",props:{dimensionalData:{type:Array,default:()=>[]},dimenData:{type:Array,default:()=>[]},materialData:{type:Array,default:()=>[]},drawImages:{type:Array,default:()=>[]}},data(){return{inputOne:"",inputTwo:"",inputThree:"",inputFour:"",inputFive:"",inputSix:"",inputSeven:"",inputEight:"",inputNine:"",inputTen:"",inputOnes:"",inputTwos:"",inputThrees:"",inputFours:"",inputFives:"",inputSixs:"",inputSevens:"",inputEights:"",inputNines:"",imageData:[]}},watch:{dimensionalData:{handler(t,e){if(Vt.log(t),Object.keys(t).length>0){const e=t;this.inputOne=e.安装位号||"",this.inputTwo=e["流量计口径（mm）"]||"",this.inputThree=e.仪表类型||"",this.inputFour=e.仪表结构||"",this.inputFive=e.连接方式,this.inputSix=e.压力等级}}},dimenData:{handler(t,e){if(Vt.log(t),Object.keys(t).length>0){const e=t;this.inputSeven=e.公称口径||"",this.inputEight=e["表体内径D"]||"",this.inputNine=e["标准型长度L1"]||"",this.inputTen=e["法兰外径D1"]||"",this.inputOnes=e["中心螺距K"],this.inputTwos=e["法兰厚度C"],this.inputThrees=e["螺栓孔径d"],this.inputFours=e["螺栓数量n"],this.inputFives=e["总高H"]}}},materialData:{handler(t,e){if(Vt.log(t),Object.keys(t).length>0){const e=t;this.inputSixs=e.表体||"",this.inputSevens=e.法兰||"",this.inputEights=e.发生体||"",this.inputNines=e.检测体||""}}},drawImages:{handler(t,e){Vt.log("接受到了图片",t);const i=t;this.imageData[0]=i[0].src,this.imageData[1]=i[1].src,Vt.log(this.imageData[0])}}},methods:{}},Rt=Kt,Ut=(0,c.Z)(Rt,Ht,Zt,!1,null,"6a4bb186",null),Wt=Ut.exports,Gt=i(96465),Jt=i(33559),Qt=function(){var t=this,e=t._self._c;return e("div")},Xt=[],Yt=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function te(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists flowmeter_type(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(10) not null unique)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ee(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists instrument_type(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(10) not null, flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ie(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists flowmeter_image(id integer primary key  autoincrement not null,image varchar(255) not null,instrument_type_id int default null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ne(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists connection_types(id integer primary key  autoincrement not null,connection_name varchar(50) not null,encode varchar(10) not null,instrument_type_id int default null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function se(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists connection_standard(id integer primary key  autoincrement not null,cstandard_name varchar(50) not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ae(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists clamp_structuretable(id integer primary key  autoincrement not null,D int default null,D1 int default null,D400 int default null,BL int default null,BL400 int default null,H int default null,H400 int default null,bore_id int not null,instrument_type_id int default null,flowmeter_type_id not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function oe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists flan_structuretable(id integer primary key  autoincrement not null,BD int check(BD>0) default null,stL int  default null,wideL int  default null,tpL int  default null,senL int default null,L400 int default null,FD1 int check(FD1>0) default null,CK int check(CK>0) default null,FC int check(FC>0) default null,d int check(d>0) default null,n int check(n>0) default null,H int check(H>0) default null,H400 int default null,bore_id int not null,nominal_pressures_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function le(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists clamp_sizeimage(id integer primary key  autoincrement not null,name varchar(50) unique,image varchar(255) default null,connection_types_id not null,instrument_type_id int null,flowmeter_type_id not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ue(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists bore_informations(id integer primary key  autoincrement not null,size int not null,instrument_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function re(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists mediutablestypes(id integer primary key  autoincrement not null,type_name varchar(10) not null, encode varchar(3) default null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ce(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists mediutables(id integer primary key  autoincrement not null,media_name varchar(50) unique not null,standar_density decimal(10,5) default null,viscosity decimal(10,5) default null,dynamic_viscosity int default null,mediutablestypes_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function pe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists steammedius(id integer primary key  autoincrement not null,media_name varchar(50) unique not null,standar_density decimal(10,5) default null,viscosity decimal(10,5) default null,dynamic_viscosity int default null,encode varchar(3) default null,mediutablestypes_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function me(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists gflowtables (id integer primary key  autoincrement not null,size int not null,gmin_standardflow decimal(10,3),gmax_standardflow decimal(10,3),gmin_select decimal(10,3),gmax_select decimal(10,3),bore_informations_id int not null,mediutables_id int not null,instrument_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function de(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists lflowtables (id integer primary key  autoincrement not null,size int not null,lmin_standardflow decimal(10,3),lmax_standardflow decimal(10,5),lmin_select decimal(10,3),lmax_select decimal(10,3),bore_informations_id int not null,mediutables_id int not null,instrument_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function he(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists steamstable (id integer primary key  autoincrement not null,size int not null, pressure decimal(10,3),temperatue decimal(10,3),density decimal(10,3),stflow_upperlimit int,stflow_lowlimit int,expandflow_upperlimit int,bore_informations_id int not null,mediutables_id int not null,instrument_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function _e(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists type_of_output(id integer primary key  autoincrement not null,type_name varchar(50) not null unique,encode varchar(5) not null unique)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function fe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists function_type(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(5) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ve(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists body_materials(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(5) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ge(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists checkbody_materials(id integer primary key  autoincrement not null,type_name varchar(50) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ye(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists nomial_diameter(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(5) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function be(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists nominal_pressures(id integer primary key  autoincrement not null,type_name varchar(50) not null unique,encode varchar(3) not null unique)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function we(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists body_materialtable(id integer primary key  autoincrement not null,type_name varchar(50) not null unique)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function xe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists generating_bodytable(id integer primary key  autoincrement not null,type_name varchar(50) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Ce(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists probe_material(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(3) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Fe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists explosion_proof_designs(id integer primary key  autoincrement not null,type_name varchar(50) not null,encode varchar(3) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Se(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists power_supplys (id integer primary key autoincrement not null,electric_name varchar(50) not null,electric_encode varchar(3) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Te(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists communications(id integer primary key  autoincrement not null,communication_name varchar(50) not null,communication_encode varchar(3) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function De(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists communications_interfaces(id integer primary key  autoincrement not null,interface_name varchar(50) not null,interface_encode varchar(3) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function ke(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists instruments(id integer primary key  autoincrement not null,instrument_name varchar(50) not null,instrument_encode varchar(3) not null,instrument_type_id int not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function qe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists protections(id integer primary key  autoincrement not null,protection_name varchar(10) not null,instrument_type_id int not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Oe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists accurategrades(id integer primary key  autoincrement not null,accurategrade_name varchar(10) not null,instrument_type_id int not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Ne(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists eleinfterfaces(id integer primary key  autoincrement not null,eleinfterface_name varchar(10) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function $e(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists slipcables (id integer primary key autoincrement not null,slipcable_name varchar(10) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}function Pe(){return new Promise(((t,e)=>{Yt.transaction((i=>{i.executeSql("create table if not exists FLmaterials (id integer primary key autoincrement not null,FLmaterial_name varchar(20) not null,flowmeter_type_id int not null)",[],(function(e,i){t(e,i)}),(function(t,i){e(i.message)}))}))}))}var Ee=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function Ae(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into mediutablestypes (type_name,encode) values(?,?)",[t.ty_name,t.encode],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function ze(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into mediutables (media_name,standar_density,viscosity,dynamic_viscosity,mediutablestypes_id) values(?,?,?,?,?)",[t.media_name,t.standar_density,t.viscosity,t.dynamic_viscosity,t.mediutablestypes_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function je(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into steammedius (media_name,standar_density,viscosity,dynamic_viscosity,encode,mediutablestypes_id) values(?,?,?,?,?,?)",[t.media_name,t.standar_density,t.viscosity,t.dynamic_viscosity,t.encode,t.mediutablestypes_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Le(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into flowmeter_type (type_name,encode) values(?,?)",[t.ty_name,t.encode],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Be(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into flowmeter_image (image,instrument_type_id,flowmeter_type_id) values(?,?,?)",[t.image,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ie(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into instrument_type (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.ty_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Me(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into connection_types (connection_name,encode,instrument_type_id,flowmeter_type_id) values(?,?,?,?)",[t.connection_name,t.encode,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function He(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into connection_standard (cstandard_name) values(?)",[t.cstandard_name],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ze(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into clamp_structuretable (D,D1,D400,BL,BL400,H,H400,bore_id,instrument_type_id,flowmeter_type_id) values(?,?,?,?,?,?,?,?,?,?)",[t.D,t.D1,t.D400,t.BL,t.BL400,t.H,t.H400,t.bore_id,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ve(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into flan_structuretable (BD,stL,wideL,tpL,senL,L400,FD1,CK,FC,d,n,H,H400,bore_id,nominal_pressures_id) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",[t.BD,t.stL,t.wideL,t.tpL,t.senL,t.L400,t.FD1,t.CK,t.FC,t.d,t.n,t.H,t.H400,t.bore_id,t.nominal_pressures_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ke(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into clamp_sizeimage (name,image,connection_types_id,instrument_type_id,flowmeter_type_id) values(?,?,?,?,?)",[t.name,t.image,t.connection_types_id,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Re(t){return new Promise(((e,i)=>{Ee.transaction((function(n){n.executeSql("insert into bore_informations (size,instrument_type_id) values(?,?)",[t.size,t.instrument_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ue(t){return new Promise(((e,i)=>{Ee.transaction((n=>{n.executeSql("insert into gflowtables (size,gmin_standardflow,gmax_standardflow,gmin_select,gmax_select,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?)",[t.size,t.gmin_standardflow,t.gmax_standardflow,t.gmin_select,t.gmax_select,t.bore_informations_id,t.mediutables_id,t.instrument_type_id],(function(t,i){e(t,i)}),(function(t,e){i(e.message)}))}))}))}function We(t){return new Promise(((e,i)=>{Ee.transaction((n=>{n.executeSql("insert into lflowtables (size,lmin_standardflow,lmax_standardflow,lmin_select,lmax_select,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?)",[t.size,t.lmin_standardflow,t.lmax_standardflow,t.lmin_select,t.lmax_select,t.bore_informations_id,t.mediutables_id,t.instrument_type_id],(function(t,i){e(t,i)}),(function(t,e){i(e.message)}))}))}))}function Ge(t){return new Promise(((e,i)=>{Ee.transaction((n=>{n.executeSql("insert into steamstable (size,pressure,temperatue,density,stflow_upperlimit,stflow_lowlimit,expandflow_upperlimit,bore_informations_id,mediutables_id,instrument_type_id) values(?,?,?,?,?,?,?,?,?,?)",[t.size,t.pressure,t.temperatue,t.density,t.stflow_upperlimit,t.stflow_lowlimit,t.expandflow_upperlimit,t.bore_informations_id,t.mediutables_id,t.instrument_type_id],(function(t,i){e(t,i)}),(function(t,e){i(e.message)}))}))}))}function Je(){Ae({ty_name:"气体",encode:"1"}),Ae({ty_name:"液体",encode:"2"}),Ae({ty_name:"蒸汽",encode:""})}function Qe(){ze({media_name:"空气",standar_density:1.293,viscosity:0,dynamic_viscosity:14e6,mediutablestypes_id:1}),ze({media_name:"氧气",standar_density:1.4286,viscosity:0,dynamic_viscosity:1421e4,mediutablestypes_id:1}),ze({media_name:"氯气",standar_density:3.2143,viscosity:0,dynamic_viscosity:411e4,mediutablestypes_id:1}),ze({media_name:"水",standar_density:1e3,viscosity:.001,dynamic_viscosity:null,mediutablestypes_id:2}),ze({media_name:"汽油",standar_density:0,viscosity:0,dynamic_viscosity:null,mediutablestypes_id:2}),ze({media_name:"机油",standar_density:800,viscosity:.01,dynamic_viscosity:null,mediutablestypes_id:2})}function Xe(){je({media_name:"过饱和水蒸气",standar_density:0,viscosity:null,dynamic_viscosity:null,encode:"3",mediutablestypes_id:3}),je({media_name:"过热水蒸气",standar_density:0,viscosity:null,dynamic_viscosity:null,encode:"9",mediutablestypes_id:3}),je({media_name:"其他蒸汽",standar_density:0,viscosity:null,dynamic_viscosity:null,encode:"9",mediutablestypes_id:3})}function Ye(){Le({ty_name:"涡街流量计",encode:"10V"}),Le({ty_name:"旋进流量计",encode:"20VST"}),Le({ty_name:"电磁流量计",encode:"FBDC-"})}function ti(){Ie({ty_name:"压电标准型",encode:"A",flowmeter_type_id:1}),Ie({ty_name:"压电双检测体型",encode:"B",flowmeter_type_id:1}),Ie({ty_name:"压电宽量程型",encode:"K",flowmeter_type_id:1}),Ie({ty_name:"标准型",encode:"A",flowmeter_type_id:2}),Ie({ty_name:"温压补偿型",encode:"W",flowmeter_type_id:2})}function ei(){Me({connection_name:"夹持型",encode:"1",instrument_type_id:1,flowmeter_type_id:1}),Me({connection_name:"法兰连接型",encode:"1",instrument_type_id:1,flowmeter_type_id:1}),Me({connection_name:"卫生连接型",encode:"2",instrument_type_id:1,flowmeter_type_id:1}),Me({connection_name:"国际法兰连接",encode:"1",instrument_type_id:4,flowmeter_type_id:2}),Me({connection_name:"DIN法兰连接",encode:"2",instrument_type_id:4,flowmeter_type_id:2}),Me({connection_name:"ANSI法兰连接",encode:"3",instrument_type_id:4,flowmeter_type_id:2}),Me({connection_name:"法兰连接型",encode:"0",instrument_type_id:null,flowmeter_type_id:3}),Me({connection_name:"插入型",encode:"C",instrument_type_id:null,flowmeter_type_id:3})}function ii(){He({cstandard_name:"HG/T20592 PN16RF"}),He({cstandard_name:"HG/T20592 PN16MF"}),He({cstandard_name:"HG/T20592 PN20"}),He({cstandard_name:"HG/T20592 PN25"}),He({cstandard_name:"HG/T20592 PN40"}),He({cstandard_name:"HG/T20592 PN50"}),He({cstandard_name:"HG/T20592 PN150"})}function ni(){Ze({D:15,D1:85,D400:95,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:1,flowmeter_type_id:1}),Ze({D:20,D1:85,D400:100,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:2,flowmeter_type_id:1}),Ze({D:25,D1:85,D400:100,BL:65,BL400:50,H:330,H400:0,instrument_type_id:1,bore_id:3,flowmeter_type_id:1})}function si(){Ve({BD:15,stL:200,wideL:null,tpL:null,senL:null,L400:200,FD1:95,CK:65,FC:14,d:4,n:4,H:320,H400:null,bore_id:1,nominal_pressures_id:1}),Ve({BD:20,stL:200,wideL:null,tpL:null,senL:null,L400:200,FD1:105,CK:75,FC:14,d:14,n:4,H:320,H400:null,bore_id:2,nominal_pressures_id:1}),Ve({BD:25,stL:200,wideL:200,tpL:200,senL:null,L400:200,FD1:115,CK:85,FC:16,d:14,n:4,H:320,H400:null,bore_id:3,nominal_pressures_id:1})}function ai(){Ke({name:"夹持型尺寸图",image:"123445566",connection_types_id:0,instrument_type_id:1,flowmeter_type_id:1}),Ke({name:"法兰型尺寸图",image:"123445566",connection_types_id:1,instrument_type_id:1,flowmeter_type_id:1})}function oi(){Re({size:15,instrument_type_id:1}),Re({size:20,instrument_type_id:1}),Re({size:25,instrument_type_id:1}),Re({size:32,instrument_type_id:1})}function li(){Ue({size:15,gmin_standardflow:2,gmax_standardflow:40,gmin_select:2,gmax_select:100,bore_informations_id:1,mediutables_id:1,instrument_type_id:1}),Ue({size:20,gmin_standardflow:8,gmax_standardflow:60,gmin_select:8,gmax_select:120,bore_informations_id:2,mediutables_id:1,instrument_type_id:1}),Ue({size:25,gmin_standardflow:6,gmax_standardflow:50,gmin_select:6,gmax_select:60,bore_informations_id:3,mediutables_id:1,instrument_type_id:1}),Ue({size:32,gmin_standardflow:14,gmax_standardflow:100,gmin_select:14,gmax_select:150,bore_informations_id:4,mediutables_id:1,instrument_type_id:1})}function ui(){We({size:15,lmin_standardflow:1,lmax_standardflow:6,lmin_select:.8,lmax_select:8,bore_informations_id:1,mediutables_id:4,instrument_type_id:1}),We({size:20,lmin_standardflow:1.2,lmax_standardflow:8,lmin_select:1,lmax_select:15,bore_informations_id:2,mediutables_id:4,instrument_type_id:1}),We({size:25,lmin_standardflow:2,lmax_standardflow:16,lmin_select:1.6,lmax_select:18,bore_informations_id:3,mediutables_id:4,instrument_type_id:1}),We({size:32,lmin_standardflow:2.2,lmax_standardflow:20,lmin_select:1.8,lmax_select:30,bore_informations_id:4,mediutables_id:4,instrument_type_id:1})}function ri(){Ge({size:15,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:30,stflow_lowlimit:10,expandflow_upperlimit:112,bore_informations_id:1,mediutables_id:7,instrument_type_id:1}),Ge({size:20,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:102,stflow_lowlimit:13,expandflow_upperlimit:112,bore_informations_id:2,mediutables_id:7,instrument_type_id:1}),Ge({size:25,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:133,stflow_lowlimit:17,expandflow_upperlimit:175,bore_informations_id:3,mediutables_id:7,instrument_type_id:1}),Ge({size:32,pressure:300,temperatue:133.54,density:1.651,stflow_upperlimit:236,stflow_lowlimit:30,expandflow_upperlimit:287,bore_informations_id:4,mediutables_id:7,instrument_type_id:1})}function ci(){Be({image:"12334",instrument_type_id:1,flowmeter_type_id:1}),Be({image:"12334",instrument_type_id:2,flowmeter_type_id:1}),Be({image:"12334",instrument_type_id:3,flowmeter_type_id:1})}var pi=openDatabase("flowmeters","1.0","流量计选型数据库",5242880);function mi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into type_of_output (type_name,encode) values(?,?)",[t.ty_name,t.encode],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function di(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into function_type (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.type_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function hi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into body_materials (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.ty_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function _i(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into checkbody_materials (type_name,flowmeter_type_id) values(?,?)",[t.ty_name,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function fi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into nomial_diameter (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.ty_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function vi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into nominal_pressures (type_name,encode) values(?,?)",[t.ty_name,t.encode],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function gi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into body_materialtable (type_name) values(?)",[t.ty_name],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function yi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into generating_bodytable (type_name,flowmeter_type_id) values(?,?)",[t.ty_name,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function bi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into probe_material (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.ty_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function wi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into explosion_proof_designs (type_name,encode,flowmeter_type_id) values(?,?,?)",[t.ty_name,t.encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function xi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into power_supplys (electric_name,electric_encode,flowmeter_type_id) values(?,?,?)",[t.electric_name,t.electric_encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ci(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into communications (communication_name,communication_encode,flowmeter_type_id) values(?,?,?)",[t.communication_name,t.communication_encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Fi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into communications_interfaces (interface_name,interface_encode,flowmeter_type_id) values(?,?,?)",[t.interface_name,t.interface_encode,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Si(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into instruments (instrument_name,instrument_encode,instrument_type_id,flowmeter_type_id) values(?,?,?,?)",[t.instrument_name,t.instrument_encode,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ti(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into protections (protection_name,instrument_type_id,flowmeter_type_id) values(?,?,?)",[t.protection_name,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Di(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into accurategrades (accurategrade_name,instrument_type_id,flowmeter_type_id) values(?,?,?)",[t.accurategrade_name,t.instrument_type_id,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function ki(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into FLmaterials (FLmaterial_name,flowmeter_type_id) values(?,?)",[t.FLmaterial_name,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function qi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into slipcables (slipcable_name,flowmeter_type_id) values(?,?)",[t.slipcable_name,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Oi(t){return new Promise(((e,i)=>{pi.transaction((function(n){n.executeSql("insert into eleinfterfaces (eleinfterface_name,flowmeter_type_id) values(?,?)",[t.eleinfterface_name,t.flowmeter_type_id],(function(t,i){e(i)}),(function(t,e){i(e.message)}))}))}))}function Ni(){mi({ty_name:"脉冲信号",encode:"ME"}),mi({ty_name:"4-20MA(两线)",encode:"TE"}),mi({ty_name:"4-20MA(三线)",encode:"TS"}),mi({ty_name:"温压一体电流输出",encode:"TW"})}function $i(){di({type_name:"无现场显示",encode:"A",flowmeter_type_id:1}),di({type_name:"现场显示电池供电",encode:"B",flowmeter_type_id:1}),di({type_name:"现场显示，系统供电",encode:"D",flowmeter_type_id:1})}function Pi(){hi({ty_name:"304不锈钢",encode:"A",flowmeter_type_id:1}),hi({ty_name:"316L",encode:"B",flowmeter_type_id:1}),hi({ty_name:"碳钢",encode:"C",flowmeter_type_id:1})}function Ei(){_i({ty_name:"304不锈钢",flowmeter_type_id:1}),_i({ty_name:"316L",flowmeter_type_id:1})}function Ai(){fi({ty_name:"DN15",encode:"01",flowmeter_type_id:1}),fi({ty_name:"DN20",encode:"02",flowmeter_type_id:1}),fi({ty_name:"DN25",encode:"02",flowmeter_type_id:1})}function zi(){vi({ty_name:"PN16",encode:"A",flowmeter_type_id:1}),vi({ty_name:"PN20 Class150",encode:"B",flowmeter_type_id:1}),vi({ty_name:"PN25",encode:"C",flowmeter_type_id:1}),vi({ty_name:"PN40",encode:"D",flowmeter_type_id:1})}function ji(){gi({ty_name:"316L不锈钢"})}function Li(){yi({ty_name:"316L不锈钢",flowmeter_type_id:1}),yi({ty_name:"304不锈钢",flowmeter_type_id:1}),yi({ty_name:"铝合金",flowmeter_type_id:1})}function Bi(){bi({ty_name:"304不锈钢",encode:"1",flowmeter_type_id:1}),bi({ty_name:"哈C",encode:"2",flowmeter_type_id:1}),bi({ty_name:"316L不锈钢",encode:"9",flowmeter_type_id:1})}function Ii(){wi({ty_name:"非防爆型",encode:"A",flowmeter_type_id:1}),wi({ty_name:"本案防爆型",encode:"B",flowmeter_type_id:1}),wi({ty_name:"隔爆型",encode:"G",flowmeter_type_id:1})}function Mi(){xi({electric_name:"DC12V",electric_encode:"1",flowmeter_type_id:1}),xi({electric_name:"DV24V",electric_encode:"2",flowmeter_type_id:1}),xi({electric_name:"12V DC",electric_encode:"1",flowmeter_type_id:2})}function Hi(){Ci({communication_name:"无通讯协议",communication_encode:"A",flowmeter_type_id:1}),Ci({communication_name:"HART协议",communication_encode:"H",flowmeter_type_id:1}),Ci({communication_name:"MODBUS RTU",communication_encode:"B",flowmeter_type_id:1})}function Zi(){Fi({interface_name:"无通讯接口",interface_encode:"0",flowmeter_type_id:1}),Fi({interface_name:"无线",interface_encode:"1",flowmeter_type_id:1}),Fi({interface_name:"RS 485",interface_encode:"2",flowmeter_type_id:1})}function Vi(){Si({instrument_name:"一体型",instrument_encode:"A",instrument_type_id:1,flowmeter_type_id:1}),Si({instrument_name:"分体型",instrument_encode:"R",instrument_type_id:1,flowmeter_type_id:1}),Si({instrument_name:"潜水型(IP68)",instrument_encode:"Q",instrument_type_id:1,flowmeter_type_id:1})}function Ki(){Ti({protection_name:"IP65",instrument_type_id:1,flowmeter_type_id:1}),Ti({protection_name:"IP66",instrument_type_id:1,flowmeter_type_id:1}),Ti({protection_name:"IP67",instrument_type_id:1,flowmeter_type_id:1})}function Ri(){Di({accurategrade_name:"0.5级",instrument_type_id:1,flowmeter_type_id:1}),Di({accurategrade_name:"1级",instrument_type_id:1,flowmeter_type_id:1}),Di({accurategrade_name:"1.5级",instrument_type_id:1,flowmeter_type_id:1})}function Ui(){ki({FLmaterial_name:"无",flowmeter_type_id:1}),ki({FLmaterial_name:"碳钢",flowmeter_type_id:1}),ki({FLmaterial_name:"304不锈钢",flowmeter_type_id:1})}function Wi(){qi({slipcable_name:"无",flowmeter_type_id:1}),qi({slipcable_name:"5米",flowmeter_type_id:1}),qi({slipcable_name:"15米",flowmeter_type_id:1})}function Gi(){Oi({eleinfterface_name:"无",flowmeter_type_id:1}),Oi({eleinfterface_name:"M20X1.5",flowmeter_type_id:1}),Oi({eleinfterface_name:"1/2NPT",flowmeter_type_id:1})}var Ji=i(81273),Qi={name:"Db",data(){return{dbConnection:null}},created(){this.dbConnection=window.openDatabase("flowmeters","1.0","流量计选型数据库",5242880),this.checkTableExists("mediutablestypes").then((t=>{t||(Ji.log("表不存在"),re().then(((t,e)=>{Ji.log("表创建成功",t,e),Je(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("mediutables").then((t=>{t||(Ji.log("表不存在"),ce().then(((t,e)=>{Ji.log("表创建成功",t,e),Qe(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("steammedius").then((t=>{t||(Ji.log("表不存在"),pe().then(((t,e)=>{Ji.log("表创建成功",t,e),Xe(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("flowmeter_type").then((t=>{t||(Ji.log("表不存在"),te().then(((t,e)=>{Ji.log("表创建成功",t,e),Ye(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("instrument_type").then((t=>{t||(Ji.log("表不存在"),ee().then(((t,e)=>{Ji.log("表创建成功",t,e),ti(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("connection_types").then((t=>{t||(Ji.log("表不存在"),ne().then(((t,e)=>{Ji.log("表创建成功",t,e),ei(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("connection_standard").then((t=>{t||(Ji.log("表不存在"),se().then(((t,e)=>{Ji.log("表创建成功",t,e),ii(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("clamp_structuretable").then((t=>{t||(Ji.log("表不存在"),ae().then(((t,e)=>{Ji.log("表创建成功",t,e),ni(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("flan_structuretable").then((t=>{t||(Ji.log("表不存在"),oe().then(((t,e)=>{Ji.log("表创建成功",t,e),si(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("clamp_sizeimage").then((t=>{t||(Ji.log("表不存在"),le().then(((t,e)=>{Ji.log("表创建成功",t,e),ai(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("bore_informations").then((t=>{t||(Ji.log("表不存在"),ue().then(((t,e)=>{Ji.log("表创建成功",t,e),oi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("lflowtables").then((t=>{t||(Ji.log("表不存在"),de().then(((t,e)=>{Ji.log("表创建成功",t,e),ui(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("steamstable").then((t=>{t||(Ji.log("表不存在"),he().then(((t,e)=>{Ji.log("表创建成功",t,e),ri(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("type_of_output").then((t=>{t||(Ji.log("表不存在"),_e().then(((t,e)=>{Ji.log("表创建成功",t,e),Ni(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("function_type").then((t=>{t||(Ji.log("表不存在"),fe().then(((t,e)=>{Ji.log("表创建成功",t,e),$i(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("body_materials").then((t=>{t||(Ji.log("表不存在"),ve().then(((t,e)=>{Ji.log("表创建成功",t,e),Pi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("checkbody_materials").then((t=>{t||(Ji.log("表不存在"),ge().then(((t,e)=>{Ji.log("表创建成功",t,e),Ei(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("nomial_diameter").then((t=>{t||(Ji.log("表不存在"),ye().then(((t,e)=>{Ji.log("表创建成功",t,e),Ai(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("nominal_pressures").then((t=>{t||(Ji.log("表不存在"),be().then(((t,e)=>{Ji.log("表创建成功",t,e),zi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("body_materialtable").then((t=>{t||(Ji.log("表不存在"),we().then(((t,e)=>{Ji.log("表创建成功",t,e),ji(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("generating_bodytable").then((t=>{t||(Ji.log("表不存在"),xe().then(((t,e)=>{Ji.log("表创建成功",t,e),Li(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("probe_material").then((t=>{t||(Ji.log("表不存在"),Ce().then(((t,e)=>{Ji.log("表创建成功",t,e),Bi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("explosion_proof_designs").then((t=>{t||(Ji.log("表不存在"),Fe().then(((t,e)=>{Ji.log("表创建成功",t,e),Ii(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("power_supplys").then((t=>{t||(Ji.log("表不存在"),Se().then(((t,e)=>{Ji.log("表创建成功",t,e),Mi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("communications").then((t=>{t||(Ji.log("表不存在"),Te().then(((t,e)=>{Ji.log("表创建成功",t,e),Hi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("communications_interfaces").then((t=>{t||(Ji.log("表不存在"),De().then(((t,e)=>{Ji.log("表创建成功",t,e),Zi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("instruments").then((t=>{t||(Ji.log("表不存在"),ke().then(((t,e)=>{Ji.log("表创建成功",t,e),Vi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("protections").then((t=>{t||(Ji.log("表不存在"),qe().then(((t,e)=>{Ji.log("表创建成功",t,e),Ki(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("FLmaterials").then((t=>{t||(Ji.log("表不存在"),Pe().then(((t,e)=>{Ji.log("表创建成功",t,e),Ui(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("accurategrades").then((t=>{t||(Ji.log("表不存在"),Oe().then(((t,e)=>{Ji.log("表创建成功",t,e),Ri(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("slipcables").then((t=>{t||(Ji.log("表不存在"),$e().then(((t,e)=>{Ji.log("表创建成功",t,e),Wi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("eleinfterfaces").then((t=>{t||(Ji.log("表不存在"),Ne().then(((t,e)=>{Ji.log("表创建成功",t,e),Gi(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("gflowtables").then((t=>{t||(Ji.log("表不存在"),me().then(((t,e)=>{Ji.log("表创建成功",t,e),li(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)})),this.checkTableExists("flowmeter_image").then((t=>{t||(Ji.log("表不存在"),ie().then(((t,e)=>{Ji.log("表创建成功",t,e),ci(),Ji.log("插入成功")})).catch((t=>{Ji.error("表创建失败",t)})))})).catch((t=>{Ji.error(t)}))},methods:{checkTableExists(t){return new Promise(((e,i)=>{this.dbConnection.transaction((n=>{n.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name=?",[t],(function(t,i){const n=i.rows.length>0;e(n)}),(function(t,e){i(e.message)}))}))}))}}},Xi=Qi,Yi=(0,c.Z)(Xi,Qt,Xt,!1,null,null,null),tn=Yi.exports,en=i(81273),nn={name:"MyFooter",components:{Process:E,Fluid:W,Outcome:Z,Size:ot,Chat:T,Loss:ht,Specs:Mt,Draw:Wt,selectType:Gt["default"],ElDivider:v.Divider,ExportWord2:Jt["default"],Db:tn},data(){return{processData:[],fluidData:[],sizeData:[],chartData:[],measurementData:[],outcmomeData:[],projectData:[],table8Data:[],speciData:[],accessData:[],dimensionalData:[],dimenData:[],materialData:[],drawImages:[],speciImage:[],lossImage:[]}},methods:{handleFileUpload(t){const e=t.target.files[0];f.convertToHtml({arrayBuffer:e}).then((t=>{const e=t.value,n=i(27953),s=n.load(e),a=[];s("img").each(((t,e)=>{const i=s(e).attr("src"),n=s(e).attr("alt"),o={src:i,alt:n};a.push(o),s(e).remove()})),en.log("保存的图片信息：",a),this.drawImages=a.slice(-2),en.log(this.drawImages),this.lossImage=[a[0]],en.log("这是第一张照片",this.lossImage),this.speciImage=[a[2]],en.log("这是第二张照片",this.speciImage),s("img").remove();const o=s.html(),l=n.load(o),u=l("table"),r=s("table").eq(9),c=r.find("tr"),p=[];for(let i=1;i<c.length;i++){const t=s(c[i]),e=t.find("td"),n=s(e[0]).text().trim();let a=s(e[1]).text().trim();(n.includes("输出方式")||n.includes("仪表类型")||n.includes("功能类型")||n.includes("连接方式")||n.includes("表体材质")||n.includes("公称口径")||n.includes("公称压力")||n.includes("探头材质")||n.includes("防")||n.includes("供电电源")||n.includes("通讯功能")||n.includes("通讯接口")||n.includes("仪表结构"))&&(a=a.split(",")),p[n]=a}en.log(p),this.table8Data=p,u.each(((t,e)=>{const i=l(e),n=i.find("tr:first-child td:first-child strong").text().trim();if("测量误差及压力损失 Measurement error & Pressure loss"==n){const t=i.find("tr"),e=[],n=s(t[1]).find("td").map(((t,e)=>s(e).text().trim())).get();en.log(n);for(let i=2;i<t.length;i++){const a=s(t[i]),o=a.find("td");for(let t=0;t<o.length;t++){const i=s(o[t]).text().trim();e[n[t]]||(e[n[t]]=[]),e[n[t]].push(i)}}this.measurementData=e,en.log(this.measurementData)}else if("计算结果 Calculated results"==n){const t=i.find("tr"),e=[];for(let i=2;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();for(let i=1;i<a.length;i++){const n=s(a[i]),l=n.text().trim(),u=s(t[1]).find("td").eq(i).text().trim();e[o]||(e[o]={}),e[o][u]=l}}this.outcmomeData=e}else if("项目信息 Project"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();let l=s(a[1]).text().trim();"流量计类型"===o&&(l=l.split(",")),e[o]=l}this.projectData=e}else if("工艺参数 Proccess parameter"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();let l=s(a[1]).text().trim();("管道材质"==o||"介质名称"==o)&&(l=l.split(",")),e[o]=l}this.processData=e,en.log("项目信息是",this.processData)}else if("流量计规格 Specifications"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();let l=s(a[1]).text().trim();(o.includes("最高使用温度")||"本体材质"==o||"检测体材质"==o||"安装方式"==o||"温压补偿方式"==o||"流量计防护等级"==o||"准确度等级"==o||"最高使用压力(Mpa)"==o||o.includes("发生体")||"流量计法兰材质"==o||"电器接口形式"==o||"流量计连接标准"==o||"分体电缆长度"==o||"插入式连接方式"==o)&&(l=l.split(",")),e[o]=l}this.speciData=e}else if("流量计附件 Accessories"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();let l=s(a[1]).text().trim();("流量配套法兰螺栓"===o||"流量配套密封垫片"===o||"分体支架"===o||"法兰螺栓材质"===o||"垫片材质"===o)&&(l=l.split(",")),e[o]=l}this.accessData=e,en.log(this.accessData)}else if("结构尺寸图 Dimensional drawing"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim(),l=s(a[1]).text().trim();e[o]=l}this.dimensionalData=e}else if("流量计安装尺寸 Dimensions"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim(),l=s(a[1]).text().trim();e[o]=l}this.dimenData=e}else if("介质参数 Fluid properties"==n){const t=i.find("tr"),e=[];for(let i=2;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();for(let i=1;i<a.length;i++){const n=s(a[i]),l=n.text().trim(),u=s(t[1]).find("td").eq(i).text().trim();e[o]||(e[o]={}),e[o][u]=l}}this.fluidData=e}else if("多口径比对 Compare sizes"==n){const t=i.find("tr"),e=[];for(let i=2;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();for(let i=1;i<a.length;i++){const n=s(a[i]);let l=n.text().trim();const u=s(t[1]).find("td").eq(i).text().trim();e[o]||(e[o]={}),"仪表尺寸"==o&&"当前尺寸"==u&&(l=l.split(",")),e[o][u]=l}}this.sizeData=e}else if("流量计图表 Chart"==n){const t=i.find("tr"),e=[];for(let i=2;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim();for(let i=1;i<a.length;i++){const n=s(a[i]),l=n.text().trim(),u=s(t[1]).find("td").eq(i).text().trim();e[o]||(e[o]={}),e[o][u]=l}}this.chartData=e}else if("流量计材质 Material"==n){const t=i.find("tr"),e=[];for(let i=1;i<t.length;i++){const n=s(t[i]),a=n.find("td"),o=s(a[0]).text().trim(),l=s(a[1]).text().trim();e[o]=l}this.materialData=e}}))})).catch((t=>{en.error("解析文件时出现错误：",t)}))}}},sn=nn,an=(0,c.Z)(sn,h,_,!1,null,null,null),on=an.exports,ln={name:"App",components:{MyHeader:m,MyMain:d["default"],MyFooter:on}},un=ln,rn=(0,c.Z)(un,s,a,!1,null,null,null),cn=rn.exports,pn=i(42241);n["default"].use(pn.ZP);const mn=[{path:"/",redirect:{name:"userInfo"},component:()=>Promise.resolve().then(i.bind(i,57034)),children:[{path:"/user",name:"userInfo",component:()=>Promise.resolve().then(i.bind(i,96465))}]},{path:"/exportWord2",name:"exportWord2",component:()=>Promise.resolve().then(i.bind(i,33559))},{path:"/seuif97",name:"seuif97",component:()=>i.e(698).then(i.bind(i,71698))}],dn=new pn.ZP({routes:mn});var hn=dn,_n=i(90408);n["default"].use(_n.ZP);const fn=new _n.ZP.Store({state:{chartData:null},mutations:{setChartData(t,e){t.chartData=e}}});var vn=fn,gn=i(94197),yn=i.n(gn);const bn=new n["default"];n["default"].use(g()),n["default"].use(yn()),n["default"].use(f),n["default"].config.productionTip=!1,new n["default"]({store:vn,router:hn,render:t=>t(cn)}).$mount("#app")},66949:function(t,e,i){"use strict";t.exports=i.p+"img/logo.e8d265a3.png"},52361:function(){},94616:function(){}},e={};function i(n){var s=e[n];if(void 0!==s)return s.exports;var a=e[n]={id:n,loaded:!1,exports:{}};return t[n].call(a.exports,a,a.exports,i),a.loaded=!0,a.exports}i.m=t,function(){i.amdO={}}(),function(){var t=[];i.O=function(e,n,s,a){if(!n){var o=1/0;for(c=0;c<t.length;c++){n=t[c][0],s=t[c][1],a=t[c][2];for(var l=!0,u=0;u<n.length;u++)(!1&a||o>=a)&&Object.keys(i.O).every((function(t){return i.O[t](n[u])}))?n.splice(u--,1):(l=!1,a<o&&(o=a));if(l){t.splice(c--,1);var r=s();void 0!==r&&(e=r)}}return e}a=a||0;for(var c=t.length;c>0&&t[c-1][2]>a;c--)t[c]=t[c-1];t[c]=[n,s,a]}}(),function(){i.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return i.d(e,{a:e}),e}}(),function(){i.d=function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})}}(),function(){i.f={},i.e=function(t){return Promise.all(Object.keys(i.f).reduce((function(e,n){return i.f[n](t,e),e}),[]))}}(),function(){i.u=function(t){return"js/"+t+".eacbf135.js"}}(),function(){i.miniCssF=function(t){}}(),function(){i.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){var t={},e="flowRecord:";i.l=function(n,s,a,o){if(t[n])t[n].push(s);else{var l,u;if(void 0!==a)for(var r=document.getElementsByTagName("script"),c=0;c<r.length;c++){var p=r[c];if(p.getAttribute("src")==n||p.getAttribute("data-webpack")==e+a){l=p;break}}l||(u=!0,l=document.createElement("script"),l.charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",e+a),l.src=n),t[n]=[s];var m=function(e,i){l.onerror=l.onload=null,clearTimeout(d);var s=t[n];if(delete t[n],l.parentNode&&l.parentNode.removeChild(l),s&&s.forEach((function(t){return t(i)})),e)return e(i)},d=setTimeout(m.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=m.bind(null,l.onerror),l.onload=m.bind(null,l.onload),u&&document.head.appendChild(l)}}}(),function(){i.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){i.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t}}(),function(){i.p=""}(),function(){var t={143:0};i.f.j=function(e,n){var s=i.o(t,e)?t[e]:void 0;if(0!==s)if(s)n.push(s[2]);else{var a=new Promise((function(i,n){s=t[e]=[i,n]}));n.push(s[2]=a);var o=i.p+i.u(e),l=new Error,u=function(n){if(i.o(t,e)&&(s=t[e],0!==s&&(t[e]=void 0),s)){var a=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;l.message="Loading chunk "+e+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,s[1](l)}};i.l(o,u,"chunk-"+e,e)}},i.O.j=function(e){return 0===t[e]};var e=function(e,n){var s,a,o=n[0],l=n[1],u=n[2],r=0;if(o.some((function(e){return 0!==t[e]}))){for(s in l)i.o(l,s)&&(i.m[s]=l[s]);if(u)var c=u(i)}for(e&&e(n);r<o.length;r++)a=o[r],i.o(t,a)&&t[a]&&t[a][0](),t[a]=0;return i.O(c)},n=self["webpackChunkflowRecord"]=self["webpackChunkflowRecord"]||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))}();var n=i.O(void 0,[998],(function(){return i(21640)}));n=i.O(n)})();
//# sourceMappingURL=app.0590f82f.js.map